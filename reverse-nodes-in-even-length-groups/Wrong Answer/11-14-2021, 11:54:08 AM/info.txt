{"id":586901290,"lang":"cpp","time":"1 month, 1 week","timestamp":1636871048,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/586901290/","is_pending":"Not Pending","title":"Reverse Nodes in Even Length Groups","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseEvenLengthGroups(ListNode* head) {\n        vector<int> nodes;\n        ListNode* h = head;\n        while(h){\n            nodes.push_back(h->val);\n            h = h->next;\n        }\n        int n = nodes.size();\n        for(int i = 0,j = 0,cnt= 1;i < n && j < n; ){\n            j = i + cnt - 1;\n            if(j > n-1) j = n-1;\n            reverse(nodes.begin() + i,nodes.begin() + j + 1);\n            i = j + 1;\n            cnt += 1;\n        }\n        ListNode *ans = new ListNode(nodes[0]);\n        ListNode *fans = ans;\n        \n        for(int i = 1;i < n;i++){\n            ListNode *newnode = new ListNode(nodes[i]);\n            ans->next = newnode;\n            ans = newnode;\n        }\n        return fans;\n    }\n};","compare_result":"01111100000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000","title_slug":"reverse-nodes-in-even-length-groups"}