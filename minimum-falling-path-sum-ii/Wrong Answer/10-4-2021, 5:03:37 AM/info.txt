{"id":565314909,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1633304017,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/565314909/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"N/A","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& G) {\n        \n        int n = G.size();\n        int m = G[0].size();\n        \n        vector<vector<int>> dp(n,vector<int>(m,INT_MAX));\n        \n        dp[0] = G[0];\n        for(int i = 1;i < n;i++){\n            for(int j = 0; j < m;j++){\n                if( j > 0) dp[i][j] = min(dp[i][j], dp[i-1][j-1] + G[i][j]);\n                if( j < (m - 1)) dp[i][j] = min(dp[i][j], dp[i-1][j+1] + G[i][j]);\n            }\n            // for(int j = 0; j < m;j++){\n            //     cout << dp[i][j] <<  \" \";\n            // }\n            // cout << endl;\n            \n        }\n        \n        int ans = INT_MAX;\n        for(int j = 0; j < m;j++){\n            ans = min(ans,dp[n-1][j]);\n        }\n        return ans;\n    }\n};","compare_result":"111000000000010","title_slug":"minimum-falling-path-sum-ii"}