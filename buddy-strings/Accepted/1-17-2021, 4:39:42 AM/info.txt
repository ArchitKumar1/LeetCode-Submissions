{"id":443844591,"lang":"cpp","time":"11 months, 1 week","timestamp":1610838582,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/443844591/","is_pending":"Not Pending","title":"Buddy Strings","memory":"7 MB","code":"class Solution {\npublic:\n    bool buddyStrings(string A, string B) {\n        vector<pair<char,char>> V;\n        int N = A.size();\n        int M = B.size();\n        \n        if(N!=M) return 0;\n        vector<int> same(26,0);\n        \n        for(int i = 0;i<N;i++){\n            if(A[i]!=B[i]){\n                V.emplace_back(A[i],B[i]);\n            }else{\n                same[A[i]-'a']++;\n            }\n        }\n        if(V.size() == 0) {\n            bool safe = 0;\n            \n            for(int c : same){\n                if(c > 1){\n                    safe = 1;\n                }\n            }\n            return safe;\n            \n        }\n        if(V.size()!=2){\n            return 0;\n        }\n        if(V[0].first == V[1].second && V[0].second == V[1].first ) return 1;\n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"buddy-strings"}