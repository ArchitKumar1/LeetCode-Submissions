{"id":371861768,"lang":"cpp","time":"1 year, 5 months","timestamp":1595767238,"status_display":"Accepted","runtime":"168 ms","url":"/submissions/detail/371861768/","is_pending":"Not Pending","title":"Number of Good Leaf Nodes Pairs","memory":"41.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int fans =0 ;\n    int D;\n    void dfs(TreeNode* root){\n        if(!root) return ;\n        vector<int>x,y;\n        solve(root->left,x,1),solve(root->right,y,1);\n        \n        for(int c : x){\n            for(int d : y){\n                if( c + d <= D){\n                    fans += 1;\n                }\n            }\n        }\n        dfs(root->left),dfs(root->right);\n    }\n    \n    void solve(TreeNode* root,vector<int> &leafs,int dist){\n        if(!root) return;\n        if(!root->left && !root->right){\n            leafs.push_back(dist);\n        }else {\n            solve(root->left,leafs,dist+1);\n            solve(root->right,leafs,dist+1);\n        }\n    }\n    \n    int countPairs(TreeNode* root, int distance) {\n        D = distance;\n        dfs(root);\n        return fans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-good-leaf-nodes-pairs"}