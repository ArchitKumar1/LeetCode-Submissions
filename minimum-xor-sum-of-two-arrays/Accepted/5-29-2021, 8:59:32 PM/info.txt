{"id":499921107,"lang":"cpp","time":"6 months, 4 weeks","timestamp":1622302172,"status_display":"Accepted","runtime":"228 ms","url":"/submissions/detail/499921107/","is_pending":"Not Pending","title":"Minimum XOR Sum of Two Arrays","memory":"17.9 MB","code":"class Solution {\npublic:\n    int minimumXORSum(vector<int>& nums1, vector<int>& nums2) {\n         int n = nums1.size();\n         int m = nums2.size();\n        \n        vector<int> dp(1 << m,1e9);\n        dp[0] = 0;\n        for(int i = 0;i <n;i++){\n            vector<int> ndp(1 << m,1e9);\n            for(int ma = 0; ma < 1 << m;ma++){\n                for(int j = 0;j < m;j++){\n                    if((ma>>j&1) ==0 ){\n                        int nma = ma | (1 << j);\n                        ndp[nma] = min(ndp[nma], dp[ma] + (nums1[i]^nums2[j]));\n                    }\n                }\n            }\n            swap(dp,ndp);\n        }\n        cout << endl;\n        return dp[-1 +(1<<m)];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-xor-sum-of-two-arrays"}