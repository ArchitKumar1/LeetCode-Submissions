{"id":334053576,"lang":"cpp","time":"1 year, 7 months","timestamp":1588553771,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/334053576/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"N/A","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n        int ans = 0;\n        int n = nums.size();\n        stack<int> mini,maxi;\n        int i = 0;\n        \n        auto stacky = [&](int x){\n            if(mini.size() == 0){\n                mini.push(x);\n            }else{\n                if(mini.top() >= x){\n                    mini.push(x);\n                }\n            }\n            if(maxi.size() == 0){\n                maxi.push(x);\n            }else{\n                if(maxi.top() <= x){\n                    maxi.push(x);\n                }\n            }\n        };\n        auto remove = [&](int x){\n            \n            if(mini.top() == x){\n                mini.pop();\n            }\n            if(maxi.top() == x){\n                maxi.pop(x);\n            }\n            \n        };\n        auto check = [&](){\n            int a = maxi.size() ? maxi.top() : 0;\n            int b = mini.size() ? mini.top() : 0;\n            return a -b;\n        };\n        \n        for(int j =0;j<n;j++){\n            stacky(nums[j]);\n            \n            while(check() > limit){\n                cout << check() << \" \" << j << \" \"  << i << endl;\n                remove(nums[i]);\n                i++;\n            }\n            ans =max(ans,j-i+1);\n        }\n        return ans;\n    }\n};","compare_result":null,"title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"}