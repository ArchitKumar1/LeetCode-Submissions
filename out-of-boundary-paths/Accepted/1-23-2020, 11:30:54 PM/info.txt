{"id":296817677,"lang":"cpp","time":"1 year, 11 months","timestamp":1579802454,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/296817677/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"11.6 MB","code":"class Solution {\npublic:\n    int mod = 1000*1000*1000 + 7;\n    int solve(vector<vector<vector<int>>> &dp,int m,int n,int N ,int i,int j){\n        if(i<0 || i>m-1 || j<0 || j>n-1){\n            return 1;\n        }\n        else if(N == 0) return 0;\n        if(dp[i][j][N]!=-1){\n            return dp[i][j][N];\n        }\n        int dx[4]= {0,-1,0,1};\n        int dy[4]= {1,0,-1,0};\n        int total=0;\n        for(int k =0 ;k<4;k++){\n            total = (total+ solve(dp,m,n,N-1,i+dx[k],j+dy[k]))%mod;\n        }\n        dp[i][j][N] = total;\n        return dp[i][j][N];\n    }\n    \n    int findPaths(int m, int n, int N, int i, int j) {\n        vector<vector<vector<int>>> dp(m,vector<vector<int>>(n,vector<int>(N+1,-1)));\n        return solve(dp,m,n,N,i,j);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"out-of-boundary-paths"}