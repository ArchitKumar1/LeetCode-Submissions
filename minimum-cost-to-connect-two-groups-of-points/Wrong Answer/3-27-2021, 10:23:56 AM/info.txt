{"id":472905268,"lang":"cpp","time":"9Â months","timestamp":1616820836,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/472905268/","is_pending":"Not Pending","title":"Minimum Cost to Connect Two Groups of Points","memory":"N/A","code":"class Solution {\npublic:\n    int connectTwoGroups(vector<vector<int>>& cost) {\n        int n = cost.size();\n        int m = cost[0].size();\n        \n        int N = 1 << n, M = 1 << m;\n        \n        vector<vector<int>> dp(n+1,vector<int>(M,1e9));\n        \n        vector<int> mini(m,INT_MAX);\n        for(int j = 0;j<m;j++){\n            for(int i = 0;i<m;i++){\n                mini[j] = min(mini[j],cost[i][j]);\n            }\n        }\n        dp[0][0] = 0;\n        for(int s = 0;s < n;s++){\n            for(int m2 = 0;m2 < M;m2++){\n                for(int j = 0;j < m;j++){\n                    if(s < n-1 ){\n                        int nm2 = m2 | (1 << j);\n                        dp[s+1][nm2] = min(dp[s+1][nm2], dp[s][m2] + cost[s][j]);\n                    }\n                } \n                if(s == n-1){\n                    int cost = 0;\n                    for(int j = 0;j < m;j++){\n                        if( !(m2 & (1 << j))){\n                            cost += mini[j];\n                        }\n                    }\n                    dp[s+1][M-1] = min(dp[s+1][M-1],dp[s][m2] + cost); \n                }\n                \n            }\n        }\n        return dp[n][M-1];\n        \n    }\n};","compare_result":"10010000000000010000000000100000000010000000000001000000000010000010001000110001011","title_slug":"minimum-cost-to-connect-two-groups-of-points"}