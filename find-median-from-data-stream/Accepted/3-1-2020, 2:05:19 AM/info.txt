{"id":308037107,"lang":"cpp","time":"1 year, 9 months","timestamp":1583008519,"status_display":"Accepted","runtime":"176 ms","url":"/submissions/detail/308037107/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"41.3 MB","code":"class MedianFinder {\npublic:\n    /** initialize your data structure here. */\n    \n    priority_queue<int> s;\n    priority_queue<int,vector<int>,greater<int>> l;\n    MedianFinder() {\n        \n    }\n    \n    void addNum(int num) {\n        s.push(num);\n        l.push(s.top());\n        s.pop();\n        while(s.size() < l.size()){\n            s.push(l.top());\n            l.pop();\n        }\n    }\n    \n    double findMedian() {\n        if(s.size() == l.size()){\n            return (1.0*s.top() + l.top())/2;\n        }else{\n            return (double)s.top();\n        }\n    }\n};\n\n/**\n * Your MedianFinder object will be instantiated and called as such:\n * MedianFinder* obj = new MedianFinder();\n * obj->addNum(num);\n * double param_2 = obj->findMedian();\n */","compare_result":"111111111111111111","title_slug":"find-median-from-data-stream"}