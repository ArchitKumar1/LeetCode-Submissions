{"id":322996956,"lang":"cpp","time":"1 year, 8 months","timestamp":1586593441,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/322996956/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int l = 0;\n    int r = 0;\n    \n    void dfs(TreeNode* root,int d){\n        if(root == NULL) return;\n        l = min(l,d);\n        r = max(r,d);\n        dfs(root->right,d+1);\n        dfs(root->left,d-1);\n        \n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        dfs(root,0);\n        // cout << r << \" \" << l << endl;\n        return r-l;\n    }\n};","compare_result":"1111111001111001000010011111001011000001001000000000010001000010010011111111111100000100000000100000000000","title_slug":"diameter-of-binary-tree"}