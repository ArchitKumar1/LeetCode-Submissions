{"id":467486478,"lang":"cpp","time":"9 months, 2 weeks","timestamp":1615692421,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/467486478/","is_pending":"Not Pending","title":"Maximum Score of a Good Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maximumScore(vector<int>& nums, int k) {\n        \n        int fans = 0;\n        int ans = 0;\n        int n = nums.size();\n        \n        int i = k;\n        int j = k;\n        \n        int mini = INT_MAX;\n        \n        while(i>= 0 || j < n){\n            int ch = 0;\n            cout << i << \" \" << j << endl;\n            if(i == j){\n                mini = min(mini,nums[i]);\n                ans = max(ans,mini*(j-i+1));\n                i--,j++;\n                ch = 1;\n            }else{\n                if(i == -1){\n                    int newans = min(mini,nums[j])*(j-i);\n                    if(newans >= ans){\n                        ans = newans;\n                        mini = min(mini,nums[j]);\n                        j++; ch = 1;\n                    }\n                }else if(j == n){\n                    int newans = min(mini,nums[i])*(j-i);\n                    cout << i << \" K \" << nums[i] << endl;\n                    if(newans >= ans){\n                        cout << i << \" K \" << nums[i] << endl;\n                        ans = newans;\n                        mini = min(mini,nums[i]);\n                        i--; ch = 1;\n                    }\n                }else{\n                    int l = nums[i];\n                    int r = nums[j];\n                    if(l > r){\n                        int newans = min(mini,nums[i])*(j-i);\n                        if(newans >= ans){\n                            ans = newans;\n                            mini = min(mini,nums[i]);\n                            i--; ch = 1;\n                        }\n                    }else{\n                        int newans = min(mini,nums[j])*(j-i);\n                        if(newans >= ans){\n                            ans = newans;\n                            mini = min(mini,nums[j]);\n                            j++; ch = 1;\n                        }\n                    }\n                }\n            }\n            if(!ch) break;\n        }\n        return ans;\n    }\n};","compare_result":"111111000000000000100000001010000010000000000000000010000000000000000111","title_slug":"maximum-score-of-a-good-subarray"}