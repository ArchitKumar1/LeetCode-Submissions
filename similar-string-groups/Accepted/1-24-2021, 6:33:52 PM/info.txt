{"id":447174343,"lang":"cpp","time":"11Â months","timestamp":1611493432,"status_display":"Accepted","runtime":"248 ms","url":"/submissions/detail/447174343/","is_pending":"Not Pending","title":"Similar String Groups","memory":"110.2 MB","code":"class dsu {\n    public:\n    vector<int> par;\n    int n;\n    dsu(int _n) : n(_n) {\n        par.resize(n);\n        iota(par.begin(), par.end(), 0);\n    } \n    inline int get(int x) {\n        return (x == par[x] ? x : (par[x] = get(par[x])));\n    }\n    inline bool merge(int x, int y) {\n        x = get(x);\n        y = get(y);\n        if (x != y) {\n            par[x] = y;\n            return true;\n        }\n        return false;\n    }\n};\n    \n\nclass Solution {\npublic:\n    \n    bool same(string s,string t){\n        int cnt = 0;\n        for(int i = 0;i<s.size();i++){\n            cnt += (s[i] != t[i]);\n        }\n        return (cnt == 2 || cnt == 0);\n    }\n    \n    \n    int numSimilarGroups(vector<string>& strs) {\n        \n        int n = strs.size();\n        const int N = 1e3+5;\n        \n        dsu D(N);\n        \n        for(int i = 0;i<n;i++){\n            for(int j = i+1;j<n;j++){\n                if(same(strs[i],strs[j])){\n                    D.merge(i,j);\n                }\n            }\n        }\n        unordered_set<int> s;\n        for(int i = 0;i<n;i++){\n            s.insert(D.get(i));\n        }\n        return s.size();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"similar-string-groups"}