{"id":542192625,"lang":"cpp","time":"4Â months","timestamp":1629599997,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/542192625/","is_pending":"Not Pending","title":"Find Unique Binary String","memory":"10.6 MB","code":"class Solution {\npublic:\n    string bin(int num){\n        string s;\n        while(num){\n            \n            if(num&1)s+= '1';\n            else s+= '0';\n            num/=2;\n            \n        }\n        reverse(s.begin(),s.end());\n        return s;\n    }\n    string findDifferentBinaryString(vector<string>& nums) {\n        const int n = nums[0].size();\n        map<string,int> m1;\n        for(auto x : nums) m1[x]++;\n        for(int i = 0;i < 1 << n;i++){\n            \n            string s = bin(i);\n            cout << s << endl;\n            int l = n - s.size();\n            string p = \"\";\n            while(l--) p += '0';\n            s = p + s;\n            cout << i << \" \" << s << \" : \" << endl;\n            if(!m1[s]) return s;\n        }\n        return \"\";\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-unique-binary-string"}