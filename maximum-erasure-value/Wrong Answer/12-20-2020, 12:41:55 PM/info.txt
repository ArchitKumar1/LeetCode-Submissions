{"id":432537303,"lang":"cpp","time":"1Â year","timestamp":1608448315,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/432537303/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"N/A","code":"class Solution {\npublic:\n    int maximumUniqueSubarray(vector<int>& nums) {\n        map<int,int> m1;\n        int ones = 0;\n        \n        int curr = 0;\n        int fans = 0;\n        for(int i = 0,j=0;j<nums.size();j++){\n            \n            m1[nums[j]]++;\n            curr += nums[j];\n            if(m1[nums[j]] == 1){\n                ones +=1 ;\n            }\n            if(m1[nums[j]] == 2){\n                ones -=1 ;\n            }\n            \n            while(ones < (j-i+1)){\n                m1[nums[i]]--;\n                curr -= nums[i];\n                i++;\n                if(m1[nums[i]] == 1){\n                    ones ++;\n                }\n                if(m1[nums[i]] == 0){\n                    ones --;\n                }\n            }\n            fans = max(fans,curr);\n            \n        }\n        return fans;\n    }\n};","compare_result":"10111111000000000000000000000000000000000000000000000000001111","title_slug":"maximum-erasure-value"}