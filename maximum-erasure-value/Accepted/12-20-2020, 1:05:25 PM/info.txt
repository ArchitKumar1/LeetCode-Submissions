{"id":432544030,"lang":"cpp","time":"1Â year","timestamp":1608449725,"status_display":"Accepted","runtime":"1340 ms","url":"/submissions/detail/432544030/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"146.1 MB","code":"class Solution {\npublic:\n    int maximumUniqueSubarray(vector<int>& nums) {\n        map<int,int> m1;\n        set<int> s1;\n        int curr = 0;\n        int fans = 0;\n        for(int i = 0,j=0;j<nums.size();j++){\n        \n            s1.insert(nums[j]);\n            m1[nums[j]]++;\n            curr += nums[j];\n            \n            while(i< nums.size() && s1.size() < (j-i+1)){\n                if(--m1[nums[i]]== 0) s1.erase(s1.find(nums[i]));\n                curr -= nums[i]; \n                i++;\n            }\n            fans = max(fans,curr);\n        }\n        return fans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-erasure-value"}