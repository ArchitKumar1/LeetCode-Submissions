{"id":209292693,"lang":"cpp","time":"2 years, 10 months","timestamp":1550657088,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/209292693/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> a[100];\n    int ma = 0;\n    void dfs(TreeNode* root,int depth){\n        if(root == NULL)\n            return ;\n        a[depth].push_back(root->val);\n        ma = max(ma,depth);\n        dfs(root->left,depth + 1);\n        dfs(root->right,depth + 1);\n    }\n    int findBottomLeftValue(TreeNode* root) {\n        int ans;\n        dfs(root,0);\n        return a[ma][0];\n    }\n};","compare_result":null,"title_slug":"find-bottom-left-tree-value"}