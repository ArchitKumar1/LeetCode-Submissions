{"id":205098793,"lang":"cpp","time":"2 years, 10 months","timestamp":1549024548,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/205098793/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int m=0;\n    void dfs(TreeNode* root){\n        if(root==NULL) return;\n        if(root->left==NULL and root->right ==NULL) m=root->val;\n        dfs(root->left);\n    }\n    int findBottomLeftValue(TreeNode* root) {\n        dfs(root);\n        return m;\n    }\n};","compare_result":"10111010101010011000111000000000001110000000000011111100111100001111000000","title_slug":"find-bottom-left-tree-value"}