{"id":209292828,"lang":"cpp","time":"2 years, 10 months","timestamp":1550657162,"status_display":"Accepted","runtime":"64 ms","url":"/submissions/detail/209292828/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"24.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> a[100000];\n    int ma = 0;\n    void dfs(TreeNode* root,int depth){\n        if(root == NULL)\n            return ;\n        a[depth].push_back(root->val);\n        ma = max(ma,depth);\n        dfs(root->left,depth + 1);\n        dfs(root->right,depth + 1);\n    }\n    int findBottomLeftValue(TreeNode* root) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        int ans;\n        dfs(root,0);\n        return a[ma][0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value"}