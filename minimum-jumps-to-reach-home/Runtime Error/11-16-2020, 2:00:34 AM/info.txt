{"id":420611484,"lang":"cpp","time":"1 year, 1 month","timestamp":1605472234,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/420611484/","is_pending":"Not Pending","title":"Minimum Jumps to Reach Home","memory":"N/A","code":"class Solution {\n    \n\npublic:\n    map<int,int> m1;\n    vector<int> dp;\n    int a,b,x;\n    int INF = 1e9;\n    int solve(int pos,int last){\n        \n        cout << pos << endl;\n        if(pos == x) return 0;\n        if(pos > 2000) return 1e9;\n        if(pos < 0) return 1e9;\n        if(m1[pos] == 1) return 1e9;\n        \n        if(dp[pos]!= -1) return dp[pos];\n        \n        int ans = 1e9;\n        ans = min(ans,1+solve(pos+a,0));\n        if(last != 1) ans = min(ans,1+solve(pos-b,0));\n        return dp[pos] = ans;\n    }\n    \n    int minimumJumps(vector<int>& forbidden, int A, int B, int X) {\n        a = A,b=B,x=X;\n        int N = 3000;\n        dp.assign(N,-1);\n        for(int c :forbidden )m1[c]++;\n        return solve(0,0);\n    \n        \n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-jumps-to-reach-home"}