{"id":310639602,"lang":"cpp","time":"1 year, 9 months","timestamp":1583696985,"status_display":"Accepted","runtime":"308 ms","url":"/submissions/detail/310639602/","is_pending":"Not Pending","title":"Reconstruct a 2-Row Binary Matrix","memory":"24 MB","code":"class Solution {\npublic:\n    vector<vector<int>> reconstructMatrix(int upper, int lower, vector<int>& colsum) {\n        int s = 0;\n        int U = upper;\n        int L = lower;\n        for(int c : colsum){\n            s += c;\n        }\n        vector<vector<int>> v;\n        int n = colsum.size();\n        vector<vector<int>> ans(2,vector<int>(n,0));\n        for(int i = 0;i<n;i++){\n            if(colsum[i] == 0){\n                continue;\n            }else if(colsum[i] == 1){\n                if(lower == 0){\n                    ans[0][i] = 1;\n                    upper = upper - 1;\n                }else if(upper == 0){\n                    ans[1][i] = 1;\n                    lower = lower - 1;\n                }\n                else if(lower > upper){\n                    ans[1][i] = 1;\n                    lower = lower - 1;\n                }\n                else{\n                    ans[0][i] = 1;\n                    upper = upper - 1;\n                }\n            }else{\n                ans[0][i] +=1;\n                ans[1][i] +=1;\n                upper--;lower--;\n            }\n        }\n        int u = 0;\n        int l = 0;\n        for(int i = 0;i<n;i++){\n            u += ans[0][i];\n            l += ans[1][i];\n        }\n        if(u == U && l == L){\n            return ans;\n        }else{\n            return v;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"reconstruct-a-2-row-binary-matrix"}