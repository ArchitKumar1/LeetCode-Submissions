{"id":522140712,"lang":"cpp","time":"5 months, 1 week","timestamp":1626218370,"status_display":"Accepted","runtime":"656 ms","url":"/submissions/detail/522140712/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"17.4 MB","code":"class Solution {\npublic:\n    bool makesquare(vector<int>& m) {\n        int n = m.size();\n        int sum = 0;\n        for(int c : m) sum+= c;\n        \n        if(sum %4 !=0) return 0;\n        \n        sum /= 4;\n        vector<int> dp(1 << n);\n        \n        for(int i = 0;i < 1 << n;i++){\n            int su = 0;\n            for(int j = 0;j < n;j++){\n                if(i>>j&1) su += m[j];\n            }\n            if(su == sum){\n                dp[i] = 1;\n            }\n        }\n        vector<int> masks;\n        for(int i = 0;i < 1 << n;i++){\n            if(dp[i] == 1){\n                masks.push_back(i);\n            }\n        }        \n        int M = masks.size();\n        cout << M << endl;\n        for(int i = 0;i < M;i++){\n            cout << bitset<5>(i) << endl;\n        }\n    \n        for(int a = 0;a < M;a++){\n            for(int b = a+1;b < M;b++){\n                if(masks[a] & masks[b]) continue;\n                for(int c = b+1;c < M;c++){\n                    // if((masks[a] & masks[b]) || (masks[b] & masks[c]) || (masks[b] & masks[c])) continue;\n                    for(int d = c+1;d < M;d++){\n                        // if((masks[a] & masks[b]) || (masks[b] & masks[c] || ()) continue;\n                        if( (masks[a] ^ masks[b] ^ masks[c] ^ masks[d]) != (-1 + (1 << n)) ) continue;\n                        cout << bitset<5>(masks[a]) << \" \" << bitset<5>(masks[b]) << \" \" << bitset<5>(masks[c]) << \" \" << bitset<5>(masks[d]) << \" \\n\"; \n                        \n                        return 1;\n                    }\n                }\n            }\n        }\n        return 0;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matchsticks-to-square"}