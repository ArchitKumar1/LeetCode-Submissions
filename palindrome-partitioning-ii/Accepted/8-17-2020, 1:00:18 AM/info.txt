{"id":381855649,"lang":"cpp","time":"1 year, 4 months","timestamp":1597606218,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/381855649/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"8.7 MB","code":"class Solution {\npublic:\n    int minCut(string s) {\n        int n = s.size();\n        bool pali[n][n];\n        memset(pali,0,sizeof(pali));\n        \n        for(int  l =0;l<n;l++){\n            for(int i = 0;i+l<n;i++){\n                int j = i+l;\n                if(i == j && s[i] == s[j]) pali[i][j] = 1;\n                else if(i+1 == j && s[i] == s[j]) pali[i][j] = 1;\n                else if(s[i] == s[j] && pali[i+1][j-1]) pali[i][j] = 1;\n            }\n        }\n        int dp[n];\n        \n        for(int i = 0;i<n;i++){\n            dp[i] = INT_MAX;\n            for(int j = 0;j<i;j++){\n                if(pali[j+1][i]){\n                    dp[i] = min(dp[i],1+dp[j]);\n                }   \n            }\n            if(pali[0][i]) dp[i] = 0;\n        }\n        return dp[n-1];\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"palindrome-partitioning-ii"}