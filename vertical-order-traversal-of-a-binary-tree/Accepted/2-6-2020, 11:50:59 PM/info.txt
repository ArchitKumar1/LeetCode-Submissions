{"id":300827118,"lang":"cpp","time":"1 year, 10 months","timestamp":1581013259,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/300827118/","is_pending":"Not Pending","title":"Vertical Order Traversal of a Binary Tree","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\n    \n    \npublic:\n    vector<pair<int,int>> vec[2500];\n    \n    void dfs(TreeNode* root,int side,int depth){\n        if(root == NULL)return ;\n        vec[side].push_back({depth,root->val});\n        dfs(root->left ,side-1,depth+1);\n        dfs(root->right,side+1,depth+1);\n    }\n    vector<vector<int>> verticalTraversal(TreeNode* root) {\n        dfs(root,1200,0);\n        vector<vector<int>> ans;\n        vector<int>temp;\n        for(int i=0;i<2500;i++){\n            if(vec[i].size() == 0) continue;\n            else{\n                sort(vec[i].begin(),vec[i].end());\n                for(pair<int,int> p : vec[i]){\n                    temp.push_back(p.second);\n                }\n            }\n            ans.push_back(temp);\n            temp.clear();\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"vertical-order-traversal-of-a-binary-tree"}