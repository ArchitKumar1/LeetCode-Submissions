{"id":507108514,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1623554385,"status_display":"Accepted","runtime":"1788 ms","url":"/submissions/detail/507108514/","is_pending":"Not Pending","title":"Maximum Number of Removable Characters","memory":"339 MB","code":"#pragma GCC optimize(\"Ofast\")\nclass Solution {\npublic:\n    int maximumRemovals(string s, string p, vector<int>& removable) {\n        // ios_base::sync_with_stdio(false); cin.tie(NULL);\n\n        int n = s.size();\n        int m = p.size();\n        int o = removable.size();\n        \n        int l = 0,h = o-1;\n        int ans = -1;\n        while(l<=h){\n            int mid = (l+h)/2;\n            // unordered_map<int,int> m1;\n            // m1.reserve(o+1);\n            unordered_set<int> st;\n            st.reserve(o+1);\n            for(int i = 0;i <= mid;i++){\n              //  m1[removable[i]] = 1;\n                st.insert(removable[i]);\n            }\n            //cout << mid << \" \"<< t << endl;\n            int j = 0;\n            for(int i = 0;i < s.size();i++){\n                //if(m1[i] != 1 && s[i] == p[j]) j++;\n                if(st.find(i) == st.end() && s[i] == p[j]) j++;\n            }\n            //cout << j << \" \" << m << endl;\n            if(j == m){\n                ans = mid;\n                l = mid+1;\n            }else{\n                h = mid-1;\n            }\n        }\n        if(ans == -1) return 0;\n        else return ans+1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-removable-characters"}