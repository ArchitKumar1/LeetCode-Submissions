{"id":412647001,"lang":"cpp","time":"1 year, 2 months","timestamp":1603560649,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/412647001/","is_pending":"Not Pending","title":"Count All Possible Routes","memory":"9.5 MB","code":"class Solution {\n    \n    \nprivate:\n    const static int M = 105;\npublic:\n    \n    vector<int> L;\n    int S,E,F,N;\n    const int mod = 1e9+7;\n    int dp[M][2*M];\n    \n    int fans = 0;\n    \n    int solve(int pos,int f){\n        if(dp[pos][f]!=-1){\n            return dp[pos][f];\n        }\n        int ans = 0;\n        if(pos == E) ans += 1;\n        for(int x = 0;x<N;x++){\n            if(pos == x) continue;\n            int cost = abs(L[x] - L[pos]);\n            if(cost <= f){\n                ans += solve(x,f-cost );\n                ans %= mod;\n            }\n        }\n        return dp[pos][f] = ans;\n    }\n    int countRoutes(vector<int>& locations, int start, int finish, int fuel) {\n        L = locations,S = start,E = finish,F = fuel,N= L.size();\n        memset(dp,-1,sizeof(dp));\n        int ans = solve(S,F);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-all-possible-routes"}