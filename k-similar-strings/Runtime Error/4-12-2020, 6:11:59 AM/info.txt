{"id":323359042,"lang":"cpp","time":"1 year, 8 months","timestamp":1586652119,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/323359042/","is_pending":"Not Pending","title":"K-Similar Strings","memory":"N/A","code":"class Solution {\npublic:\n    int N;\n    unordered_map<string,int> m1;\n    string get(string a,string b,int c){\n        return a + '#' + b + '#' + to_string(c);\n    }\n    int solve(string a,string b,int i){\n        string maps = get(a,b,i);\n        if(m1[maps] != 0){\n            return m1[maps];\n        }\n        if(i == N ) return 0;\n        if(a[0] == b[0]){\n            return solve(a.substr(1),b.substr(1),i+1);\n        }else{\n            int ans = 1e9;\n            for(int j = 1;j<a.size();j++){\n                if(a[j] == b[0]){\n                    string temp = a;\n                    swap(temp[j],temp[0]);\n                    ans = min(ans,1 + solve(temp.substr(i+1),b.substr(i+1),i+1));\n                }\n            }\n            return m1[maps] = ans;\n        }\n    }\n    int kSimilarity(string A, string B) {\n        N = A.size();\n        return solve(A,B,0);\n         \n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000","title_slug":"k-similar-strings"}