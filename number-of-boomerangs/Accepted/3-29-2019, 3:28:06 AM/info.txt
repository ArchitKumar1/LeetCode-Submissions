{"id":218351521,"lang":"cpp","time":"2 years, 9 months","timestamp":1553810286,"status_display":"Accepted","runtime":"640 ms","url":"/submissions/detail/218351521/","is_pending":"Not Pending","title":"Number of Boomerangs","memory":"147.4 MB","code":"class Solution {\npublic:\n    inline double dist(pair<int,int> &p,pair<int,int> &q){\n        return sqrt((1.0)*(q.first - p.first)*(q.first - p.first) + (1.0)*(q.second - p.second)*(q.second - p.second));\n    }\n    int numberOfBoomerangs(vector<pair<int, int>>& points) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        int n = points.size();\n        int boom= 0,boom2 = 2;\n        map<double,int> m1;\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                if(i == j)\n                    continue;\n                m1[dist(points[i],points[j])]++;\n            }\n            for(auto it : m1){\n            if(it.second > 1){\n                boom += it.second  * (it.second - 1);\n                }\n            }\n            for(auto it : m1){\n            if(it.second > 1){\n                boom2 += it.second  * (it.second - 1);\n                }\n            }\n            m1.clear();\n        }\n        return boom;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"number-of-boomerangs"}