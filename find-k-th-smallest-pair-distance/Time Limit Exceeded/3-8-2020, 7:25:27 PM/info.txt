{"id":310558655,"lang":"java","time":"1 year, 9 months","timestamp":1583675727,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/310558655/","is_pending":"Not Pending","title":"Find K-th Smallest Pair Distance","memory":"N/A","code":"class Solution {\n    public int smallestDistancePair(int[] nums, int k) {\n        Arrays.sort(nums);\n        PriorityQueue<int[]> minHeap = new PriorityQueue<>((a,b)-> Math.abs(a[0]-a[1]) - Math.abs(b[0]-b[1]));\n        for(int i = 0; i< nums.length-1; i++){\n            minHeap.add(new int[]{nums[i], nums[i+1], i+1});\n        }\n        int index = 0;\n        while(!minHeap.isEmpty()){\n            int[] cur = minHeap.poll();\n            if(++index == k) return  Math.abs(cur[0]-cur[1]);\n            if(cur[2]==nums.length-1) continue; // the sequence end\n            minHeap.add(new int[]{cur[0], nums[cur[2]+1], cur[2]+1});\n           \n        }\n       \n        return 0;\n    }\n}","compare_result":"1111111111111111110","title_slug":"find-k-th-smallest-pair-distance"}