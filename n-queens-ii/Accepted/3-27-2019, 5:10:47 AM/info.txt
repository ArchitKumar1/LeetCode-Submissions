{"id":217859843,"lang":"cpp","time":"2 years, 9 months","timestamp":1553643647,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/217859843/","is_pending":"Not Pending","title":"N-Queens II","memory":"8.3 MB","code":"class Solution {\npublic:\n    int grid[100][100];\n    int n;  \n    \n    bool issafe(int r,int c){\n        for (int i = r ,j = c ; i >=0 && j>=0;i--,j--){\n            if(grid[i][j] == 1)\n                return 0;\n        }\n        for (int i = r ,j = c ; i >=0 && j<n;i--,j++){\n            if(grid[i][j] == 1)\n                return 0;\n        }\n        for (int i = 0; i <=r;i++){\n            if(grid[i][c] == 1)\n                return 0;\n        }\n        for (int j = 0; j <=c;j++){\n            if(grid[r][j] == 1)\n                return 0;\n        }\n        return 1;\n    }\n    \n    int total = 0;\n    void nqueen(int row){\n        if(row == n)\n            total+=1;\n        for (int j = 0; j < n;j++){\n            if(issafe(row,j)){\n                grid[row][j] = 1;\n                nqueen(row + 1);\n                grid[row][j] = 0;\n            }\n        }\n    }\n    int totalNQueens(int n1) {\n        n = n1;\n        nqueen(0);\n        return total;\n    }\n};","compare_result":"111111111","title_slug":"n-queens-ii"}