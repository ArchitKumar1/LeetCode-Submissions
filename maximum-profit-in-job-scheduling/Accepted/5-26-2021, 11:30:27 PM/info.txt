{"id":498647000,"lang":"cpp","time":"7Â months","timestamp":1622052027,"status_display":"Accepted","runtime":"160 ms","url":"/submissions/detail/498647000/","is_pending":"Not Pending","title":"Maximum Profit in Job Scheduling","memory":"66.6 MB","code":"const int N = 6e4;\nclass Solution {\npublic:\n    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {\n        set<pair<int,int>> st;\n        vector<int> val(N);\n        st.emplace(0,0);\n        vector<tuple<int,int,int>> v;\n        int N  = startTime.size();\n        for(int i =0;i <N;i++){\n            v.emplace_back(endTime[i],startTime[i],profit[i]);\n        }\n\n        sort(v.begin(),v.end());\n        int ans = 0;\n        for(auto x : v){\n            int e,s,p;\n            tie(e,s,p) = x;\n            auto lb = st.upper_bound({s,INT_MAX});\n            auto pr = *(--lb);\n            \n            auto lb2 = st.lower_bound({e,INT_MAX});\n            auto pr2 = *(--lb2);\n            \n            pair<int,int> npr;\n            npr.second = max(pr.second + p ,pr2.second);\n            npr.first = e;\n            st.insert(npr);\n            ans = max(ans,npr.second);\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-profit-in-job-scheduling"}