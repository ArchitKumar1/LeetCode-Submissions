{"id":444060930,"lang":"cpp","time":"11 months, 1 week","timestamp":1610877063,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/444060930/","is_pending":"Not Pending","title":"Tuple with Same Product","memory":"N/A","code":"class Solution {\npublic:\n    int tupleSameProduct(vector<int>& nums) {\n        int n = nums.size();\n        \n        map<int,vector<pair<int,int>>> m1;\n        \n        for(int i =0;i<n;i++){\n            for(int j = i+1;j<n;j++){\n                int prod = nums[i] * nums[j];\n                m1[prod].push_back({nums[i],nums[j]});\n            }\n        }\n        int ans = 0;\n        for(auto x : m1){\n            int m = x.second.size();\n            \n            for(int i =0;i<m;i++){\n                for(int j = i+1;j<m;j++){\n                    set<int> s;\n                    s.insert(x.second[i].first);\n                    s.insert(x.second[i].second);\n                    s.insert(x.second[j].first);\n                    s.insert(x.second[j].second);\n                    if(s.size() == 4){\n                        ans += 8;\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111100","title_slug":"tuple-with-same-product"}