{"id":500179494,"lang":"cpp","time":"6 months, 4 weeks","timestamp":1622346369,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/500179494/","is_pending":"Not Pending","title":"Process Tasks Using Servers","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> assignTasks(vector<int>& servers, vector<int>& tasks) {\n        set<tuple<int,int>> st;\n        int n = servers.size();\n        int m = tasks.size();\n        int pos= 0;\n        unordered_map<int,vector<tuple<int,int>>> ms;\n        for(auto x : servers){\n            ms[0].emplace_back(x,pos++);\n        }\n        vector<int>res(m);\n        \n        queue<int> q;\n        int j = 0;\n        \n        int T = *max_element(tasks.begin(),tasks.end());\n        for(int i = 0; i <= (int)2e5;i++){\n            if(i < m) q.push(i);\n            for(auto x : ms[i]){\n                int w,p;\n                tie(w,p) = x;\n                st.emplace(w,p);\n            }\n        \n            while(q.size() && st.size()){\n                int j = q.front();\n                int w,p;\n                tie(w,p) = *st.begin();\n                \n                st.erase(st.begin());\n                res[j] = p;\n                ms[i+tasks[j]].push_back(make_tuple(w,p));\n                q.pop();\n            }\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111110000","title_slug":"process-tasks-using-servers"}