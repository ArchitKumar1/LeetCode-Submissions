{"id":500171688,"lang":"cpp","time":"6 months, 4 weeks","timestamp":1622345501,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/500171688/","is_pending":"Not Pending","title":"Process Tasks Using Servers","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> assignTasks(vector<int>& servers, vector<int>& tasks) {\n        set<tuple<int,int,int>> st;\n        int n = servers.size();\n        int m = tasks.size();\n        int pos= 0;\n        for(auto x : servers){\n            st.emplace(0,x,pos++);\n        }\n        vector<int>res(m);\n        \n        map<int,vector<tuple<int,int,int>>> m1;\n        queue<int> q;\n        int j = 0;\n        for(int i = 0; i <= (int)2e5;i++){\n            if(i < m) q.push(i);\n            // remove existing \n            for(auto x : m1[i]){\n                auto it = st.find(x);\n                int t,w,p;\n                tie(t,w,p) = *it;\n                //cout << i << \" \" << t << \" \" << w << \" \" << p << endl;\n                st.erase(it);\n                st.emplace(0,w,p);\n            }\n        \n            while(q.size()){\n                int j = q.front();\n                int t,w,p;\n                tie(t,w,p) = *st.begin();\n                if(t <= tasks[j]){\n                    st.erase(st.begin());\n                    res[j] = p;\n                    st.emplace(i+tasks[j],w,p);\n                    m1[i+tasks[j]].push_back(make_tuple(i+tasks[j],w,p));\n                    //cout << j << \" \" << i+tasks[j] <<  endl;\n                    q.pop();\n                }else{\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n};","compare_result":"1100000000000000000000000000000000","title_slug":"process-tasks-using-servers"}