{"id":500221499,"lang":"cpp","time":"6 months, 4 weeks","timestamp":1622352669,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/500221499/","is_pending":"Not Pending","title":"Process Tasks Using Servers","memory":"N/A","code":"\nclass Solution {\npublic:\n    vector<int> assignTasks(vector<int>& servers, vector<int>& tasks) {\n        set<tuple<int,int>> st;\n        int n = servers.size();\n        int m = tasks.size();\n        int pos= 0;\n        set<tuple<int,int,int>> ms;\n        for(auto x : servers){\n            ms.emplace(0,x,pos++);\n        }\n        vector<int>res(m);\n        \n        queue<int> q;\n        \n        for(int i = 0,T = 0; i < m;i++){\n            T = max(i,T);\n            q.push(i);\n            while(ms.size()){\n                int t,w,p;\n                auto it = ms.begin();\n                tie(t,w,p) = *it;\n                if(t <= T){\n                    ms.erase(it);\n                    st.emplace(w,p);\n                    T = t;\n                }else{\n                    break;\n                }\n            }\n        \n            while(q.size() && st.size()){\n                int j = q.front();\n                int w,p;\n                tie(w,p) = *st.begin();\n                \n                st.erase(st.begin());\n                res[j] = p;\n                ms.emplace(make_tuple(i+tasks[j],w,p));\n                q.pop();\n            }\n        }\n        return res;\n    }\n};","compare_result":"1101101011111101001111111110101101","title_slug":"process-tasks-using-servers"}