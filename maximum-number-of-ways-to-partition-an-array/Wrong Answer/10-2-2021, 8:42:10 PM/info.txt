{"id":564536877,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1633187530,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/564536877/","is_pending":"Not Pending","title":"Maximum Number of Ways to Partition an Array","memory":"N/A","code":"template<class T>\nvoid output_vector(vector<T> V){\n    for(int i = 0; i < (int)(V.size());i++){\n        if(i > 0) cout << \" \";\n        cout << V[i];\n    }\n    cout << '\\n';\n};\n\nclass Solution {\npublic:\n    int waysToPartition(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        vector<int> psums(n);\n        psums[0] = nums[0];\n        for(int i = 1;i < n;i++){\n            psums[i] = nums[i] + psums[i-1];\n        }\n        map<int,int> m1;\n        for(int i = 1;i<n;i++){\n            m1[psums[i]]++;\n        }\n        int mans = 0;\n        int mv = 0;\n        for(auto [k,v] : m1){\n            if( v > mv){  \n                mv = v;\n            }\n        }\n        return mv;\n    }\n};","compare_result":"1111001110100100010010101000010100000010010101011000100100010100001011100100000010100101011000101001010010001001000101101000000000000001111100000000110101000000011111100000000000","title_slug":"maximum-number-of-ways-to-partition-an-array"}