{"id":491802143,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1620749011,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/491802143/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nnamespace y_combinator_namespace{\n    template<class Fun>\n    class y_combinator_result {\n        Fun fun_;\n    public:\n        template<class T>\n        explicit y_combinator_result(T &&fun): fun_(std::forward<T>(fun)) {}\n\n        template<class ...Args>\n        decltype(auto) operator()(Args &&...args) {\n            return fun_(std::ref(*this), std::forward<Args>(args)...);\n        }\n    };\n\n    template<class Fun>\n    decltype(auto) y_combinator(Fun &&fun) {\n        return y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));\n    }\n    auto y_combinator_example_gcd = y_combinator([](auto self, int a, int b) -> int {\n        return b == 0 ? a : self(b, a % b);\n    });\n}\nusing namespace y_combinator_namespace;\n\nclass Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> res;\n        y_combinator([&](auto self,TreeNode* root) -> void{\n            if(!root) return;\n            res.push_back(root->val);\n            self(root->left);\n            self(root->right);\n        })(root);\n        return res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}