{"id":497056010,"lang":"cpp","time":"7Â months","timestamp":1621758296,"status_display":"Accepted","runtime":"100 ms","url":"/submissions/detail/497056010/","is_pending":"Not Pending","title":"Jump Game VII","memory":"24.9 MB","code":"\nclass fenwick{\n    public:\n    int n;\n    vector<int> BIT;\n    fenwick(int _n){\n        n = _n;\n        BIT.assign(n,0);\n    }\n    void add(int v,int i){\n        i++;\n        for(;i < n;i+=(i&-i)){\n            BIT[i] += v;\n        }\n    }\n    int get(int i){\n        i++;\n        int ans = 0;\n        for(;i > 0;i-=(i&-i)){\n            ans += BIT[i];\n        }\n        return ans;\n    }\n    int sum(int l,int r){\n        return get(r) -get(l-1);\n    }\n    int value_at(int i){\n       return sum(i,i);\n    }\n};\nclass Solution {\npublic:\n    \n    bool canReach(string s, int minJump, int maxJump) {\n        int n = s.size();\n        fenwick tree(n+1);\n        tree.add(1,0);  \n        for(int i = 1;i<n;i++){\n            if(s[i]!='0') continue;\n            int minj = i - minJump;\n            int maxj = i - maxJump;\n            \n            if(minj < 0) continue;\n            if(tree.sum(max(0,maxj),minj) > 0){\n                tree.add(1,i);\n            }\n        }\n        // for(int i = 0; i < n;i++){\n        //     cout << i << \" \" << tree.value_at(i) << endl;\n        // }\n        return tree.value_at(n-1) > 0;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-vii"}