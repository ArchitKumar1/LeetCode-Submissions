{"id":220521945,"lang":"python3","time":"2 years, 8 months","timestamp":1554595430,"status_display":"Accepted","runtime":"72 ms","url":"/submissions/detail/220521945/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"17.3 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nfrom collections import Counter\nclass Solution:\n    def findMode(self, root: TreeNode) -> List[int]:\n        def dfs(root,res):\n            if root:\n                res[root.val]+=1\n                dfs(root.left,res)\n                dfs(root.right,res)\n        a = Counter()\n        if not root:\n            return []\n        dfs(root,a)\n        v = a.most_common()[0][1]\n        \n        ans = [k for k,l in a.items() if l ==v]\n        return ans\n        ","compare_result":"1111111111111111111111111","title_slug":"find-mode-in-binary-search-tree"}