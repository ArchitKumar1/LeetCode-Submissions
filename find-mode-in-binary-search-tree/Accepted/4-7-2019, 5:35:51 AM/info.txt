{"id":220522337,"lang":"cpp","time":"2 years, 8 months","timestamp":1554595551,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/220522337/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"27.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    map<int,int> m1;\n    \n    void dfs(TreeNode* root){\n        if(!root)\n            return;\n        m1[root->val]++;\n        dfs(root->left);\n        dfs(root->right);\n    }\n    vector<int> findMode(TreeNode* root) {\n        ios_base::sync_with_stdio();\n        cin.tie(NULL);\n        cout.tie(NULL);\n        dfs(root);\n        int val = 0;\n        int m = 0;\n        vector<int> ans;\n        for(auto x : m1){\n            m =max(m ,x.second);\n        }\n        for(auto x : m1){\n            if(x.second == m){\n                ans.push_back(x.first);\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111","title_slug":"find-mode-in-binary-search-tree"}