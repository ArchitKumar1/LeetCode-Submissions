{"id":220520996,"lang":"cpp","time":"2 years, 8 months","timestamp":1554595113,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/220520996/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    map<int,int> m1;\n    \n    void dfs(TreeNode* root){\n        if(!root)\n            return;\n        m1[root->val]++;\n        dfs(root->left);\n        dfs(root->right);\n    }\n    vector<int> findMode(TreeNode* root) {\n        dfs(root);\n        int val = 0;\n        int m = 0;\n        vector<int> ans;\n        priority_queue<pair<int,int>> pq;\n        for(auto x : m1){\n            pq.push(make_pair(x.second,x.first));\n        }\n        pair<int,int> p = pq.top();\n        pq.pop();\n        ans.push_back(p.first);\n        while(!pq.empty()){\n            pair<int,int> temp = pq.top();\n            pq.pop();\n            if(temp.first == p.first){\n                ans.push_back(temp.second);\n            }\n            else{\n                break;\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"1000000000000000000000000","title_slug":"find-mode-in-binary-search-tree"}