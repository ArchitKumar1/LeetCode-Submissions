{"id":524208621,"lang":"cpp","time":"5 months, 1 week","timestamp":1626577659,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/524208621/","is_pending":"Not Pending","title":"Maximum Genetic Difference Query","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> G;\n    vector<vector<pair<int,int>>> Q;\n    vector<int> ans;\n    struct node{\n        node* next[2];\n        int cnt = 0;\n    };\n    node *root;\n    \n    void add(int x,node* root){\n        \n        for(int i = 18;i>=0;i--){\n            int bit = ((1<<i)&x)>=1;\n            if(!(root->next[bit])){\n                root->next[bit] = new node();\n            }\n            root = root->next[bit];\n            root->cnt++;\n        }\n    }\n    void remove(int x,node* root){\n        \n        for(int i = 18;i>=0;i--){\n            int bit = ((1<<i)&x)>=1;\n            assert(root->next[bit]);\n            node* next = root->next[bit];\n            if(next->cnt == 1){\n                root->next[bit] = NULL;\n                break;\n            }else{\n                root = next;\n                root->cnt--;\n            }\n        }\n    }\n    int get(int x,node* root){\n        int ans = 0;\n        for(int i = 18;i>=0;i--){\n            int bit = ((1<<i)&x)>=1;\n            if(!root->next[bit^1]){\n                if(!root->next[bit]){\n                    return ans;\n                }else{\n                    root = root->next[bit];\n                }\n            }else{\n                ans += (1<<i);\n                root = root->next[bit ^ 1];\n            }\n        }\n        return ans;\n    }\n    \n    void dfs(int s,int par){\n        //add \n        add(s,root);\n        for(auto [val,idx] : Q[s]){\n            int mx = get(val,root);\n            ans[idx] = mx;\n        }\n        for(int c : G[s]){\n            if(c == par) continue;\n            dfs(c,s);\n        }\n        \n        //remove\n        remove(s,root);\n        \n    }\n    vector<int> maxGeneticDifference(vector<int>& parents, vector<vector<int>>& queries) {\n        \n        // make tree\n        G.resize(100001);\n        Q.resize(100001);\n        int n = parents.size();\n        int rooto = -1;\n        for(int i =0 ;i < n;i++){\n            if(parents[i] == -1) {\n                rooto = i;\n                continue;\n            }\n            G[i].push_back(parents[i]);\n            G[parents[i]].push_back(i);\n        }\n        \n        int q = queries.size();\n        ans.resize(q);\n        \n        int pos = 0;\n        for(auto query : queries){\n            int node = query[0];\n            int val = query[1];\n            Q[node].emplace_back(val,pos++);\n        }\n        \n        root = new node();\n        dfs(rooto,rooto);\n    \n        \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-genetic-difference-query"}