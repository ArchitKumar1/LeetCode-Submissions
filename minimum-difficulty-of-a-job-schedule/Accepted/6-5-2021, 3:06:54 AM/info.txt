{"id":503094594,"lang":"python3","time":"6 months, 3 weeks","timestamp":1622842614,"status_display":"Accepted","runtime":"1140 ms","url":"/submissions/detail/503094594/","is_pending":"Not Pending","title":"Minimum Difficulty of a Job Schedule","memory":"15.6 MB","code":"class Solution:\n    def minDifficulty(self, jobs: List[int], d: int) -> int:\n        \n        n = len(jobs)\n        @cache\n        def dp(i,c):\n            if c > d : return int(1e9)\n            if i == n:\n                return 0 if c == d else int(1e9)\n            ans = int(1e9)\n            mx = 0\n            for j in range(i,n):\n                mx = max(mx,jobs[j])\n                ans = min(ans, mx + dp(j+1,c+1))\n            \n            return ans\n        ans = dp(0,0)\n        return ans if ans!=int(1e9) else -1\n            ","compare_result":"11111111111111111111111111111111","title_slug":"minimum-difficulty-of-a-job-schedule"}