{"id":448064834,"lang":"cpp","time":"11Â months","timestamp":1611667124,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/448064834/","is_pending":"Not Pending","title":"Trim a Binary Search Tree","memory":"17.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int L,H;\n    \n    \n    TreeNode* dfs(TreeNode* root){\n        if(!root) return NULL;\n        \n        int V = root->val;\n        \n        root->left = dfs(root->left);\n        root->right = dfs(root->right);\n\n        \n        if(V < L){\n            return root->right;\n        }else if(V > H){\n            return root->left;\n        }else{\n            return root;\n        }\n        \n    }\n    TreeNode* trimBST(TreeNode* root, int low, int high) {\n        L = low;\n        H = high;\n        \n        return dfs(root);\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trim-a-binary-search-tree"}