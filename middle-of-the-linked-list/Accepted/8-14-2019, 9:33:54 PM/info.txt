{"id":251632467,"lang":"cpp","time":"2Â years, 4Â months","timestamp":1565798634,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/251632467/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"8.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        int cnt = 0;\n        ListNode* ans,*head2 = head;\n        \n        while(head!= NULL){\n            cnt++;\n            head = head->next;\n        }\n        int pos = 0;\n        while(head2!= NULL){\n            \n            if(pos == cnt/2){\n                ans = head2;\n            }\n            pos++;\n            head2= head2->next;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111","title_slug":"middle-of-the-linked-list"}