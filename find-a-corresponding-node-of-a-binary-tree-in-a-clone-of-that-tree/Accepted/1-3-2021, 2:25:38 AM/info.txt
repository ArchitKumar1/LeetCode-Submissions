{"id":437664146,"lang":"cpp","time":"11 months, 3 weeks","timestamp":1609620938,"status_display":"Accepted","runtime":"692 ms","url":"/submissions/detail/437664146/","is_pending":"Not Pending","title":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","memory":"166.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n    TreeNode* ans,*C,*O,*T;\n    \n    void dfs(TreeNode* root){\n        if(!root) return;\n        if(root->val == T->val) ans = root;\n        dfs(root->left);\n        dfs(root->right);\n    }\n    TreeNode* getTargetCopy(TreeNode* original, TreeNode* cloned, TreeNode* target) {\n        C = cloned,O = original,T=target;\n        dfs(cloned);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree"}