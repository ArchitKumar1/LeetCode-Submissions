{"id":220070854,"lang":"python3","time":"2 years, 8 months","timestamp":1554413877,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/220070854/","is_pending":"Not Pending","title":"All Nodes Distance K in Binary Tree","memory":"13.2 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def distanceK(self, root, target, K):\n        conn = collections.defaultdict(list)\n        def connect(parent, child):\n            if parent and child:\n                conn[parent.val].append(child.val)\n                conn[child.val].append(parent.val)\n            if child.left: connect(child, child.left)\n            if child.right: connect(child, child.right)\n        connect(None, root)\n        bfs = [target.val]\n        seen = set(bfs)\n        for i in range(K):\n            bfs = [y for x in bfs for y in conn[x] if y not in seen]\n            seen |= set(bfs)\n        return bfs","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"all-nodes-distance-k-in-binary-tree"}