{"id":586734825,"lang":"cpp","time":"1 month, 1 week","timestamp":1636847678,"status_display":"Accepted","runtime":"344 ms","url":"/submissions/detail/586734825/","is_pending":"Not Pending","title":"Most Beautiful Item for Each Query","memory":"88.1 MB","code":"#define ALL(x)    x.begin(),x.end()\n#define LB        lower_bound\n#define UB        upper_bound\n#define PB        push_back\n#define EB        emplace_back\n#define F         first\n#define S         second\n#define endl      \"\\n\"\n#define SZ(x)     (int)x.size()\n\n\nclass Solution {\npublic:\n    vector<int> maximumBeauty(vector<vector<int>>& items, vector<int>& queries) {\n        int n = queries.size();\n        int m =  items.size();\n\n        vector<int> ans(n);\n        vector<int> idx(n);\n        iota(ALL(idx),0);\n        sort(ALL(items));\n        sort(ALL(idx),[&](int a,int b){ return queries[a] < queries[b];});\n        \n        int j = 0;\n        int mx = 0;\n        for(int i : idx){\n            while(j < m && items[j][0] <= queries[i]){\n                mx = max(mx,items[j++][1]);\n            }\n            ans[i] = mx;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"most-beautiful-item-for-each-query"}