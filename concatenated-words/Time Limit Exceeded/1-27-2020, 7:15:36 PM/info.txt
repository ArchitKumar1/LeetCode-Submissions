{"id":297856244,"lang":"cpp","time":"1 year, 11 months","timestamp":1580132736,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/297856244/","is_pending":"Not Pending","title":"Concatenated Words","memory":"N/A","code":"class Solution {\npublic:\n    map<string,int> m1;\n    vector<pair<bool,int>> dp;\n    pair<bool,int> solve(string s,int pos){\n        if(pos == s.size()) return {1,0};\n        if(dp[pos].second !=-1) return dp[pos];\n        string t = \"\";\n        bool ok = 0;\n        int fans = 0;\n        for(int i = pos;i<s.size();i++){\n            t +=s[i];\n            if(m1[t] == 1){\n                pair<bool,int> ans = solve(s,i+1);\n                if(ans.first == 1){\n                    ok = 1;\n                    fans = 1 + max(fans,ans.second);\n                }\n            }\n        }\n        return dp[pos] = {ok,fans};\n    }\n    \n    vector<string> findAllConcatenatedWordsInADict(vector<string>& words) {\n        for(string w : words){\n            m1[w] =1;\n        }\n        vector<string > fans;\n        for(string s : words){\n            dp.assign(s.size()+1,{0,-1});\n            pair<bool,int> ans = solve(s,0);\n            cout<< ans.first << \" \" << ans.second << endl;\n            if(ans.first == 1 && ans.second >1){\n                fans.push_back(s);\n            }\n        }\n        return fans;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111110","title_slug":"concatenated-words"}