{"id":305234376,"lang":"cpp","time":"1 year, 10 months","timestamp":1582229114,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/305234376/","is_pending":"Not Pending","title":"Largest Divisible Subset","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> largestDivisibleSubset(vector<int>& nums) {\n        map<long long int,int> m1;\n        int n = nums.size();\n        for(int c : nums){\n            m1[c] = 1;\n        }\n        long long int limit = 2e9;\n        int fans = 0;\n        vector<int> vfans;\n        for(int c :nums){\n            int tans = 0;\n            vector<int> vtans;\n            if(c == 1 || c == 0) {\n                tans = c;\n                vtans = {c};\n            }\n            int p = 0;\n            \n            while(pow((long long)c,p)<=limit && c!= 1 && c!=0){\n                // cout << c << \" \" << pow((long long)c,p) << endl;\n                if(m1[pow((long long)c,p)] ==1){\n                    tans++;\n                    vtans.push_back(pow((long long)c,p)); \n                }\n                p++;\n            }\n\n            if(tans> fans){\n                fans = tans;\n                vfans = vtans;\n            }\n        }\n        sort(vfans.begin(),vfans.end());\n        return vfans;\n    }\n};","compare_result":"11111110101000110011000000000000001000011","title_slug":"largest-divisible-subset"}