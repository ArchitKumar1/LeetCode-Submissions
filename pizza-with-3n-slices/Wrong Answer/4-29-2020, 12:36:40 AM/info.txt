{"id":331478354,"lang":"cpp","time":"1 year, 7 months","timestamp":1588100800,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/331478354/","is_pending":"Not Pending","title":"Pizza With 3n Slices","memory":"N/A","code":"class Solution {\n    int dp[1010][1010];\n    \npublic:\n    \n    vector<int> sl;\n    \n    int get(int i,int j){\n        if( j < i) return 0;\n        if(dp[i][j] !=-1){\n            return dp[i][j];\n        }\n        if(j-i <= 2){\n            int ans = 0;\n            for(int x = i;x<=j;x++){\n                ans = max(ans,sl[x]);\n            }\n            return dp[i][j] = ans;\n            \n        }\n        int ans =0;\n        ans = max(sl[i] + get(i+2,j-1),sl[j] + get(i+1,j-2));\n        for(int x = i+1;x<=j-1;x++){\n            ans = max(ans,get(i,x-2) + sl[x] + get(j+2,j));\n        }\n        return dp[i][j] = ans;\n    }\n    \n    int maxSizeSlices(vector<int>& slices) {\n        int n = slices.size();\n        for(int c : slices){\n            sl.push_back(c);\n        }\n        for(int c : slices){\n            sl.push_back(c);\n        }\n        \n        int fans = 0;\n        for(int i = 0;i<n;i++){\n            memset(dp,-1,sizeof(dp));\n            int x = get(i,n+i-1) ;\n            fans = max(fans,x);\n        }\n        return fans;\n        \n    }\n};","compare_result":"111111111111111111111111111110101111111111110100001000000000000000000","title_slug":"pizza-with-3n-slices"}