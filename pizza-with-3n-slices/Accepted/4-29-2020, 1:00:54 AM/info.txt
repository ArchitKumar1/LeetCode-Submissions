{"id":331487064,"lang":"cpp","time":"1 year, 7 months","timestamp":1588102254,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/331487064/","is_pending":"Not Pending","title":"Pizza With 3n Slices","memory":"11.2 MB","code":"class Solution {\n    int dp[1010][1010];\n    \npublic:\n    \n    vector<int> sl;\n    int N ;\n    int get(int i,int cnt,int end){\n        int &ans = dp[i][cnt];\n        if(ans != - 1) return ans;\n        if(i > end || cnt == N) return 0;\n        ans = max(sl[i] + get(i+2,cnt+1,end) , get(i+1,cnt,end));\n        return ans;\n    }\n    \n    int maxSizeSlices(vector<int>& slices) {\n        int n = slices.size();\n        N = n/3;\n        for(int c : slices){\n            sl.push_back(c);\n        }\n        memset(dp,-1,sizeof(dp));\n        int fans = get(0,0,n-2);\n        \n        memset(dp,-1,sizeof(dp));\n        fans = max(fans,get(1,0,n-1));\n        \n        return fans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pizza-with-3n-slices"}