{"id":304468861,"lang":"cpp","time":"1 year, 10 months","timestamp":1582013544,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/304468861/","is_pending":"Not Pending","title":"Knight Probability in Chessboard","memory":"N/A","code":"class Solution {\npublic:\n\n    //vector<vector<vector<int>>> dp;\n    vector<int> dx = {1,2,2,1,-1,-2,-2,-1};\n    vector<int> dy = {2,1,-1,-2,-2,-1,1,2};\n\n    int n;\n    int k;\n    bool inside(int i,int j){\n        return i>=0 && j>=0 && i<n && j<n;\n    }\n    \n    double solve( int i,int j,int move,vector<vector<vector<int>>> &dp){\n        cout << i << \" \" << j << \" \" << move << endl;\n\n        if(inside(i,j) == 0){\n            return 0;\n        }\n        if(move == k){\n            if(inside(i,j) == 0){\n                return 0;\n            }else{\n                return 1;\n            }\n        }\n        // if(dp[i][j][move] != -1){\n        //     return dp[i][j][move];\n        // }\n        double ans = 0;\n        \n        for(int m = 0;m<8;m++){\n            ans += solve(i + dx[m],j + dy[m],move+1,dp)/8;\n        }\n\n        // return dp[i][j][move] = ans;\n        return ans;\n        \n    }\n    double knightProbability(int N, int K, int r, int c) {\n        vector<vector<vector<int>>> dp(N+1,vector<vector<int>> (N+1,vector<int>(K+1,-1)));\n        n= N;\n        k= K;\n \n        return solve(r,c,0,dp);\n    }\n};","compare_result":"111111111110000000000","title_slug":"knight-probability-in-chessboard"}