{"id":475433954,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1617350483,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/475433954/","is_pending":"Not Pending","title":"Maximum Number of Visible Points","memory":"N/A","code":"class Solution {\npublic:\n    double PI = acos(-1);\n    int visiblePoints(vector<vector<int>>& points, int angle, vector<int>& location) {\n        \n        int px = location[0];\n        int py = location[1];\n\n        for(auto &x : points){\n            x[0] -= px;\n            x[1] -= py;\n        }\n        auto getangle = [&](int i) -> double{\n            return atan(1.0*points[i][1]/points[i][0]);\n        };\n        sort(points.begin(),points.end(),[&](vector<int> a,vector<int>b){\n            double da = atan(1.0*a[1]/a[0]);\n            double db = atan(1.0*b[1]/b[0]);\n            return da < db;\n        });\n        \n        double top = getangle(0) + PI/180 * angle;\n        int n = points.size();\n        \n\n        int fans = 0;\n        int ans = 0;\n        \n        for(int i = 0,j = 0;i<n;i++){\n            ans += 1;\n            while(getangle(i) > top){\n                //update top to new top\n                double base = getangle(j+1);\n                top = base + PI/180 * angle;\n                j++;\n                ans -=1;\n            }\n            fans = max(fans,ans);\n        }\n        return fans;\n        \n    }\n\n};","compare_result":"11100111111001001100001011010010111000111110001100010011000010000000000000010100000001001000000011000010000000000100000","title_slug":"maximum-number-of-visible-points"}