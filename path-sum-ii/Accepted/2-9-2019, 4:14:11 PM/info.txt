{"id":206685036,"lang":"cpp","time":"2 years, 10 months","timestamp":1549709051,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/206685036/","is_pending":"Not Pending","title":"Path Sum II","memory":"48.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int x;\n    vector<vector<int>> v1;\n    void dfs(TreeNode* root, int sum,vector<int> temp){\n        if(root == NULL) return ;\n\n        \n        sum+=root->val;\n        temp.push_back(root->val);\n        \n        \n        if(root->left ==NULL && root->right==NULL) if(sum==x) v1.push_back(temp);\n        dfs(root->left,sum,temp);\n        dfs(root->right,sum,temp);\n    }\n    vector<vector<int>> pathSum(TreeNode* root, int sum) {\n        vector<int> temp;\n        x=sum;\n        dfs(root,0,temp);\n        return v1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}