{"id":332619620,"lang":"cpp","time":"1 year, 7 months","timestamp":1588318858,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/332619620/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    \n    int dfs(TreeNode* root){\n        if(root== NULL) return 0;\n        \n        int l = dfs(root->left);\n        int r = dfs(root->right);\n        int v =root->val;\n        ans = max(ans,v+max({l,r,l+r}));\n        \n        return max(r+v,l+v);\n    \n    }\n    int maxPathSum(TreeNode* root) {\n        int garbage = dfs(root);\n        return ans;\n        \n    }\n};","compare_result":"111101110011100111111111111111111111111111111111111110111111111111111101111110101111101111111","title_slug":"binary-tree-maximum-path-sum"}