{"id":228668294,"lang":"cpp","time":"2 years, 7 months","timestamp":1557770444,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/228668294/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"25.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int  m = INT_MIN;\n    int dfs1(TreeNode* root){\n       if(!root)return 0;\n        int l = max(0,dfs1(root->left));\n        int r = max(0,dfs1(root->right));\n        m = max(m,l+r+root->val);\n        return max(l,r) + root->val;\n    }\n    int maxPathSum(TreeNode* root) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        dfs1(root);\n        return m;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}