{"id":353241001,"lang":"cpp","time":"1 year, 6 months","timestamp":1592087077,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/353241001/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"28.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int fans = -1e9;\n    \n    \n    int dfs(TreeNode* root){\n        if(!root) return 0;\n        \n        int val = root->val;\n        int left = dfs(root->left);\n        int right = dfs(root->right);\n        \n        fans = max(fans,val + left + right );\n        \n        return max(0,max(val + left,val+right));\n        \n    }\n    int maxPathSum(TreeNode* root) {\n        dfs(root);\n        return fans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum"}