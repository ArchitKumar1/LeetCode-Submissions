{"id":468219167,"lang":"cpp","time":"9 months, 1 week","timestamp":1615837702,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/468219167/","is_pending":"Not Pending","title":"Reverse Pairs","memory":"N/A","code":"class Solution {\npublic:\n    \n    vector<int> nums;\n    int n;\n    int ans = 0;\n    \n    void merge(int l,int mid,int r){\n        \n        for(int i = l, j = mid + 1;i <= mid;i++){\n            while( j <= r && nums[i] > 2*nums[j]) j++;\n            ans += j-mid-1;\n        }\n        \n        int p = l ,q = mid + 1;\n        vector<int> temp(r-l+1);\n        int k = 0;\n        \n        while(p <= mid || q <= r){\n            if(p <= mid && q <= r){\n                if(nums[p] > nums[q]){\n                    temp[k++] = nums[q++];\n                }else{\n                    temp[k++] = nums[p++];\n                }\n            }else if(p == mid+1){\n                temp[k++] = nums[q++];\n            }else{\n                temp[k++] = nums[p++];\n            }\n        }\n        k = r-l+1;\n        for(int i = 0;i<k;i++){\n            nums[l+i] =temp[i];\n        }\n    }\n    void mergesort(int l,int r){\n        if(l < r){\n            int mid = (l+r)/2;\n            mergesort(l,mid);\n            mergesort(mid+1,r);\n            merge(l,mid,r);\n        }\n    }\n    int reversePairs(vector<int>& NUMS) {\n        nums = NUMS;\n        n = nums.size();\n        \n        mergesort(0,n-1);\n        for(int i =0 ;i<n;i++){\n            cout << nums[i] << \" \";\n        }\n        return ans;\n                \n    }\n};","compare_result":"11111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reverse-pairs"}