{"id":303833268,"lang":"cpp","time":"1 year, 10 months","timestamp":1581863686,"status_display":"Accepted","runtime":"200 ms","url":"/submissions/detail/303833268/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"56.3 MB","code":"class Solution {\npublic:\n    bool possibleBipartition(int N, vector<vector<int>>& dislikes) {\n        vector<int> color(N+1,-1);\n        vector<vector<int>> edges(N+1);\n        \n        for(vector<int> a : dislikes){\n            edges[a[0]].push_back(a[1]);\n            edges[a[1]].push_back(a[0]);\n        }\n        bool ok = 1;\n        queue<int> q;\n        for(int i = 1;i<=N;i++){\n            if(color[i] == -1){\n                q.push(i);\n                color[i] = 0;\n                while(q.size()){\n                    int s= q.front();\n                    q.pop();\n                    for(int c : edges[s]){\n                        if(color[c] == -1){\n                            color[c] = color[s] ^ 1;\n                            q.push(c);\n                        }else{\n                            ok &= color[c]!= color[s];\n                        }\n                    }\n                }\n            }\n        }\n        return ok;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"possible-bipartition"}