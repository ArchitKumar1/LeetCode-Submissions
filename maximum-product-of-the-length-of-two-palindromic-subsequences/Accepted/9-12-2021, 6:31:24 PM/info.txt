{"id":553639546,"lang":"cpp","time":"3 months, 1 week","timestamp":1631451684,"status_display":"Accepted","runtime":"143 ms","url":"/submissions/detail/553639546/","is_pending":"Not Pending","title":"Maximum Product of the Length of Two Palindromic Subsequences","memory":"21.6 MB","code":"class Solution {\npublic:\n    int maxProduct(string s) {\n        int n = s.size();\n        vector<int> p(1 << n);\n        p[0] = 0;\n        for(int m = 0;m < 1 << n;m++){\n            vector<int> idx;\n            idx.reserve(n);\n            for(int j = 0;j < n;j++){\n                if(m>>j&1) idx.push_back(j);\n            }\n            bool pali = true;\n            for(int l = 0,r = idx.size()-1;l < r;l++,r--){\n                if(s[idx[l]]!=s[idx[r]]) pali = false;\n            }\n            if(pali) p[m] = idx.size();\n            //cout << bitset<5>(m) << \" \" << p[m] << endl;\n        }\n        for(int m = 0;m < 1 << n;m++){\n            for(int j = 0;j < n;j++){\n                if(m>>j&1){\n                    int nm = m ^ (1 << j);\n                    p[m] = max(p[m],p[nm]);\n                }\n            }\n        }\n        int fans = 0;\n        for(int m = 0;m < 1 << n;m++){\n            int xm = (-1 + (1 << n)) ^ (m);\n            fans = max(fans,p[m] * p[xm]);\n        }\n        return fans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-the-length-of-two-palindromic-subsequences"}