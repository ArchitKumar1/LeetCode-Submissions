{"id":579748224,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1635648887,"status_display":"Accepted","runtime":"408 ms","url":"/submissions/detail/579748224/","is_pending":"Not Pending","title":"Minimum Operations to Convert Number","memory":"135.9 MB","code":"\nclass Solution {\npublic:\n    int minimumOperations(vector<int>& nums, int start, int goal) {\n        int n= nums.size();\n        int ans = 0;\n        bool f = 0;\n        \n        queue<int> q;\n        q.push(start);\n        unordered_map<int,int> cnt;\n        // cnt.reserve((int)2e4);\n        \n        while(q.size()){\n            int L = q.size();\n            ans += 1;\n            for(int x = 0;x < L; x++){\n                int val = q.front(); q.pop();\n                // cout << val << endl;\n                if(val == goal){\n                    f = 1;\n                    q = queue<int>();\n                    break;\n                }\n                if(val < 0 || val > 1000) continue;\n                if(cnt[val] == 1) continue;\n                cnt[val] = 1;\n                for(int i = 0; i < n;i++){\n                    {\n                       int nval = val + nums[i];\n                        // if(cnt[nval] == 1) continue;\n                       q.push(nval);\n                    } \n                    {\n                     int nval = val - nums[i];\n                        // if(cnt[nval] == 1) continue;\n                       q.push(nval);\n                    } \n                    {\n                       int nval = val ^ nums[i];\n                        // if(cnt[nval] == 1) continue;\n                       q.push(nval);\n                    } \n                }\n                \n            }\n            \n        }\n        if(!f) return -1;\n        return ans-1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-convert-number"}