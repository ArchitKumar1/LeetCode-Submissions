{"id":209297458,"lang":"cpp","time":"2 years, 10 months","timestamp":1550660105,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/209297458/","is_pending":"Not Pending","title":"Delete Node in a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int val;\n    void dfs( TreeNode* root){\n        if(root == NULL)\n            return;\n        if(root->right){\n            if(root->right->val == val){\n                TreeNode* L = root->right->left;\n                TreeNode* R = root->right->right;\n                root->right == NULL;\n                if(root->right->right){\n                    root->right = R;\n                    root->right->left = L;\n                }\n                else if(root->right->right){\n                    root->right = L;\n                    root->right->right = R;\n                }\n            }\n        }\n        if(root->left){\n            if(root->left->val == val){\n                TreeNode* L = root->left->left;\n                TreeNode* R = root->left->right;\n                root->left == NULL;\n                if(root->left->right){\n                    root->left = R;\n                    root->left->left = L;\n                }\n                else if(root->left->right){\n                    root->left = L;\n                    root->left->right = R;\n                }\n            }\n        }    \n        dfs(root->left);\n        dfs(root->right);\n        \n    }\n    TreeNode* deleteNode(TreeNode* root, int key) {\n        if(!root->right && !root->left) return root;\n        val = key;\n        dfs(root);\n        return root;\n        \n    }\n};","compare_result":null,"title_slug":"delete-node-in-a-bst"}