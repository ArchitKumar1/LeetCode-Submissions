{"id":503104313,"lang":"python3","time":"6 months, 3 weeks","timestamp":1622844910,"status_display":"Accepted","runtime":"3516 ms","url":"/submissions/detail/503104313/","is_pending":"Not Pending","title":"Number of Ways to Form a Target String Given a Dictionary","memory":"364.7 MB","code":"class Solution:\n    def numWays(self, words: List[str], target: str) -> int:\n        cnt = defaultdict(int)\n        for w in words:\n            for i,c in enumerate(w):\n                cnt[(i,c)]+=1\n        n = len(target)\n        m = max([len(w) for w in words])\n        M = 10 ** 9 + 7\n        @cache    \n        def dp(i,j):\n            if j == n: \n                if i == m : return 1\n            if i == m: return 0\n            ans = 0\n            if j < n:\n                counts = cnt[(i,target[j])]\n                if counts > 0 : \n                    ans += counts * dp(i+1,j+1)\n            ans += dp(i+1,j)\n            return ans % M \n                   \n        return dp(0,0)\n    # alternative solution\n#         @cache    \n#             def dp(i,j):\n#                 if j == n: return 1\n#                 if i == m: return 0\n#                 ans = 0\n#                 counts = cnt[(i,target[j])]\n#                 if counts > 0 : \n#                     ans += counts * dp(i+1,j+1)\n#                 ans += dp(i+1,j)\n#                 return ans % M \n\n#             return dp(0,0)\n            \n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-form-a-target-string-given-a-dictionary"}