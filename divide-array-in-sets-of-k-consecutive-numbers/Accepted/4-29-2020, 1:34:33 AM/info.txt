{"id":331498485,"lang":"cpp","time":"1 year, 7 months","timestamp":1588104273,"status_display":"Accepted","runtime":"432 ms","url":"/submissions/detail/331498485/","is_pending":"Not Pending","title":"Divide Array in Sets of K Consecutive Numbers","memory":"51.4 MB","code":"class Solution {\npublic:\n    bool isPossibleDivide(vector<int>& nums, int k) {\n        int n = nums.size();\n        if(n%k != 0)return 0;\n        \n      \n        unordered_map<int,int> m1;\n        set<int> s;\n        for(int c : nums) m1[c]++,s.insert(c);\n        \n        bool ok = 1;\n        while(s.size()){\n            vector<int> temp ;\n            for(int i = 0;i<k;i++){\n                if(s.size()  >= 1){\n                    temp.push_back(*s.begin());\n                    s.erase(s.begin());\n                }\n                \n            }\n            if(temp.size() < k) {\n                ok = 0;\n                break;\n            }\n            for(int i =1 ;i<k;i++){\n                if(temp[i]-temp[i-1] != 1) {\n                    ok = 0;\n                    goto A;\n                }\n            }\n            for(int i = 0;i<k;i++){\n                int curr = temp[i];\n                m1[curr]--;\n                if(m1[curr]>=1) s.insert(curr);\n            }\n        }\n        A:\n        return ok;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"divide-array-in-sets-of-k-consecutive-numbers"}