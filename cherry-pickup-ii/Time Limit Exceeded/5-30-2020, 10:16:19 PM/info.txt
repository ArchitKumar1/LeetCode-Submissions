{"id":346729273,"lang":"cpp","time":"1 year, 6 months","timestamp":1590857179,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/346729273/","is_pending":"Not Pending","title":"Cherry Pickup II","memory":"N/A","code":"class Solution {\n    static const int N = 80;\npublic:\n    int n,m;\n    \n    // int dp[N][N][N][N];\n    int solve(int x1,int y1,int x2,int y2,vector<vector<int>>& G){\n        int ans = -1e9;\n        if(x1 < 0 || x2 < 0 || x1 >n-1 || x2 > n-1 ||y1 < 0 || y2 < 0 || y1 >m-1 || y2 > m-1  )return   -1e9;\n        \n        // if(dp[x1][y1][x2][y2]!=-1) return dp[x1][y1][x2][y2];\n        // cout << x1 << \" \" << x2 << \" \" << y1 << \" \" << y2 << endl;\n        else if(x1 == n-1 && x2 == n-1){\n            if(y1 == y2) {\n                // cout << x1 << \" \" << y1 << endl;\n                ans =  G[x1][y1];\n            }\n            else {\n                // cout << x1 << \" \" << y1 <<  \" \" <<x2 << \" \" << y2 << endl;\n                ans =  G[x1][y1] + G[x2][y2];\n            }\n        }\n        else if(x1 == x2 && y1 == y2) {\n            ans = G[x1][y1];\n        }else{\n            for(int i = -1;i<=1;i++){\n                for(int j = -1;j<=1;j++){\n                    ans = max(ans,G[x1][y1] + G[x2][y2] + solve(x1+1,y1+i,x2+1,y2+j,G));\n                }\n            }\n        }\n        return ans;\n    }\n    \n    int cherryPickup(vector<vector<int>>& grid) {\n         n = grid.size();\n         m = grid[0].size();\n        \n        // memset(dp,-1,sizeof(dp));\n        int ans = solve(0,0,0,m-1,grid);\n        return (ans <= -1e9 ? 0 : ans);\n    }\n};","compare_result":"1111111111111111111000000000000000000000000000000000000000","title_slug":"cherry-pickup-ii"}