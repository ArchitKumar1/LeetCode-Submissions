{"id":425331197,"lang":"cpp","time":"1Â year","timestamp":1606647089,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/425331197/","is_pending":"Not Pending","title":"Minimize Deviation in Array","memory":"N/A","code":"class Solution {\npublic:\n    int minimumDeviation(vector<int>& nums) {\n        int n = nums.size();\n        multiset<int> s;\n        for(int x : nums){\n            s.insert(x);\n        }\n        int ans = INT_MAX;\n\n        \n        for(int i = 0;i<n;i++){\n            int MA = *prev(s.end());\n            int MI = *s.begin();\n            int A1 ,A2;\n            {\n                s.insert(MA/2);\n                s.erase(s.find(MA));\n                {\n                    int MA = *prev(s.end());\n                    int MI = *s.begin();\n                    A1 = abs(MA-MI);\n                }\n                s.insert(MA);\n                s.erase(s.find(MA/2));\n            }\n            {\n                s.insert(2*MI);\n                s.erase(s.find(MI));\n                {\n                    int MA = *prev(s.end());\n                    int MI = *s.begin();\n                    A2 = abs(MA-MI);\n                }\n                s.insert(MI);\n                s.erase(s.find(2*MI));\n            }\n            cout << i << \" \" << A1 << \" \" << A2 << endl;\n            if(A1 < A2){\n                s.insert(MA/2);\n                s.erase(s.find(MA));\n            }else{\n                s.insert(2*MI);\n                s.erase(s.find(MI));\n            }\n            for(int x : s){\n                cout << x << \" \";\n            }\n            cout << endl;\n            int A = min(A1,A2);\n            if(A < ans){\n                ans = A;\n            }else{\n                break;\n            }\n            \n        }\n        return ans;\n        \n    }\n};","compare_result":"1000100000001100010000000011001000000000000000000000000000000000000000000000","title_slug":"minimize-deviation-in-array"}