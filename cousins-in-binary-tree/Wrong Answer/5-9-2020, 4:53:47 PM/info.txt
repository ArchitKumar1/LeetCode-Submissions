{"id":336667193,"lang":"cpp","time":"1 year, 7 months","timestamp":1589023427,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/336667193/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    TreeNode* a,*b;\n    int da = 0,db = 0;\n    \n    void dfs(TreeNode* r,TreeNode* par ,int x,int y,int depth){\n        if(!r) return ;\n        if(r->val == x){\n            a = par;\n            da = depth;\n        }\n        if(r->val == y){\n            b = par;\n            db = depth;\n        }\n        dfs(r->left,r,x,y,depth+1);\n        dfs(r->right,r,x,y,depth+1);\n    }\n    bool isCousins(TreeNode* root, int p, int q) {\n        dfs(root,NULL,p,q,0);\n        return a ==b && da == db;\n    }\n};","compare_result":"1001101010111010011000101111111111010110111101010011100011110010110001111110011111110100011000011111100","title_slug":"cousins-in-binary-tree"}