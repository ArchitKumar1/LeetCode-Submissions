{"id":216622790,"lang":"cpp","time":"2 years, 9 months","timestamp":1553210939,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/216622790/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"11.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int dx = 0;\n    int dy = 0;\n    int parx = 0;\n    int pary = 0;\n    int X;\n    int Y;\n    void dfs(TreeNode* root,int depth = 0,int par = -1 ){\n        if(!root) return;\n        if(root->val == X){\n            parx = par;\n            dx = depth;\n        }\n        if(root->val == Y){\n            pary = par;\n            dy = depth;\n        }\n        dfs(root->left,depth+1,root->val);\n        dfs(root->right,depth+1,root->val);\n    }\n    bool isCousins(TreeNode* root, int x, int y) {\n        X = x;\n        Y=y;\n        dfs(root,0,-1);\n        if(dx == dy && parx!=pary)\n            return true;\n        else\n            return false;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree"}