{"id":251651132,"lang":"cpp","time":"2 years, 4 months","timestamp":1565804471,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/251651132/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* st1,*st2;\n        st1 = head;\n        ListNode* ans = new ListNode(1);\n        st2 = ans;\n        vector<ListNode*> vv;\n        int pos = 0;\n        while(head){\n            if(pos < k){\n                pos++;\n                vv.push_back(head);\n            }else{\n                pos = 1;\n                reverse(vv.begin(),vv.end());\n                for(auto x: vv){\n                    ans->next = x;\n                    ans = ans->next;\n                }\n                vv.clear();\n                vv.push_back(head);\n            }\n            head = head->next;\n        }\n        if(vv.size());\n        for(auto x: vv){\n            ans->next = x;\n            ans = ans->next;\n        }\n        vv.clear();\n        return st2->next;\n    }\n};","compare_result":"111111110111011010110110011011111111101101110011111111111111111111110011111111111","title_slug":"reverse-nodes-in-k-group"}