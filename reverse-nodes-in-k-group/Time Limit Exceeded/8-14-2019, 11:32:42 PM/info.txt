{"id":251655463,"lang":"cpp","time":"2 years, 4 months","timestamp":1565805762,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/251655463/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* st1,*st2;\n        st1 = head;\n        ListNode* ans = new ListNode(11);\n        st2 = ans;\n        vector<ListNode*> vv;\n        int pos = 0;\n        while(head){\n            if(pos < k){\n                pos++;\n                vv.push_back(head);\n                head = head->next;\n            }else{\n                pos = 0;\n                reverse(vv.begin(),vv.end());\n                for(auto x: vv){\n                    ans->next = x;\n                    ans = ans->next;\n                }\n                vv.clear();\n            }        \n        }\n        if(vv.size()){\n            reverse(vv.begin(),vv.end());\n            for(auto x: vv){\n                ans->next = x;\n                ans = ans->next;\n            }\n        }\n        return st2->next;\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"reverse-nodes-in-k-group"}