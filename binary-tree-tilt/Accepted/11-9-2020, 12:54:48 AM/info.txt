{"id":418176280,"lang":"cpp","time":"1 year, 1 month","timestamp":1604863488,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/418176280/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"24.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    int ans = 0;\n    int dfs(TreeNode* root) {\n        if(!root) return 0;\n        int l = dfs(root->left);\n        int r = dfs(root->right);\n        ans += abs(r-l);\n        return root->val+l+r;\n    }\n    \n    int findTilt(TreeNode* root) {\n        dfs(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt"}