{"id":458513034,"lang":"cpp","time":"10Â months","timestamp":1613856596,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/458513034/","is_pending":"Not Pending","title":"Tree of Coprimes","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> getCoprimes(vector<int>& nums, vector<vector<int>>& edges) {\n        \n        int n = nums.size();\n        vector<vector<int>> G(n);\n        \n        for(auto e : edges){\n            int u = e[0],v=e[1];\n            G[u].push_back(v);\n            G[v].push_back(u);\n        }\n    \n        vector<stack<pair<int,int>>> facts(51);\n        vector<int> fans(n,-1);\n        \n        function<void(int,int,int)> dfs = [&](int s,int par,int d) -> void {\n            int best = -1;\n            int ans = -1;\n            for(int i = 1;i<=50;i++){\n                if(__gcd(nums[s],i) == 1){\n                    if(facts[i].size() && facts[i].top().second > best){\n                        cout << s << \" \" << i << \" \" << facts[i].top().first << \" \"<< facts[i].top().second << endl;\n                        best = facts[i].top().second;\n                        ans = facts[i].top().first;\n                    }\n                }\n            }\n            fans[s] = ans;\n            facts[nums[s]].push({s,d});\n            for(int c : G[s]){\n                if(c != par) dfs(c,s,d+1);\n            }\n            facts[nums[s]].pop();\n        };\n        \n        \n        dfs(0,0,0);\n        return fans;\n    }\n};","compare_result":"111111111111111111111111111111100000","title_slug":"tree-of-coprimes"}