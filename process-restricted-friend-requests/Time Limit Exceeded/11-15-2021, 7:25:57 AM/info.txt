{"id":587301201,"lang":"cpp","time":"1 month, 1 week","timestamp":1636941357,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/587301201/","is_pending":"Not Pending","title":"Process Restricted Friend Requests","memory":"N/A","code":"class Dsu {\n    public:\n    vector<int> par;\n    vector<int> sz;\n    int n;\n    Dsu(){}\n    Dsu(int _n) : n(_n) {\n        par.resize(n);\n        iota(par.begin(), par.end(), 0);\n        sz.assign(n,1);\n    } \n    inline int get(int x) {\n        return (x == par[x] ? x : (par[x] = get(par[x])));\n    }\n    inline bool merge(int x, int y) {\n        x = get(x);\n        y = get(y);\n        if (x != y) {\n            par[x] = y;\n            sz[y] += sz[x];\n            return true;\n        }\n        return false;\n    }\n};\n\nclass Solution {\npublic:\n    vector<bool> friendRequests(int n, vector<vector<int>>& restrictions, vector<vector<int>>& requests) {\n        Dsu d(n);\n        vector<bool> ans;\n        ans.reserve(n);\n        for(auto r : requests){\n            int u = r[0],v = r[1];\n            if(d.get(u) == d.get(v)){\n                ans.push_back(true);\n                continue;\n            }\n            bool safe = true;\n            for(auto re : restrictions){\n                int x = re[0],y = re[1];\n                if((d.get(u) == d.get(x) && d.get(v) == d.get(y)) || \n                   (d.get(u) == d.get(y) && d.get(v) == d.get(x) )){\n                // if(d.get(u) == x && d.get(v) == y){\n                    safe = false;\n                }\n            }\n            ans.push_back(safe);\n            if(safe) d.merge(u,v);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111000","title_slug":"process-restricted-friend-requests"}