{"id":205028839,"lang":"cpp","time":"2 years, 10 months","timestamp":1548993412,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/205028839/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<string> binaryTreePaths(TreeNode* root) {\n        vector<string> s1;\n        string curr;\n        if(root==NULL) return s1;\n        else{\n            char a=root->val+ '0';\n            curr=curr+a;\n        }\n        dfs(root,s1,curr);\n        return s1;\n    }\n    void dfs(TreeNode* root,vector<string> &s1,string curr){\n        if(root->right==NULL and root->left==NULL) {\n            s1.push_back(curr);\n        }\n        if(root->left){\n            char a=root->left->val+'0';\n            string x=to_string(root->left->val);\n            string s=\"->\"+x;\n            dfs(root->left,s1,curr+s);\n            \n        }\n        if(root->right){\n            char a=root->right->val+'0';\n            string x=to_string(root->right->val);\n            string s=\"->\"+x;\n            dfs(root->right,s1,curr+s);\n        }\n        \n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100","title_slug":"binary-tree-paths"}