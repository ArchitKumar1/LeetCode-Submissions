{"id":205086646,"lang":"cpp","time":"2 years, 10 months","timestamp":1549013883,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/205086646/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"1.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isBalanced(TreeNode* root) {\n        if(root == NULL) return 1;\n        if(abs(depth(root->left)-depth(root->right))>1)\n            return 0;\n        else return isBalanced(root->left) && isBalanced(root->right);\n    }\n    int depth(TreeNode* root){\n        if(root == NULL ) return 0;\n        int left=depth(root->left)+1;\n        int right=depth(root->right)+1;\n        return max(left,right);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}