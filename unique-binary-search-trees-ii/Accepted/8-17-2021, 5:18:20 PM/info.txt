{"id":539859230,"lang":"cpp","time":"4 months, 1 week","timestamp":1629200900,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/539859230/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"16.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode*> solve(int l,int r ) {\n        if( l > r) return {NULL};\n        vector<TreeNode*>  ans,left,right;\n        for(int i = l;i <=r;i++){\n            left = solve(l,i-1);\n            right = solve(i+1,r);\n            for(auto L : left){\n                for(auto R : right){\n                    TreeNode *node = new TreeNode(i);\n                    node->left = L;\n                    node->right = R;\n                    ans.push_back(node);\n                }\n            }\n        }\n        return ans;\n    }\n    vector<TreeNode*> generateTrees(int n) {\n        return solve(1,n);\n    }\n};","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}