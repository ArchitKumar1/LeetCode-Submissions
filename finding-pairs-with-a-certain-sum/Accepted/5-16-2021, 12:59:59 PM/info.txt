{"id":493863069,"lang":"cpp","time":"7 months, 1 week","timestamp":1621150199,"status_display":"Accepted","runtime":"1060 ms","url":"/submissions/detail/493863069/","is_pending":"Not Pending","title":"Finding Pairs With a Certain Sum","memory":"186.5 MB","code":"\nclass FindSumPairs {\npublic:\n    vector<int> nums1;\n    vector<int> nums2;\n    map<long long,int> m1;\n    map<int,int> m2;\n    map<int,int> cnt;\n    \n    \n    FindSumPairs(vector<int>& n1, vector<int>& n2) {\n        nums1 = n1;\n        nums2 = n2;\n        for(int c : nums1){\n            m1[c]++;\n        }\n        for(int c : nums2){\n            m2[c]++;\n        }\n    }\n    \n    void add(int i, int val) {\n        m2[nums2[i]]--;\n        nums2[i]+=val;\n        m2[nums2[i]]++;\n    }\n    \n    int count(int tot) {\n        int ans = 0;\n        for(auto [c,cnt] : m1){\n            int rem = tot-c;\n            ans += cnt * m2[rem];\n        }\n        return ans;\n    }\n    \n};\n\n/**\n * Your FindSumPairs object will be instantiated and called as such:\n * FindSumPairs* obj = new FindSumPairs(nums1, nums2);\n * obj->add(index,val);\n * int param_2 = obj->count(tot);\n */","compare_result":"1111111111111111111111111","title_slug":"finding-pairs-with-a-certain-sum"}