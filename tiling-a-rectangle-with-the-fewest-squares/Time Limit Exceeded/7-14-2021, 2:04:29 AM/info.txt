{"id":522089424,"lang":"cpp","time":"5 months, 1 week","timestamp":1626208469,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/522089424/","is_pending":"Not Pending","title":"Tiling a Rectangle with the Fewest Squares","memory":"N/A","code":"class Solution {\npublic:\n    \n    int tilingRectangle(int n, int m) {\n        vector<vector<int>> grid(n,vector<int>(m,0));\n        \n        int S = min(n,m);\n        auto present = [&](int x,int y,int sz,int val) -> bool{\n            for(int i = x;i < x+sz ;i++){\n                for(int j = y;j <y+sz ;j++){\n                    if(grid[i][j] != val) return 0;\n                }\n            }\n            return 1;\n        };\n        auto done = [&]() -> bool{\n            for(int i = 0;i < n;i++){\n                for(int j = 0;j < m;j++){\n                    if(grid[i][j] == 0) return 0;\n                }\n            }\n            return 1;\n        };\n        auto paint = [&](int x,int y,int sz,int val) -> void{\n            //assumes it can paint\n            for(int i = x;i < x+sz;i++){\n                for(int j = y;j < y+sz ;j++){\n                    grid[i][j] = val;\n                }\n            }\n        };\n        \n        auto unused = [&](){\n            //assumes it can paint\n            vector<pair<int,int>> points;\n            for(int i = 0;i < n;i++){\n                for(int j =0;j < m;j++){\n                    if(grid[i][j] == 0) points.emplace_back(i,j);\n                }\n            }\n            return points;\n        };\n        auto print = [&](){\n            //assumes it can paint\n            for(int i = 0;i < n;i++){\n                for(int j =0;j < m;j++){\n                    cout << grid[i][j] << \" \";\n                }\n                cout << endl;\n            }\n        };\n        int fans = INT_MAX;\n        function<void(int)> dfs = [&](int cnt){\n            //print();\n            //cout << cnt << endl;\n            // check if the grid is competely full;\n            if(done()){\n                //cout << \"mila\" << endl;\n                fans = min(fans,cnt);\n                return;\n            }\n            vector<pair<int,int>> points = unused();\n            for(auto [x,y] : points){\n                //cout << x << \" \" << y << endl;;\n                for(int s = 1;s <= S;s++){\n                    if(x + s <= n && y + s <= m){\n                        if(present(x,y,s,0)){\n                            //cout << x << \" \" << y << \" \" << s << endl;\n                            paint(x,y,s,1);\n                            dfs(cnt+1);\n                            paint(x,y,s,0);\n                        }\n                    }\n                }\n            }\n        };\n        dfs(0);\n        return fans;\n    }\n};","compare_result":"10000000000000000000000000000000000000","title_slug":"tiling-a-rectangle-with-the-fewest-squares"}