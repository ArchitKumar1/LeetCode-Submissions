{"id":447200220,"lang":"cpp","time":"11Â months","timestamp":1611499562,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/447200220/","is_pending":"Not Pending","title":"Count Unique Characters of All Substrings of a Given String","memory":"N/A","code":"#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)\ntemplate<typename Arg1>\nvoid __f(const char* name,Arg1&& arg1){cout<<name<<\" : \"<<arg1<<endl;}\ntemplate<typename Arg1,typename... Args>\nvoid __f(const char* names,Arg1&& arg1,Args&&... args){const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<\" : \"<<arg1<<\" | \";__f(comma+1,args...);}\n\nclass Solution {\npublic:\n    int uniqueLetterString(string s) {\n        \n        int MOD = 1e9+7;\n        long long int ans = 0;\n        \n        vector<vector<int>> cnt(26);\n        \n        int n = s.size();\n        for(int i = 0;i<n;i++){\n            cnt[s[i]-'A'].push_back(i);\n        }\n        \n        for(int i= 0;i<26;i++){\n            for(int j = 0;j<cnt[i].size();j++){\n                long long int L = (j==0 ? cnt[i][j] : cnt[i][j] - cnt[j][j-1]);\n                long long int R = (j+1 == cnt[i].size() ?  n-1 - cnt[i][j] : cnt[i][j+1]-cnt[i][j]);\n                L++,R++;\n                trace(i,j,L,R,cnt[i][j]);\n                (ans += (L*R) %MOD)%= MOD;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"100000000000000000000000000000000000000000000000000000000000000","title_slug":"count-unique-characters-of-all-substrings-of-a-given-string"}