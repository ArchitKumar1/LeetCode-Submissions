{"id":478768565,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1618035751,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/478768565/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"N/A","code":"class Solution {\npublic:\n    bool isAlienSorted(vector<string>& W, string order) {\n        map<char,int> m1;\n        int pos = 0;\n        for(char c : order) m1[c] = pos++;\n        auto words = W;\n        \n        sort(words.begin(),words.end(),[&](string s ,string t){\n\n            int c = 0,d = 0;\n            while( c < s.size() || d < t.size()){\n                if(c == s.size()) return 1;\n                else if(d == t.size()) return 0;\n                else{\n                    if(m1[s[c]] < m1[s[d]]) return 1;\n                    else if(m1[s[c]] > m1[s[d]])return 0;\n                }\n                c++,d++;\n            }\n            return 1;\n        });\n        return W == words;\n    }\n};","compare_result":"11111010100110000001101101110101111111111111111111111111111111111111000000000000000000000000000000000000000000000000000","title_slug":"verifying-an-alien-dictionary"}