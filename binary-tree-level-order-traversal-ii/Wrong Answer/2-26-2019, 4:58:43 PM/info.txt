{"id":210780773,"lang":"cpp","time":"2 years, 10 months","timestamp":1551180523,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/210780773/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans[100000];\n    int  m = 0; \n    void dfs(TreeNode* root,int depth){\n        if(!root) \n            return;\n        m = max(m,depth);\n        ans[depth].push_back(root->val);\n        dfs(root->left,depth+1);\n        dfs(root->right,depth+1);\n    }\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        dfs(root,0);\n        vector<int> temp;\n        vector<vector<int>> a;\n        for(int i=m;i>=0;i--){\n            temp.clear();\n            for(auto c: ans[i]){\n                temp.push_back(c);\n            }\n            a.push_back(temp);\n        }\n        return a;\n    }\n};","compare_result":"1011111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}