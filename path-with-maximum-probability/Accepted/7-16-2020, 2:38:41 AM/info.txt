{"id":367113787,"lang":"cpp","time":"1 year, 5 months","timestamp":1594847321,"status_display":"Accepted","runtime":"540 ms","url":"/submissions/detail/367113787/","is_pending":"Not Pending","title":"Path with Maximum Probability","memory":"71.1 MB","code":"class Solution {\npublic:\n    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& succProb, int start, int end) {\n        \n        vector<vector<pair<int,double>>> G(n);\n        int pos = 0;\n        for(auto x : edges){\n            int u = x[0];\n            int v = x[1];\n            double d = succProb[pos++];\n            G[u].emplace_back(v,d);\n            G[v].emplace_back(u,d);\n        }\n        vector<int> vis(n,0);\n        vector<double> dist(n,0);\n        \n        \n        dist[start] = 1;\n        \n        priority_queue<pair<double,int>> s;\n        s.push({1,start});\n        \n        while(s.size()){\n            \n            auto [d,u] = s.top();\n            s.pop();\n            \n            if(vis[u] == 1) continue;\n            vis[u] = 1;\n            \n            for(auto p : G[u]){\n                if(dist[p.first] < dist[u]*p.second){\n                    s.push({dist[p.first] = dist[u]*p.second,p.first});\n                }\n            }\n        }\n        return dist[end];\n        \n\n        \n    }\n};","compare_result":"1111111111111111","title_slug":"path-with-maximum-probability"}