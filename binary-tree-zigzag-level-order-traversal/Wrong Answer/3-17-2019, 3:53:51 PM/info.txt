{"id":215450484,"lang":"cpp","time":"2 years, 9 months","timestamp":1552818231,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/215450484/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int m = 0;\n    void dfs(TreeNode* root,vector<vector<int>> &ans,int depth = 0){\n        if(!root) return ;\n        ans[depth].push_back(root->val);\n        m = max(m,depth);\n        dfs(root->left,ans,depth+1);\n        dfs(root->right,ans,depth+1);\n    }\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> ans(100000);\n        dfs(root,ans,0);\n        for(int i=1;i<=m;i= i+2){\n            reverse(ans[i].begin(),ans[i].end());\n        }\n        ans.resize(m+1);\n        return ans;\n    }\n};","compare_result":"101111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}