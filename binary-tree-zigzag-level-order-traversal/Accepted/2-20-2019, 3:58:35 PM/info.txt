{"id":209295125,"lang":"cpp","time":"2 years, 10 months","timestamp":1550658515,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/209295125/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"16.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v[100000];\n    int ma = 0;\n    void dfs(TreeNode* root, int depth){\n        if(root == NULL)\n            return ;\n        v[depth].push_back(root->val);\n        ma = max(ma,depth);\n        dfs(root->left,depth+1);\n        dfs(root->right,depth+1);\n    }\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        vector<vector<int>> ans;\n        if(root == NULL)\n            return ans;\n        int si = 1;\n        dfs(root,0);\n        \n        vector<int> temp;\n        for(int j=0;j<=ma;j++){\n            if(si == 1){\n                for(int i=0;i<v[j].size();i++)\n                    temp.push_back(v[j][i]);\n                si = -1;\n            }\n            else{\n                for(int i=v[j].size()-1 ;i>=0;i--)\n                    temp.push_back(v[j][i]);\n                si = 1;\n            }\n            ans.push_back(temp);\n            temp.clear();\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}