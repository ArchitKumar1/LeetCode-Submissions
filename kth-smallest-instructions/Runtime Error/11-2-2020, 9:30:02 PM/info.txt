{"id":416004247,"lang":"cpp","time":"1 year, 1 month","timestamp":1604332802,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/416004247/","is_pending":"Not Pending","title":"Kth Smallest Instructions","memory":"N/A","code":"#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)\ntemplate<typename Arg1>\nvoid __f(const char* name,Arg1&& arg1){\n\tcout<<name<<\" : \"<<arg1<<endl;\n}\ntemplate<typename Arg1,typename... Args>\nvoid __f(const char* names,Arg1&& arg1,Args&&... args){\n\t\tconst char* comma=strchr(names+1,',');cout.write(names,comma-names)<<\" : \"<<arg1<<\" | \";__f(comma+1,args...);\n}\n\nclass Solution {\npublic:\n    string kthSmallestPath(vector<int>& destination, int k) {\n        \n        int MAXN = 20;\n        long long int ncr[MAXN][MAXN];\n        memset(ncr,0,sizeof(ncr));\n        for(int i = 1;i<MAXN;i++){\n            ncr[i][0] = ncr[i][i] = 1;\n            for(int j = 1;j<i;j++){\n                ncr[i][j] = ncr[i-1][j-1] + ncr[i-1][j];\n            }\n        }\n        \n        int N = destination[0] ,M= destination[1];\n        int L = N + M;\n        \n        \n        auto ranker= [&](int a,int b){\n            trace(a,b);\n            return ncr[a+b][b];\n            assert(a>=0);assert(b>=0);\n            \n        };\n        string ans;\n        \n        int currank = 0;\n        int cntH = M,cntV = N;\n        \n        for(int i = 0;i<L;i++){\n            int rankH,rankV;\n            trace(cntH,cntV);\n            bool f1 = 0,f2= 0;\n            if((cntH-1) >= 0){\n                rankH = ranker(cntH-1,cntV);\n                f1 = 1;\n            } \n            if((cntV-1)>= 0){\n                rankV = ranker(cntH,cntV-1);\n                f2 = 1;\n            } \n            \n            trace(i,cntH,cntV,rankH,rankV);\n            if(f1 && f2){\n                if( k<= rankH){\n                    ans += 'H';\n                    cout << ans << endl;\n                    cntH -= 1;\n                }else{\n                    ans += 'V';\n                    cout << ans << endl;\n                    k -= rankH;\n                    cntV -= 1;\n                }\n            }else if(f1){\n                ans += 'H';\n                cout << ans << endl;\n                cntH -= 1;\n            }else if(f2){\n                ans += 'V';\n                cout << ans << endl;\n                k -= rankH;\n                cntV -= 1;\n            }else{\n            cout << \"hola \" << endl;\n            }\n            trace(ans);\n            \n        }\n        return ans;\n    }\n};","compare_result":"111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"kth-smallest-instructions"}