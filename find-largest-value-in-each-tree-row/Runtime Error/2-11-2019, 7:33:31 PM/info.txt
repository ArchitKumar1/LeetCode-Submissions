{"id":207170918,"lang":"cpp","time":"2 years, 10 months","timestamp":1549893811,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/207170918/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> v1;\n    int arr[10];\n    void dfs(TreeNode* root,int sum){\n        \n        if(root==NULL) return ;\n        sum=sum+1;\n        arr[sum-1]=max(arr[sum-1],root->val);\n        dfs(root->right,sum);\n        dfs(root->left,sum);\n    }\n    vector<int> largestValues(TreeNode* root) {\n        memset(arr,-1,sizeof(arr));\n        dfs(root,0);\n        for(int i=0;i<10;i++){\n            if(arr[i]!=-1)\n                v1.push_back(arr[i]);\n        }\n        return v1;\n    }\n};","compare_result":null,"title_slug":"find-largest-value-in-each-tree-row"}