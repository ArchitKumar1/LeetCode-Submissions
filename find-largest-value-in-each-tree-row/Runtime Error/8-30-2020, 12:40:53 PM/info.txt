{"id":388368271,"lang":"cpp","time":"1 year, 3 months","timestamp":1598771453,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/388368271/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n    \n        vector<int> ans(1100,INT_MIN);\n        vector<int> vis(1000,0);\n        \n        stack<pair<int,TreeNode*>>st;\n        st.push({0,root});\n        \n        while(st.size()){\n            \n            auto[d,curr] = st.top();st.pop();\n            if(curr == NULL) continue;\n            ans[d] = max((int)ans[d],curr->val);\n            vis[d] =1;\n            st.push({d+1,curr->left});\n            st.push({d+1,curr->right});\n            \n        }\n        int pos = 0;\n        for(;pos<ans.size();pos++){\n            if(vis[pos] == 0)break;\n        }\n        ans.resize(pos);\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111110000000000000000000000","title_slug":"find-largest-value-in-each-tree-row"}