{"id":579718262,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1635645208,"status_display":"Accepted","runtime":"547 ms","url":"/submissions/detail/579718262/","is_pending":"Not Pending","title":"Plates Between Candles","memory":"139.4 MB","code":"class Solution {\npublic:\n    vector<int> platesBetweenCandles(string s, vector<vector<int>>& queries) {\n        int n = s.size();\n        vector<int> cnts(n+1);\n        for(int i = 0;i < n;i++){\n            cnts[i+1] = (s[i] == '|') + cnts[i];\n        }\n        auto get = [&](int l,int r){\n            return cnts[r+1] - cnts[l];\n        };\n        \n        vector<int> v;\n        for(int i = 0;i < n;i++){\n            if(s[i] == '|') v.push_back(i);\n        }\n        int q = queries.size();\n        vector<int> ans(q);\n        \n        for(int i = 0;i < q;i++){\n            int l = queries[i][0];\n            int r = queries[i][1];\n            auto il = lower_bound(v.begin(),v.end(),l);\n            auto ir = upper_bound(v.begin(),v.end(),r);\n            \n            if(il == v.end() || *il > r) {\n                ans[i] = 0;\n            }else{\n                ir = prev(ir);\n                int L = *il;\n                int R = *ir;\n                int count = R - L + 1 - get(L,R);\n                ans[i] = count;\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111","title_slug":"plates-between-candles"}