{"id":506860513,"lang":"cpp","time":"6 months, 2 weeks","timestamp":1623511693,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/506860513/","is_pending":"Not Pending","title":"Largest Magic Square","memory":"10.3 MB","code":"class Solution {\npublic:\n    \n \n    int largestMagicSquare(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        int fans = 0;\n        vector<vector<int>> rs = grid;\n        vector<vector<int>> cs = grid;\n        \n        for(int i = 0;i < n;i++){\n            for(int j=1;j< m;j++){\n                rs[i][j] += rs[i][j-1];\n            }\n        }\n        for(int j=0;j< m;j++){\n            for(int i = 1;i < n;i++){\n                cs[i][j] += cs[i-1][j];\n            }\n        }\n        auto gr = [&](int r,int c1,int c2){\n            if( c1 == 0 ) return rs[r][c2];\n            else return rs[r][c2] - rs[r][c1-1];\n        };\n        auto gc = [&](int c,int r1,int r2){\n            if( r1 == 0 ) return cs[r2][c];\n            else return cs[r2][c] - cs[r1-1][c];\n        };\n        for(int i = 0;i < n;i++){\n            for(int j=0;j< m;j++){\n                for(int k=1;k+i -1 < n && k+j-1 < m;k++){\n                    int len = k;\n                    int d1=0,d2=0;\n                    bool ans = true;\n                    for(int x = 0;x<len;x++){\n                        // cout << i + x << \" \" << j + x << endl;\n                        d1 += grid[i+x][j+x];\n                        d2 += grid[i+x][len-1+j-x];\n                    }\n                    if(d1 != d2) ans = false;\n                    int rows = 0;\n                    for(int x = 0;x<len;x++){\n                        \n                        rows = gr(i+x,j,j+len-1);\n                        // if(i==1&&j==1){\n                        //     cout << rows  << endl;\n                        // }\n                        if(rows!=d1) ans = false;\n                    }\n                    int cols = 0;\n                    for(int x = 0;x<len;x++){\n                        cols = gc(j+x,i,i+len-1);\n                        // if(i==1&&j==1){\n                        //     cout << cols  << endl;\n                        // }\n                        if(cols!=d1) ans = false;\n                    }\n                    if(ans == true) fans = max(fans,len);\n                    // if(i==1&&j==1){\n                    //     cout << d1 << \" \" << d2 << \" \" << ans << endl;\n                    // }\n                }\n            }\n        }\n        cout << endl;\n        return fans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-magic-square"}