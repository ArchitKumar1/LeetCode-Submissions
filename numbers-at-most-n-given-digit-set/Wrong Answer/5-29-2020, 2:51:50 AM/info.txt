{"id":345996443,"lang":"cpp","time":"1 year, 6 months","timestamp":1590700910,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/345996443/","is_pending":"Not Pending","title":"Numbers At Most N Given Digit Set","memory":"N/A","code":"class Solution {\npublic:\n\n    int atMostNGivenDigitSet(vector<string>& D, int N) {\n        int dp[11][11] ={0};\n        for(string s : D){\n            dp[1][s[0]-'0'] = 1;\n        }\n        int ans = 0;\n        for(int i = 2;i<11;i++){\n            for(string s : D){\n                for(int j = 0;j<=9;j++){\n                    dp[i][s[0]-'0'] += dp[i-1][j];\n                }\n            }\n        }\n       \n        string n = to_string(N);\n        int l = n.size();\n        map<pair<int,int>,int> m1;\n        for(int i = l-1;i>0;i--){\n            for(int j = 0;j<=9;j++){\n                if(dp[i][j] > 0){\n                    m1[{i,j}] = 1;\n                    cout << i << \" \" << j << \" \" << dp[i][j] <<  endl;\n                    ans += dp[i][j];\n                }\n            }\n        }\n        for(int i=0;i<l;i++){\n             int f = n[i] - '0';\n            for(int j =0 ;j<=9;j++){\n                if(j < f){\n                    ans += dp[l-i][j];\n                    cout << i << \" \" << j << \" \" << dp[l-i][j] << endl;\n                }else if(i== l-1 && j == f){\n                     ans += dp[l-i][j];\n                    cout << i << \" \" << j << \" \" << dp[l-i][j] << endl;\n                    j =10;\n                }\n                else{\n                    j =10;\n                }\n\n            }\n        }\n\n        for(int i = 0;i<4;i++){\n            for(int j =0;j<9;j++){\n                cout << dp[i][j] << \" \";\n            }\n            cout << endl;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111101111111000001111100000011000000101000000111100000001000000011000000001","title_slug":"numbers-at-most-n-given-digit-set"}