{"id":298979596,"lang":"cpp","time":"1 year, 10 months","timestamp":1580461030,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/298979596/","is_pending":"Not Pending","title":"Shortest Path in Binary Matrix","memory":"N/A","code":"class Solution {\npublic:\n    bool isin(int i,int j,int n,int m){\n        return (i>=0 && j>=0 && i<n && j<m);\n    }\n    int shortestPathBinaryMatrix(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n        vector<vector<int>> distance(n,vector<int> (m,0));\n        vector<vector<int>> vis(n,vector<int> (m,0));   \n        \n        \n        queue<pair<int,pair<int,int>>> qq;\n        qq.push({0,{0,0}});\n        while(qq.size()){   \n            auto curr = qq.front();\n            qq.pop();\n            int dist = curr.first;\n            int x = curr.second.first;\n            int y = curr.second.second;\n            distance[x][y] = dist;\n            if(vis[x][y] == 1) continue;\n            vis[x][y] = 1;\n            for(int i = -1;i<=1;i++){\n                for(int j = -1;j<=1;j++){\n                    if(i == 0 && j == 0) continue;\n                    int X = x + i;\n                    int Y = y + j;\n                    if(!isin(X,Y,n,m)) continue;\n                    qq.push({1+dist,{X,Y}});\n                }\n            }\n        }\n        if(vis[n-1][m-1] == 1){\n            return distance[n-1][m-1];\n        }else{\n            return -1;\n        }\n    }\n};","compare_result":"100010101010101000000000111111111100000000100100000000000000000000000000000000000000","title_slug":"shortest-path-in-binary-matrix"}