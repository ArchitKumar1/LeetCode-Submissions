{"id":535071221,"lang":"python3","time":"4 months, 2 weeks","timestamp":1628398850,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/535071221/","is_pending":"Not Pending","title":"Minimum Total Space Wasted With K Resizing Operations","memory":"N/A","code":"class Solution:\n    def minSpaceWastedKResizing(self, nums: List[int], K: int) -> int:\n        n = len(nums)\n        \n        @cache\n        def comp(i,p,k):\n            if i == n: return 0\n            ans = 0\n            if(nums[p] >= nums[i]):\n                a1,a2 = int(1e9),int(1e9)\n                if(k > 0): a1 = comp(i+1,i,k-1)\n                a2 = nums[p] - nums[i] + comp(i+1,p,k)\n                return min(a1,a2)\n            else:\n                # have to resize\n                if k > 0 :\n                    return comp(i+1,i,k-1);\n                else: return int(1e9)\n        fans = int(1e9)                   \n        for i in range(0,n):\n            comp.cache_clear()\n            fans = min(fans,comp(0,i,K))\n\n        return fans","compare_result":"111111110101000111111000010101101110000000100000010000000000000000000000","title_slug":"minimum-total-space-wasted-with-k-resizing-operations"}