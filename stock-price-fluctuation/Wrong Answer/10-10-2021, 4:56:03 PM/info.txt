{"id":568819755,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1633865163,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/568819755/","is_pending":"Not Pending","title":"Stock Price Fluctuation ","memory":"N/A","code":"class StockPrice {\npublic:\n    multiset<int> s;\n    unordered_map<int,int> m1;\n    vector<int> v;\n    StockPrice() {\n        \n    }\n    \n    void update(int t, int price) {\n        if(m1.find(t) != m1.end()){\n            s.find(s.erase(m1[t]));\n        }\n        s.insert(price);\n        if(m1.find(t) == m1.end()) v.push_back(t);\n        m1[t] = price;\n    }\n    \n    int current() {\n        return m1[v[v.size()-1]];\n    }\n    \n    int maximum() {\n        return *s.rbegin();\n    }\n    \n    int minimum() {\n        return *s.begin();\n    }\n};\n\n/**\n * Your StockPrice object will be instantiated and called as such:\n * StockPrice* obj = new StockPrice();\n * obj->update(timestamp,price);\n * int param_2 = obj->current();\n * int param_3 = obj->maximum();\n * int param_4 = obj->minimum();\n */","compare_result":"11000000000100000","title_slug":"stock-price-fluctuation"}