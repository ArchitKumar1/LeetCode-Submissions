{"id":216618721,"lang":"cpp","time":"2 years, 9 months","timestamp":1553209458,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/216618721/","is_pending":"Not Pending","title":"Walking Robot Simulation","memory":"39.8 MB","code":"\nclass Solution {\npublic:\n    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        int x=0, y = 0;\n        int dist = 0;\n        map<pair<int,int>,int> m1;\n        int pos = 0;\n        int dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\n        for(auto c : obstacles){\n            m1[{c[0],c[1]}]++;\n        }\n        for(int i=0;i<commands.size();i++){\n            if(commands[i] == -1){\n                pos = (pos + 1) % 4;\n            }\n            else if(commands[i] == -2){\n               pos = (pos + 3) % 4;\n            }\n            else{\n                int t = commands[i];\n                int s = 0;\n                for(int j=0;j<t;j++){\n                    pair<int,int> temp = {x + dir[pos][0],y+dir[pos][1]};\n                    if(m1[temp] == 0){\n                        x+=dir[pos][0];\n                        y+=dir[pos][1];\n                        dist = max(dist,(int)pow(x,2)+(int)pow(y,2));\n                    }\n                }   \n            }\n        }\n        return dist;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"walking-robot-simulation"}