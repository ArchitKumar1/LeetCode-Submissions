{"id":216618112,"lang":"cpp","time":"2 years, 9 months","timestamp":1553209255,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/216618112/","is_pending":"Not Pending","title":"Walking Robot Simulation","memory":"27.2 MB","code":"class Solution {\npublic:\n    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {\n        int x=0, y = 0;\n        int dist = 0;\n        set<pair<int, int>> obstacleSet;\n        int pos = 0;\n        int dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\n        for (vector<int> obstacle: obstacles)\n            obstacleSet.insert(make_pair(obstacle[0], obstacle[1]));\n        for(int i=0;i<commands.size();i++){\n            if(commands[i] == -1){\n                pos = (pos + 1) % 4;\n            }\n            else if(commands[i] == -2){\n               pos = (pos + 3) % 4;\n            }\n            else{\n                int t = commands[i];\n                for(int j=0;j<t;j++){\n                    pair<int,int> temp = {x + dir[pos][0],y+dir[pos][1]};\n                    if (obstacleSet.find(temp) == obstacleSet.end()){\n                        x+=dir[pos][0];\n                        y+=dir[pos][1];\n                        dist = max(dist,x*x +y*y);\n                    }\n                }   \n            }\n        }\n        return dist;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"walking-robot-simulation"}