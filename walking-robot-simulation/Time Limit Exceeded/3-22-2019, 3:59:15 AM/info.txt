{"id":216612862,"lang":"cpp","time":"2 years, 9 months","timestamp":1553207355,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/216612862/","is_pending":"Not Pending","title":"Walking Robot Simulation","memory":"N/A","code":"class Solution {\npublic:\n    int robotSim(vector<int>& commands, vector<vector<int>>& obstacles) {\n        int x=0, y = 0;\n        int dist = 0;\n        map<pair<int,int>,int> m1;\n        int pos = 0;\n        int dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\n        for(auto c : obstacles){\n            m1[{c[0],c[1]}]++;\n        }\n        for(int i=0;i<commands.size();i++){\n            if(commands[i] == -1){\n                pos = + 1;\n                pos %= 4;\n            }\n            else if(commands[i] == -2){\n                pos = - 1;\n                pos %= 4;\n            }\n            else{\n                int x = commands[i];\n                int s = 0;\n                for(int j=0;j<x;j++){\n                    if(!s){\n                        pair<int,int> temp = {x + dir[pos][0],y+dir[pos][1]};\n                        if(m1[temp] == 0){\n                            x+=dir[pos][0];\n                            y+=dir[pos][1];\n                        }\n                        else{\n                            s = 1;\n                        }\n                    }\n                }   \n            }\n            dist = max(dist,(int)pow((int)pow(x,2)+pow(y,2),0.5));\n        }\n        return dist;\n        \n    }\n};","compare_result":"00000000000000000000000000000000000000000000000","title_slug":"walking-robot-simulation"}