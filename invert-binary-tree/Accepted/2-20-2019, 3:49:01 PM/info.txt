{"id":209294152,"lang":"cpp","time":"2 years, 10 months","timestamp":1550657941,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/209294152/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* root){\n        if( root == NULL)\n            return;\n        TreeNode* temp = root->left;\n        root->left = root->right;\n        root->right = temp;\n        dfs(root->right);\n        dfs(root->left);\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        dfs(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}