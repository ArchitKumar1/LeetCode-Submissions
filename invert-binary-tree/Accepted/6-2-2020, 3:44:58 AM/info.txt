{"id":347748488,"lang":"cpp","time":"1 year, 6 months","timestamp":1591049698,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/347748488/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void dfs(TreeNode* r){\n        if(!r) return ;\n        swap(r->left,r->right);\n        dfs(r->left);dfs(r->right);\n    }\n    TreeNode* invertTree(TreeNode* root) {\n        dfs(root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}