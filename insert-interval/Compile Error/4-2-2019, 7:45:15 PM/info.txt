{"id":219491500,"lang":"cpp","time":"2 years, 8 months","timestamp":1554214515,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/219491500/","is_pending":"Not Pending","title":"Insert Interval","memory":"N/A","code":"/**\n * Definition for an interval.\n * struct Interval {\n *     int start;\n *     int end;\n *     Interval() : start(0), end(0) {}\n *     Interval(int s, int e) : start(s), end(e) {}\n * };\n */\nclass Solution {\npublic:\n    vector<Interval> insert(vector<Interval>& intervals, Interval newInterval) {\n        vector<Interval> ans;\n        intervals.push_back(newInterval);\n        priority_queue<Interval,vector<Interval>,greater<Interval>> pq;\n        for(auto c : intervals){\n            pq.push(c);\n        }\n        while(!pq.empty()){\n            Interval a = pq.top();\n            pq.pop();\n            int x = a.start;\n            int y = a.end;\n            \n            while(!pq.empty()){\n                Interval v = pq.top();\n                pq.pop();\n                if(y > v.start)\n                    continue;\n                else{\n                    y = a.end;\n                    break;\n                }\n            }\n            Interval z(x,y) ;\n            \n            ans.push_back(z);\n        }\n        return ans;\n    }\n};","compare_result":null,"title_slug":"insert-interval"}