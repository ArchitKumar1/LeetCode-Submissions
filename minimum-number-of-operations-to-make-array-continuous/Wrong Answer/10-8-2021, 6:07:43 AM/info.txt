{"id":567591246,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1633653463,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/567591246/","is_pending":"Not Pending","title":"Minimum Number of Operations to Make Array Continuous","memory":"N/A","code":"class Solution {\npublic:\n    int minOperations(vector<int>& nums) {\n        vector<int> new_nums = nums;\n        sort(new_nums.begin(),new_nums.end());\n        new_nums.resize(unique(new_nums.begin(),new_nums.end()) - new_nums.begin());\n        int duplicates = nums.size() - new_nums.size();\n        \n        vector<array<int,3>> segs;\n        \n        int n = new_nums.size();\n        for(int i = 0;i < n;i++){\n            int cnt = 1;\n            int L = i;\n            while( i + 1 < n && new_nums[i+1]- 1 == new_nums[i]){\n                cnt += 1;\n                i += 1;\n            }\n            segs.push_back({cnt,L,i});\n        }\n        sort(segs.begin(),segs.end());\n        auto [cnt,L,R] = *segs.rbegin();\n        // cout << cnt << \" \" << L << \" \" << R << endl;\n        int ans = new_nums.size() - cnt + duplicates;\n        return ans;\n    }\n};","compare_result":"10111000000000000000000000000000000000000000000000000110010111","title_slug":"minimum-number-of-operations-to-make-array-continuous"}