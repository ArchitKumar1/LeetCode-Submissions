{"id":597285968,"lang":"cpp","time":"2 weeks, 4 days","timestamp":1638704870,"status_display":"Accepted","runtime":"936 ms","url":"/submissions/detail/597285968/","is_pending":"Not Pending","title":"Valid Arrangement of Pairs","memory":"349.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> validArrangement(vector<vector<int>>& pairs) {\n        unordered_map<int,int> atu , uta;\n        const int N = 1e5 + 1;\n        int timer = 0;\n        int M = pairs.size();\n        \n        auto getU = [&](int a){\n            if(atu.find(a)!=atu.end()) return atu[a];\n            else{\n                atu[a] = timer;\n                uta[timer] = a;\n                timer++;\n                return atu[a];\n            }\n        };\n        vector<pair<int,int>> E(M);\n        vector<int> G[N];\n        vector<int> in(N),out(N);\n        vector<int> vis(N);\n        for(int i = 0;i < M;i++){\n            vector<int> p = pairs[i];\n            int u = p[0],v = p[1];\n            u = getU(u);\n            v = getU(v);\n            G[u].push_back(i);\n            out[u]++,in[v]++;\n            E[i].first = u;\n            E[i].second = v;\n        }\n        int s = 0;\n        for(int i = 0;i < N;i++){\n            if((out[i]-in[i]) == 1) s = i;\n        }\n        vector<int> res;\n        function<void(int)> dfs = [&](int s){\n            while(G[s].size()){\n                int e = G[s].back();\n                G[s].pop_back();\n                if(vis[e] == 1){\n                    continue;\n                }\n                vis[e] = 1;\n                dfs(E[e].second^E[e].first^s);\n            }\n            res.push_back(s);\n        };\n        dfs(s);\n        vector<vector<int>> ans;\n        reverse(res.begin(),res.end());\n        for(int i = 1;i < res.size();i++){\n            ans.push_back({uta[res[i-1]],uta[res[i]]});\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"valid-arrangement-of-pairs"}