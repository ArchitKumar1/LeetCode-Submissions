{"id":309657581,"lang":"cpp","time":"1 year, 9 months","timestamp":1583437034,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/309657581/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"12.4 MB","code":"class Solution {\npublic:    \n    unordered_map<long long,int> par,size,m1;\n    int find(int v){\n        return (par[v] == v ? v : par[v] = find(par[v]));\n    }\n    void merge(int a,int b){\n        a = find(a);\n        b = find(b);\n        if(a == b) return ;\n        par[b] = a;\n        size[a] += size[b];\n    }\n    int longestConsecutive(vector<int>& nums2) {\n        vector<long long> nums;\n        for(int c :nums2){\n            // nums.push_back((long long)c + offset);\n            nums.push_back((long long)c );\n            \n        }\n        for(int c : nums){\n            \n            m1[c] = 1;\n            par[c] = c;\n            size[c] = 1;\n        }\n        for(int c : nums){\n            if(m1.find(c+1)!= m1.end()){\n                merge(c,c+1);\n            }\n            if(m1.find(c-1)!= m1.end()){\n                merge(c,c-1);\n            }\n        }\n        int s = 0;\n        for(int c : nums){\n            s = max(s,size[find(c)]);\n        }\n        return s;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}