{"id":309654353,"lang":"cpp","time":"1 year, 9 months","timestamp":1583436168,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/309654353/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"N/A","code":"class Solution {\npublic:\n    int N = 1e6;\n    vector<int> par,size;\n    int find(int v){\n        return (par[v] == v ? v : par[v] = find(par[v]));\n    }\n    void merge(int a,int b){\n        a = find(a);\n        b = find(b);\n        if(a == b) return ;\n        par[b] = a;\n        size[a] += size[b];\n    }\n    int longestConsecutive(vector<int>& nums) {\n        par.assign(N,0);\n        size.assign(N,1);\n        for(int i = 0;i<N;i++){\n            par[i] = i;\n        }\n        unordered_map<int,int>m1;\n        for(int c : nums){\n            m1[c] = 1;\n        }\n        for(int c : nums){\n            if(m1.find(c+1)!= m1.end()){\n                merge(c,c+1);\n            }\n            if(m1.find(c-1)!= m1.end()){\n                merge(c,c-1);\n            }\n        }\n        int s = 0;\n        for(int c : nums){\n            s = max(0,size[find(c)]);\n        }\n        return s;\n    }\n};","compare_result":"11110000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-consecutive-sequence"}