{"id":596897051,"lang":"cpp","time":"2 weeks, 5 days","timestamp":1638639897,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/596897051/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"66.2 MB","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        int n =heights.size();\n        vector<int> l(n,0),r(n,n-1);\n        int ans = 0;\n        vector<int> st;\n        for(int i = 0;i < n;i++){\n            // l to r increasing to find the smaller h on the left that is smaller\n            while(st.size() && heights[st.back()] >= heights[i]){\n                st.pop_back();\n            }\n            if(st.size() == 0){\n                l[i] = 0;\n            }else{\n                l[i] =  st.back()+1;\n            }\n            st.push_back(i);\n        }\n        st.clear();\n        for(int i = n-1;i>= 0;i--){\n            // r to l decreasing to find the smaller h on the right that is smaller\n            while(st.size() && heights[st.back()] >= heights[i]){\n                st.pop_back();\n            }\n            if(st.size() == 0){\n                r[i] = n-1;\n            }else{\n                r[i] =  st.back()-1;\n            }\n            st.push_back(i);\n        }\n        for(int i = 0;i < n;i++){\n            int width = r[i] - l[i] + 1;\n            // cout << l[i] << \" \" << r[i] << endl;\n            int area = heights[i] * width;\n            ans = max(ans,area);\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram"}