{"id":210834523,"lang":"cpp","time":"2 years, 10 months","timestamp":1551203585,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/210834523/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool ans = 0;\n    void dfs(TreeNode* root){\n        if(!root)\n            return ;\n        if((root->left ==NULL &&  root->right ==NULL) || (root->left && root->right))\n        {\n            if(root->left && root->right)\n                if(root->left->val > root->val || root->right->val < root->val)\n                    ans = 1;\n        }\n        else \n            ans = 1;\n        dfs(root->left);\n        dfs(root->right);\n    }\n    bool isValidBST(TreeNode* root) {\n        dfs(root);\n        return (ans == 0) ? 1 : 0;\n    }\n};","compare_result":"111111101101011101000000000000000000110110111111001101110111111010111011011","title_slug":"validate-binary-search-tree"}