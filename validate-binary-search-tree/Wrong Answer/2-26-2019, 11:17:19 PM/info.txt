{"id":210833771,"lang":"cpp","time":"2 years, 10 months","timestamp":1551203239,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/210833771/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool ans = 0;\n    void dfs(TreeNode* root){\n        if(!root)\n            return ;\n        if(root->right && root->left)  {\n           if((root->left->val > root->val ) || (root->right->val <root->val)){\n            ans = 1;\n            return;\n            }\n        }\n        else{ans = 1;return;}\n           \n         dfs(root->left);\n         dfs(root->right);\n    }\n    bool isValidBST(TreeNode* root,int t = 0) {\n        dfs(root);\n        return(ans == 0) ? 0 : 1;\n    }\n};","compare_result":"100110010010010011111111111111111111001001000000110010001110000101010001100","title_slug":"validate-binary-search-tree"}