{"id":217568580,"lang":"cpp","time":"2 years, 9 months","timestamp":1553547089,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/217568580/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int inf = 1<<30;\n    bool ans = 0;\n    void dfs(TreeNode* root){\n        if(!root)\n            return ;\n        if(root->left && root->left->val >= root->val) ans = 1;\n        if(root->right && root->right->val <= root->val) ans = 1;\n        dfs(root->left);\n        dfs(root->right);\n        \n    }\n    bool isValidBST(TreeNode* root) {\n        dfs(root);\n        return (ans == 0) ? 1 : 0;\n    }\n};","compare_result":"111111111111010011111111111111111111111111111111111111111111111111111011110","title_slug":"validate-binary-search-tree"}