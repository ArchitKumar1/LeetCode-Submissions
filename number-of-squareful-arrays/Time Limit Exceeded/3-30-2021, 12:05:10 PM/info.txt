{"id":474178179,"lang":"cpp","time":"8 months, 4 weeks","timestamp":1617086110,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/474178179/","is_pending":"Not Pending","title":"Number of Squareful Arrays","memory":"N/A","code":"class Solution {\npublic:\n    \n    int N;\n    int fans = 0;\n    bool sq(int back,int val){\n        int sum = back + val;\n        int sqr = sqrt(sum);\n        return sqr*sqr == sum;\n    }\n    map<vector<int>,int> m1;\n    \n    void count(vector<int>& A,vector<int>& avail,vector<int> curr,int cnt,int back){\n            \n        if(cnt == A.size()){\n            if(m1[curr] != 1){\n                fans++;\n            }\n            m1[curr] = 1; \n        }\n        for(int i = 0;i < N;i++){\n            if(avail[i] == 1 ){\n                avail[i] = 0;\n                if(back == -1 || sq(back,A[i])){\n                    curr.push_back(A[i]);\n                    count(A,avail,curr,cnt+1,A[i]); \n                    curr.pop_back();\n                }\n                avail[i] = 1;\n            }\n        }\n        \n    }\n    int numSquarefulPerms(vector<int>& A) {\n        N = A.size();\n        vector<int> avail(N,1);\n        count(A,avail,vector<int>({}),0,-1);\n        return fans;\n    }\n};","compare_result":"1111111111111111111111000000000000000000000000000000000000000000000000000000","title_slug":"number-of-squareful-arrays"}