{"id":298726924,"lang":"cpp","time":"1 year, 10 months","timestamp":1580389453,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/298726924/","is_pending":"Not Pending","title":"Largest Sum of Averages","memory":"10.6 MB","code":"class Solution {\npublic:\n    double largestSumOfAverages(vector<int>& arr, int K) {\n        int n = arr.size();\n        vector<vector<double>> dpsum(n+1,vector<double>(n+1,0.0));\n        vector<vector<double>> dpavg(n+1,vector<double>(n+1,0.0));\n        \n        \n        for(int l = 0;l<n;l++){\n            for(int i =0;i+l<n;i++){\n                int j = i+l;\n                if(i == j)dpsum[i][i] = arr[i];\n                else if(j-i == 1){\n                    dpsum[i][j] = arr[i] + arr[j];\n                }else{\n                    dpsum[i][j] = dpsum[i+1][j-1] + arr[i] + arr[j];\n                }\n            }\n        }\n        for(int l = 0;l<n;l++){\n            for(int i =0;i+l<n;i++){\n                int j = i+l;\n                if(i == j)dpavg[i][i] = arr[i];\n                else{\n                    dpavg[i][j] = dpsum[i][j]/(1.0 *(j-i+1));\n                }\n            }\n        }\n        double dp[K+1][n+1];\n        memset(dp,0,sizeof(dp));\n        \n        for(int i = 0;i<n;i++){\n            dp[0][i] = (dpsum[0][i])/(1.0*i+1);\n        }\n        for(int k=1;k<=K;k++){\n            for(int i = 0;i<n;i++){\n                dp[k][i] = dp[k-1][i];\n                \n                for(int  j =0;j<i;j++){\n                    // cout << \"KIJ \" << k << \" \" << i << \" \" << j << endl;\n                    // cout << dp[k-1][j]/(j+1)  <<  \" \"  << dpsum[j+1][i]/(i-(j+1) + 1) << endl;\n                    dp[k][i] = max(dp[k][i],dp[k-1][j] + dpsum[j+1][i]/(i-(j+1) + 1));\n                }\n            }\n        }\n        for(int i = 0;i<=K;i++){\n            for(int j = 0;j<n;j++){\n                cout << dp[i][j] << \" \";\n            }\n            cout << endl;\n        }\n        \n        return dp[K-1][n-1];\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"largest-sum-of-averages"}