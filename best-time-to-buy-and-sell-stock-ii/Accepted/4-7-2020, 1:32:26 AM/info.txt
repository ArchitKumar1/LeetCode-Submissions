{"id":320831809,"lang":"cpp","time":"1 year, 8 months","timestamp":1586203346,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/320831809/","is_pending":"Not Pending","title":"Best Time to Buy and Sell Stock II","memory":"7.6 MB","code":"class Solution {\npublic:\n\n    int maxProfit(vector<int>& prices) {\n        int n = prices.size();\n        vector<int> dp(n+1,0);\n        dp[0] = 0;\n//         for(int i = 1;i<=n;i++){\n//             for(int j = i+1;j<=n;j++){\n//                 dp[j] = dp[j-1];\n//                 for(int k = i;k<j;k++){\n//                     if(prices[k-1] < prices[j-1]){\n                \n//                         dp[j] = max(dp[j] ,dp[i] + prices[j-1] - prices[k-1]);\n//                     }\n//                 }\n//             }\n//         }\n//         for(int i = 1;i<=n;i++){\n//             int mini = 1e9;\n//             for(int j = i+1;j<=n;j++){\n//                 dp[j] = max(dp[j],dp[j-1]);\n//                 mini =  min(mini,prices[j-2]);\n//                 if(mini< prices[j-1]){\n//                     dp[j] = max(dp[j] ,dp[i] + prices[j-1] - mini);\n//                 }\n                \n//             }\n//         }\n        // return dp[n];\n        int s = 0;\n        for(int i = 0;i+1<n;i++){\n            s += max(prices[i+1] - prices[i],0);\n        }\n        return s;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"best-time-to-buy-and-sell-stock-ii"}