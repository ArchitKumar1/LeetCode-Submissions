{"id":297610321,"lang":"cpp","time":"1 year, 11 months","timestamp":1580063813,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/297610321/","is_pending":"Not Pending","title":"Matrix Block Sum","memory":"11.5 MB","code":"class Solution {\npublic:\n    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int K) {\n        \n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        int n = mat.size();\n        int m = mat[0].size();\n        \n        vector<vector<int>> dp(n+1,vector<int>(m+1,0));\n        for(int i = 1;i<=n;i++){\n            for(int j = 1;j<=m;j++){\n                dp[i][j] = mat[i-1][j-1] + dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1];\n            }\n        }\n        vector<vector<int>> dp1(n,vector<int>(m,0));\n        for(int i = 1;i<=n;i++){\n            for(int j = 1;j<=m;j++){\n                int x2= min(i+K,n);\n                int y2 = min(j+K,m); \n                int x1 = max(1,i-K);\n                int y1 =max(1,j-K);\n                dp1[i-1][j-1] = dp[x2][y2] - dp[x1-1][y2] - dp[x2][y1-1] + dp[x1-1][y1-1];\n            }\n        }\n        return dp1;\n    }\n};","compare_result":"111111111111","title_slug":"matrix-block-sum"}