{"id":328503403,"lang":"cpp","time":"1 year, 8 months","timestamp":1587548309,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/328503403/","is_pending":"Not Pending","title":"Construct Binary Search Tree from Preorder Traversal","memory":"14.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    \n    void make(TreeNode* root,vector<int> p){\n        if(p.size() == 0) return ;        \n        vector<int> x,y;\n        for(int c : p){\n            if(c < root->val){\n                x.push_back(c);\n            }else{\n                y.push_back(c);\n            }\n        }\n        if(x.size()){\n            root->left = new TreeNode(x[0]);\n            x.erase(x.begin());\n            make(root->left,x);\n        }\n        if(y.size()){\n            root->right = new TreeNode(y[0]);\n            y.erase(y.begin());\n            make(root->right,y);\n        }\n    }\n    TreeNode* bstFromPreorder(vector<int>& p) {\n        TreeNode* root = new TreeNode(p[0]);\n        p.erase(p.begin());\n        make(root,p);\n        return root;\n    }\n    \n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-search-tree-from-preorder-traversal"}