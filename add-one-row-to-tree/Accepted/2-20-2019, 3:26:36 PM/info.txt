{"id":209291646,"lang":"cpp","time":"2 years, 10 months","timestamp":1550656596,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/209291646/","is_pending":"Not Pending","title":"Add One Row to Tree","memory":"20.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int d1;\n    int v1;\n    void dfs(TreeNode* root,int depth){\n        if(root == NULL)\n            return ;\n        if(depth == d1-1){\n           \n            TreeNode * left = root->left;\n            TreeNode * right = root->right;\n\n            root->left = new TreeNode(v1);\n            root->right = new TreeNode(v1);\n            root->left->left = left;\n            root->right->right = right;\n            return ;\n        }\n        dfs(root->left,depth+1);\n        dfs(root->right,depth +1);\n    }\n    TreeNode* addOneRow(TreeNode* root, int v, int d) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        d1 = d;\n        v1 = v;\n        if(d == 1){\n            TreeNode* x =new TreeNode(v);\n            x->left = root;\n            return x;\n        }\n        dfs(root,1);\n        return root;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-one-row-to-tree"}