{"id":401319402,"lang":"cpp","time":"1 year, 2 months","timestamp":1601194506,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/401319402/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        ListNode *a = headA;\n        ListNode *b = headB;\n        \n        int x=0,y=0;\n        while(a){\n            x++;\n            a = a->next;\n        }\n        while(b){\n            y++;\n            b = b->next;\n        }\n        //cout << x << \" \" << y << endl;\n        int diff  = x-y;\n        a = headA,b = headB;\n        if(diff > 0){\n            while(diff--){\n                a = a->next;\n            }\n        }else if(diff < 0){\n            diff*=-1;\n             while(diff--){\n                b = b->next;\n            }\n        }\n        while(a && b && a!=b){\n            a = a->next;\n            b = b->next;\n        }\n        return a;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}