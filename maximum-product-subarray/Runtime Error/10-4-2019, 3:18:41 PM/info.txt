{"id":266788641,"lang":"cpp","time":"2 years, 2 months","timestamp":1570182521,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/266788641/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxProduct(vector<int>& arr) {\n        int n = arr.size();\n        int dp[n+1][n+1];\n        memset(dp,0,sizeof(dp));\n        int ans = INT_MIN;\n        for(int l = 0;l<n;l++){\n            for(int  i = 0;i+l<n;i++){\n                int j = i+l;\n                if(i == j){\n                    dp[i][j] = arr[i];\n                }else if(j-i ==1){\n                    dp[i][j] = arr[i]*dp[i+1][j];\n                }else{\n                    dp[i][j] = arr[i]*dp[i+1][j-1]*arr[j];\n                }\n                ans = max(ans,dp[i][j]);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"maximum-product-subarray"}