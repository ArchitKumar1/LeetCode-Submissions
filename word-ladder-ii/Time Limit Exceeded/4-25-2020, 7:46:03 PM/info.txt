{"id":329886243,"lang":"cpp","time":"1 year, 8 months","timestamp":1587824163,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/329886243/","is_pending":"Not Pending","title":"Word Ladder II","memory":"N/A","code":"class Solution {\npublic:\n    \n    struct s{\n        vector<string> s;\n    };\n    map<string,int> m1,m2;\n    vector<vector<string>> findLadders(string beginWord, string endWord, vector<string>& wordList) {\n        \n         vector<vector<string>> ans;\n        \n        for(string s : wordList){\n            m1[s] +=1;\n        }\n        \n        queue<s>qq;\n        qq.push({vector<string>({beginWord})});\n        \n        while(qq.size()){\n            s temp = qq.front();\n            qq.pop();\n            \n            string curr = temp.s.back();\n            if(m2[curr] == 1) continue;\n            if(curr == endWord ){\n                ans.push_back(temp.s);\n            }\n            for(int i = 0;i<curr.size();i++){\n                for(int j = 1;j<=25;j++){\n                    string t = curr;\n                    t[i] = 'a' + (t[i] - 'a' + j)%26;\n                    s newtemp = temp;\n                    cout <<  t << endl;\n                    if(m1[t] == 1){\n                        newtemp.s.push_back(t);\n                        qq.push(newtemp);\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"000000000000000000000000000000000000000","title_slug":"word-ladder-ii"}