{"id":311455018,"lang":"cpp","time":"1 year, 9 months","timestamp":1583911646,"status_display":"Accepted","runtime":"316 ms","url":"/submissions/detail/311455018/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"8.2 MB","code":"class Solution {\npublic:\n    int splitArray(vector<int>& nums, int m) {\n        int n = nums.size();\n        long long maxi[n+1] = {0};\n        \n        for(int i = 1;i<=n;i++){\n            maxi[i] = maxi[i-1] + nums[i-1];\n        }\n        auto get = [&](int i,int j){\n            return maxi[j+1] - maxi[i];\n        };\n        long long K = 51;\n        long long dp[K][n];\n        for(int i = 0;i<n;i++){\n            dp[0][i] = get(0,i);\n        }\n        for(int k = 1;k<K;k++){\n            for(int i = 0;i<n;i++){\n                dp[k][i] = dp[k-1][i];\n                for(int j = 0;j<i;j++){\n                    dp[k][i] = min(dp[k][i], max(dp[k-1][j],get(j+1,i)));\n                }\n            }\n        }\n        return dp[m-1][n-1];\n        \n    }\n    \n};","compare_result":"111111111111111111111111111","title_slug":"split-array-largest-sum"}