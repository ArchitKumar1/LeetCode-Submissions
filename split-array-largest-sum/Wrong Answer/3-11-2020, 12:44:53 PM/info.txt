{"id":311452249,"lang":"cpp","time":"1 year, 9 months","timestamp":1583910893,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/311452249/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"N/A","code":"class Solution {\npublic:\n    int splitArray(vector<int>& nums, int m) {\n        int n = nums.size();\n        long long maxi[n][n];\n        for(int i = 0;i<n;i++){\n            for(int j = 0;j<n;j++){\n                maxi[i][j] = 0;\n            }\n        }\n        for(int l = 0;l<n;l++){\n            for(int i =0 ;i+l<n;i++){\n                int j = i + l;\n                if(i == j){\n                    maxi[i][j] = nums[i];\n                }else{\n                    maxi[i][j] =  (long long)nums[i] + nums[j] + maxi[i+1][j-1];\n                }\n            }\n        }\n        long long K = 55;\n        long long dp[K][n];\n        for(int i = 0;i<n;i++){\n            dp[0][i] = maxi[0][i];\n        }\n        for(int k = 1;k<K;k++){\n            for(int i = 0;i<n;i++){\n                dp[k][i] = dp[k-1][i];\n                for(int j = 0;j<i-1;j++){\n                    dp[k][i] = min(dp[k][i], max(dp[k-1][j],maxi[j+1][i]));\n                }\n            }\n        }\n        return dp[m-1][n-1];\n        \n    }\n    \n};","compare_result":"111001101000111110111111011","title_slug":"split-array-largest-sum"}