{"id":450074920,"lang":"cpp","time":"10 months, 3 weeks","timestamp":1612083756,"status_display":"Accepted","runtime":"1040 ms","url":"/submissions/detail/450074920/","is_pending":"Not Pending","title":"Restore the Array From Adjacent Pairs","memory":"160.1 MB","code":"class Solution {\npublic:\n    vector<int> restoreArray(vector<vector<int>>& adjacentPairs) {\n        \n        map<int,set<int>> m1;\n        for(auto x : adjacentPairs){\n            m1[x[0]].insert(x[1]);\n            m1[x[1]].insert(x[0]);\n        }\n        int st = 0;\n        for(auto x : m1){\n            if(x.second.size() == 1){\n                st = x.first;\n                break;\n            }\n        }\n        int n = adjacentPairs.size() + 1;\n        vector<int> ans(n);\n        ans[0] = st;\n        \n        for(int i = 0;i<n-1;i++){\n            int curr = ans[i];\n            //add \n            set<int> s = m1[curr];\n            auto nex = *s.begin();\n            ans[i+1] = nex;\n            \n            \n            // remove\n            m1.erase(m1.find(curr));\n            set<int> &t = m1[nex];\n            t.erase(curr);\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"restore-the-array-from-adjacent-pairs"}