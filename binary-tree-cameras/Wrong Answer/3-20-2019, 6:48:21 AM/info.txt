{"id":216129166,"lang":"cpp","time":"2 years, 9 months","timestamp":1553044701,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/216129166/","is_pending":"Not Pending","title":"Binary Tree Cameras","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int m = 0;\n    bool dfs(TreeNode* root,bool parentcam = 0){\n        if(!root) return true;\n        bool ok1 = dfs(root->left,0);\n        bool ok2 = dfs(root->right,0);\n        if(!ok1 && !ok2 && !parentcam){\n            m += 1;\n            return true;\n        }else{\n            return false;\n        }\n    }\n    int minCameraCover(TreeNode* root) {\n        dfs(root,0);\n        return m;\n    }\n};","compare_result":"10000001000010000000010000000000000000000000000000000000000000000000000100000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"binary-tree-cameras"}