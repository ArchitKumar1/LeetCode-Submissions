{"id":251644303,"lang":"cpp","time":"2 years, 4 months","timestamp":1565802376,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/251644303/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"12.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        map<ListNode*,int> m1;\n        map<ListNode*,int> m2;\n        int pos = 1 ;\n        m1[head] = 1;\n        if(!head || !head->next) return 0;\n        head = head->next;\n        while(head){\n            if(m1[head]) return 1;\n            m1[head] = 1;\n            head = head->next;\n        }\n        return 0;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle"}