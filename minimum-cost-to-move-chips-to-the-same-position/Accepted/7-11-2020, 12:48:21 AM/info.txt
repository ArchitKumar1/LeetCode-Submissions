{"id":364817385,"lang":"cpp","time":"1 year, 5 months","timestamp":1594408701,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/364817385/","is_pending":"Not Pending","title":"Minimum Cost to Move Chips to The Same Position","memory":"7.8 MB","code":"class Solution {\npublic:\n    int minCostToMoveChips(vector<int>& chips) {\n        map<int,int> m1;\n        for(int c : chips) m1[c]++;\n        vector<pair<int,int>> v;\n        for(auto x :m1){\n            if(x.second > 0) v.push_back(x);\n        }\n        sort(v.begin(),v.end());\n        int ans = INT_MAX;\n        int n = v.size();\n        for(int i = 0;i<n;i++){\n            int tans = 0;\n            for(int j=0;j<n;j++){\n                if(j!=i) tans += v[j].second*(abs(v[i].first-v[j].first)&1);  \n            }\n            cout << tans << \" \" << endl;\n            ans = min(ans,tans);\n        }\n        return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-move-chips-to-the-same-position"}