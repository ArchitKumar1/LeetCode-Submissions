{"id":470694150,"lang":"cpp","time":"9 months, 1 week","timestamp":1616355306,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/470694150/","is_pending":"Not Pending","title":"Maximum Ascending Subarray Sum","memory":"8.6 MB","code":"class Solution {\npublic:\n    int maxAscendingSum(vector<int>& nums) {\n        int n = nums.size();\n        \n        vector<int> dp(n+1);\n        \n        dp[0] = nums[0];\n        for(int i = 1;i<n;i++){\n            dp[i] = nums[i];\n            if(nums[i] > nums[i-1]){\n                dp[i] = dp[i-1] + nums[i];\n            }\n            \n            \n        }\n        return *max_element(dp.begin(),dp.end());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-ascending-subarray-sum"}