{"id":470692621,"lang":"cpp","time":"9 months, 1 week","timestamp":1616355036,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/470692621/","is_pending":"Not Pending","title":"Maximum Ascending Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int maxAscendingSum(vector<int>& nums) {\n        int n = nums.size();\n        \n        vector<int> dp(n+1);\n        \n        \n        for(int i = 1;i<=n;i++){\n            for(int j = 1;j<i;j++){\n                dp[i] = nums[i];\n                if(nums[i] > nums[j]){\n                    dp[i] = max(dp[i],nums[i] + dp[j]);\n                }\n            }\n        }\n        return *max_element(dp.begin(),dp.end());\n    }\n};","compare_result":"10100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-ascending-subarray-sum"}