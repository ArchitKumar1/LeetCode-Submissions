{"id":211036346,"lang":"cpp","time":"2 years, 9 months","timestamp":1551268744,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/211036346/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"17.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> ans[100000];\n    int m = -1;\n    void dfs(TreeNode* root,int depth){\n        if(root == NULL )\n            return ;\n        ans[depth].push_back(root->val);\n        m=max(m,depth);\n        dfs(root->left,depth+1);\n        dfs(root->right,depth+1);\n    }\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        vector<vector<int >> a;\n        if(!root) \n            return a;\n        dfs(root,0);\n         for(int i=0;i<=m;i++){\n             a.push_back(ans[i]);\n        \n         }\n        return a;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}