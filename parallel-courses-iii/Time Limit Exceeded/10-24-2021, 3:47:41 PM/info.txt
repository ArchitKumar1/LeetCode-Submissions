{"id":576348715,"lang":"cpp","time":"2Â months","timestamp":1635070661,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/576348715/","is_pending":"Not Pending","title":"Parallel Courses III","memory":"N/A","code":"class Solution {\npublic:\n    int minimumTime(int n, vector<vector<int>>& relations, vector<int>& time) {\n        vector<vector<int>> G(n);\n        vector<vector<int>> IG(n);\n        \n        for(auto x : relations){\n            x[0]--;x[1]--;\n            G[x[0]].push_back(x[1]);\n            IG[x[1]].push_back(x[0]);\n        }\n        vector<int> vis(n);\n        vector<int> topo; topo.reserve(n);\n        \n        function<void(int)> dfs = [&](int s){\n            vis[s] = 1;\n            for(int c : G[s]) {\n                if(!vis[c]) dfs(c);\n            }\n            topo.push_back(s);\n        };\n        dfs(0);\n        for(int i = 0;i < n;i++){\n            if(!vis[i]) dfs(i);\n        }\n        reverse(topo.begin(),topo.end());\n        vector<int> dp(n,0);\n        dp[0] = 0;\n        for(int i : topo){\n            if(IG[i].size() == 0){\n                dp[i] = time[i];\n            }\n            cout << i << endl;\n            for(int par : IG[i]){\n                cout << i << \" \" << par << endl;\n                dp[i] = max(dp[i] , time[i] + dp[par]);\n            }\n        }\n        return *max_element(dp.begin(),dp.end());\n    }\n};","compare_result":"1111111111111111111111111111111111110000","title_slug":"parallel-courses-iii"}