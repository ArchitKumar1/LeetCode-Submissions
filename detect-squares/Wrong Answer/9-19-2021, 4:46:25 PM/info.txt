{"id":557467114,"lang":"cpp","time":"3Â months","timestamp":1632050185,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/557467114/","is_pending":"Not Pending","title":"Detect Squares","memory":"N/A","code":"class DetectSquares {\npublic:\n    int dx[4] = {1,1,-1,-1};\n    int dy[4] = {-1,1,-1,1};\n    map<array<int,2>,int> m1;\n    DetectSquares() {\n        \n    }\n    \n    void add(vector<int> point) {\n        m1[{point[0],point[1]}]++;\n    }\n   \n    int N = 20;\n    int count(vector<int> point) {\n         auto print = [&](array<int,2> arr){\n            cout <<  \" \" << arr[0] << \" \" << arr[1] << endl;\n        };\n        int ans = 0;\n        for(int k = 0;k < 4;k++){\n            int x = point[0];\n            int y = point[1];\n            array<int,2> a = {x,y},b= {x,y},c = {x,y},d = {x,y};\n            // print(a);\n            // print(b);\n            // print(c);\n            // print(d);\n            int M = N;\n            // cout << \"point\" << endl;\n            // print({x,y});\n            // cout << \"BS\" << k << endl;\n            while(M--){\n                // cout << M << endl;\n                // print(a);\n                // print(b);\n                // print(c);\n                // print(d);\n                a[0] += dx[k];\n                b[1] += dy[k];\n                c[0] += dx[k];\n                c[1] += dy[k];\n                int cnt = 1;\n                // if(x == 11 && y == 10 && c[0] == 3 and c[1] == 2){\n                //     cout << \"YIPEE\" << m1[a] << endl;\n                //     cout << \"YIPEE\" << m1[b] << endl;\n                //     cout << \"YIPEE\" << m1[c] << endl;\n                //     cout << \"YIPEE\" << m1[d] << endl;\n                // }\n                cnt *= m1[a];\n                cnt *= m1[b];\n                cnt *= m1[c];\n                ans += cnt;\n            }\n        }\n        return ans;\n    }\n};\n\n/**\n * Your DetectSquares object will be instantiated and called as such:\n * DetectSquares* obj = new DetectSquares();\n * obj->add(point);\n * int param_2 = obj->count(point);\n */\n//  3 10\n//  11 2\n//  3 2\n//  11 10","compare_result":"111001000000000011111111111111111111111111010010000","title_slug":"detect-squares"}