{"id":298746768,"lang":"cpp","time":"1 year, 10 months","timestamp":1580397189,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/298746768/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"N/A","code":"class Solution {\npublic:\n    \n    int mod = pow(10,9) + 7;\n    int n;\n    map<pair<int,pair<int,int>>,int> m1;\n    \n    int solve(int g ,int p,int curr,vector<int>&group,vector<int>&profit,int G,int P){\n        \n        if(curr == n){\n            if(g <=G && p>=P){\n                return 1;\n            }else{\n                return 0;\n            }\n        }\n        if(m1[{g,{p,curr}}]!=0) return m1[{g,{p,curr}}];\n        int total = (solve(g,p,curr+1,group,profit,G,P) +\n                  solve(g+group[curr],p + profit[curr],curr+1,group,profit,G,P))%mod;\n        \n        return  m1[{g,{p,curr}}] = total;\n    }\n    \n    \n    int profitableSchemes(int G, int P, vector<int>& group, vector<int>& profit) {\n        n = group.size();\n        //memset(dp,-1,sizeof(dp));\n        return solve(0,0,0,group,profit,G,P);\n        \n    }\n};","compare_result":"1111100000000000000000000000000000000000000","title_slug":"profitable-schemes"}