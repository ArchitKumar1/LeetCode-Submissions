{"id":298748148,"lang":"cpp","time":"1 year, 10 months","timestamp":1580397662,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/298748148/","is_pending":"Not Pending","title":"Profitable Schemes","memory":"N/A","code":"class Solution {\npublic:\n    \n    int mod = pow(10,9) + 7;\n    int n;\n    unordered_map<string,int> m1;\n    string get(int g,int p,int curr){\n        string ans = to_string(g) + \"#\" + to_string(p) + \"#\" + to_string(curr);\n        return ans;\n    }\n    int solve(int g ,int p,int curr,vector<int>&group,vector<int>&profit,int G,int P){\n        \n        if(curr == n){\n            if(g <=G && p>=P){\n                return 1;\n            }else{\n                return 0;\n            }\n        }\n        string ans =get(g,p,curr);\n       // cout << ans << endl;\n        //if(g>G) return m1[ans] = 0;\n        if(m1.find(ans)!=m1.end()) return m1[ans];\n        int total = (solve(g,p,curr+1,group,profit,G,P) +\n                  solve(g+group[curr],p + profit[curr],curr+1,group,profit,G,P))%mod;\n        \n        return  m1[ans] = total;\n    }\n    \n    \n    int profitableSchemes(int G, int P, vector<int>& group, vector<int>& profit) {\n        n = group.size();\n        return solve(0,0,0,group,profit,G,P);\n        \n    }\n};","compare_result":"1111111110000000000000000000000000000000000","title_slug":"profitable-schemes"}