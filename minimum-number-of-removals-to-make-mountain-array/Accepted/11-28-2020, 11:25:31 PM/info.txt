{"id":425046865,"lang":"cpp","time":"1Â year","timestamp":1606586131,"status_display":"Accepted","runtime":"344 ms","url":"/submissions/detail/425046865/","is_pending":"Not Pending","title":"Minimum Number of Removals to Make Mountain Array","memory":"12.3 MB","code":"class Solution {\npublic:\n    int minimumMountainRemovals(vector<int>& nums) {\n        \n        int n = nums.size();\n        vector<int> p(n+2,0),s(n+2,0);\n        \n        for(int i = 1;i<=n;i++){\n            p[i] = 1;\n            for(int j = 1;j<i;j++){\n                if(nums[i-1] > nums[j-1]){\n                    p[i] = max(p[i],1+p[j]);\n                }\n            }\n        }\n        \n        \n        for(int i = n;i>=1;i--){\n            s[i] = 1;\n            for(int j = n;j>i;j--){\n                if(nums[i-1] > nums[j-1]){\n                    s[i] = max(s[i],1+s[j]);\n                }\n            }\n        }\n        for(int i = 1;i<=n;i++){\n            cout << s[i] << \" \";\n        }\n        cout << endl;\n        for(int i = 1;i<=n;i++){\n            cout << p[i] << \" \";\n        }\n        cout << endl;\n        int ans = 0;\n        for(int i = 2;i<n;i++){\n            if(p[i]>=2 && s[i]>=2){\n                ans = max(ans,p[i]-1+s[i]);\n            }\n        }\n        return n - ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-removals-to-make-mountain-array"}