{"id":458373070,"lang":"cpp","time":"10Â months","timestamp":1613832338,"status_display":"Accepted","runtime":"732 ms","url":"/submissions/detail/458373070/","is_pending":"Not Pending","title":"Map of Highest Peak","memory":"158.2 MB","code":"class Solution {\npublic:\n    vector<vector<int>> highestPeak(vector<vector<int>>& isWater) {\n        int n = isWater.size();\n        int m = isWater[0].size();\n        \n        int vis[n][m];\n        memset(vis,0,sizeof(vis));\n        \n        vector<vector<int>> ans(n,vector<int>(m,0));\n        \n        queue<pair<int,int>> q;\n        \n        for(int i = 0;i<n;i++){\n            for(int j =0;j<m;j++){\n                if(isWater[i][j] == 1){\n                    q.push({i,j});\n                }\n            }\n        }\n        int dx[4] = {0,1,0,-1};\n        int dy[4] = {1,0,-1,0};\n        \n        int H = 0;\n        while(q.size()){\n            int S = q.size();\n\n            for(int s = 0;s<S;s++){\n                pair<int,int> top = q.front();\n                q.pop();\n                int i = top.first;\n                int j = top.second;\n\n                if(vis[i][j] == 1) continue;\n                vis[i][j] = 1;\n                ans[i][j] = H;\n                for(int k=0;k<4;k++){\n                    int I = i+dx[k],J = j+dy[k];\n                    if( I<n && J<m && I>=0 && J>=0){\n                        q.push({I,J});\n                    }\n                }\n            }\n            H++;\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"map-of-highest-peak"}