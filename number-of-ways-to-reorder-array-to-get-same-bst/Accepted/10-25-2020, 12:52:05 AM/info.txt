{"id":412679906,"lang":"cpp","time":"1 year, 2 months","timestamp":1603567325,"status_display":"Accepted","runtime":"640 ms","url":"/submissions/detail/412679906/","is_pending":"Not Pending","title":"Number of Ways to Reorder Array to Get Same BST","memory":"60.7 MB","code":"class Solution {\n    \n    const static int N = 1200;\n    const int mod = 1e9+7;\npublic:\n    \n    int ncr[N][N];\n    \n    int dfs(vector<int>nums){\n        int n = nums.size();\n        if(n == 1 || n == 0) return 1;\n        \n        vector<int> l,r;\n        for(int i = 1;i<nums.size();i++){\n            if(nums[i] < nums[0]) l.push_back(nums[i]);\n            else r.push_back(nums[i]);\n        }\n        \n        return (1LL* dfs(l)* dfs(r) %mod *ncr[n-1][l.size()])%mod;\n    }\n    int numOfWays(vector<int>& nums) {\n        memset(ncr,0,sizeof(ncr));\n        \n        \n        for(int i = 1;i<N;i++){\n            ncr[i][0] = 1;\n            ncr[i][i] = 1;\n            for(int j = 1;j<i;j++){\n                ncr[i][j] = ncr[i-1][j-1] + ncr[i-1][j];\n                ncr[i][j] %= mod;\n            }\n        }\n        return dfs(nums)-1;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-ways-to-reorder-array-to-get-same-bst"}