{"id":519522312,"lang":"cpp","time":"5 months, 2 weeks","timestamp":1625787558,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/519522312/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"N/A","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums) {\n        nums.push_back(0);\n        nums.insert(nums.begin(),0);\n        int n = nums.size();\n        vector<int> pref,suff;\n        pref = suff = nums;\n        \n        for(int i = 1;i < n;i++){\n            if(nums[i] == 1) pref[i] = nums[i] + pref[i-1];\n        }\n        for(int i = n-1;i >= 1;i--){\n            if(nums[i] == 1) suff[i] = nums[i] + suff[i+1];\n        }\n        \n        int ans = 0;\n        \n        for(int i = 1; i < n-1;i++){\n            \n                cout << nums[i] << \" \" << pref[i-1] << \" \" <<  suff[i+1] << endl;\n                ans = max(ans,pref[i-1] + suff[i+1]);\n            \n            \n        }\n          \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"longest-subarray-of-1s-after-deleting-one-element"}