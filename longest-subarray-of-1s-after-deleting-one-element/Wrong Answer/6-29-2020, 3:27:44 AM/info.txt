{"id":359563400,"lang":"cpp","time":"1 year, 5 months","timestamp":1593381464,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/359563400/","is_pending":"Not Pending","title":"Longest Subarray of 1's After Deleting One Element","memory":"N/A","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nn) {\n        vector<int> nums = nn;\n        int s = 0;\n        int ans = 0;\n        int n = nums.size();\n        int cnt = 0;\n        for(int i = 0,j = 0;j<n;j++){\n            while(cnt > 1){\n                cnt -= nums[i] == 0;\n                i++;\n            }\n            cout << i << \" \" << j << \" \" << cnt << endl;\n            ans = max(ans,j-i+1);\n            cnt += nums[j] == 0;\n        }\n        return ans-1;\n    }\n};","compare_result":"1011010011100001111100000000000001000100000000000000000000000000011111100","title_slug":"longest-subarray-of-1s-after-deleting-one-element"}