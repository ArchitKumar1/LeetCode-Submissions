{"id":468882055,"lang":"python3","time":"9 months, 1 week","timestamp":1615967201,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/468882055/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"N/A","code":"class WordFilter:\n    \n    class Node():\n        def __init__(self):\n            self.next = {}\n            self.indexes = []\n        \n    def add(self,node,word,idx):\n        for w in word:\n            \n            i = ord(w) - 97\n            if i not in node.next:\n                newnode = self.Node()\n                node.next[i] = newnode\n            \n            node = node.next[i]\n            node.indexes.append(idx)\n    \n    \n    def search(self,node,patt):\n        for w in patt:\n            i = ord(w) - 97\n            if i not in node.next:\n                self.empty.append(-1)\n                return \n\n            node = node.next[i]\n        return node.indexes\n            \n            \n    def __init__(self, words: List[str]):\n        self.pref = self.Node()\n        self.suff = self.Node()\n        self.empty = []\n        \n        for i,w  in enumerate(words,0):\n            self.add(self.pref,w,i)\n        \n        for i,w  in enumerate(words,0):\n            rev = ''.join(list(w)[::-1])\n            self.add(self.suff,rev,i)\n        \n\n    def f(self, prefix: str, suffix: str) -> int:\n        first = self.search(self.pref,prefix)\n        second = self.search(self.suff,suffix)\n        \n        print(first,second)\n        if len(self.empty) > 0:\n            empty = []\n            return -1\n        else:\n            return max(list(set(first).intersection(set(second))))\n\n\n# Your WordFilter object will be instantiated and called as such:\n# obj = WordFilter(words)\n# param_1 = obj.f(prefix,suffix)","compare_result":"101100000","title_slug":"prefix-and-suffix-search"}