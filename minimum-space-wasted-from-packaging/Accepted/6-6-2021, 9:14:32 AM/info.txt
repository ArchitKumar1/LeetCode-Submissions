{"id":503670063,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1622951072,"status_display":"Accepted","runtime":"560 ms","url":"/submissions/detail/503670063/","is_pending":"Not Pending","title":"Minimum Space Wasted From Packaging","memory":"143.3 MB","code":"class Solution {\npublic:\n    int minWastedSpace(vector<int>& p, vector<vector<int>>& b) {\n        const int M = 1e9 + 7;\n        sort(p.begin(),p.end());\n        int n = p.size();\n        vector<long long> sums = {0};\n        for(int c : p){\n            sums.push_back(sums.back()+c);\n        }\n        long long tsum = 0;\n        for(int c : p) tsum+=c;\n        long long ans = 1e18;\n        long long fans = -1;\n        for(auto x : b){\n            sort(x.begin(),x.end());\n            long long back = 0;\n            long long wastage = 0;\n            vector<long long> idxs;\n            for(auto y : x){\n                auto it = upper_bound(p.begin(),p.end(),y);\n                long long index = it - p.begin();\n                // cout << index << endl;\n                index--;\n                idxs.push_back(index);\n            }\n            for(int i = 0;i < idxs.size();i++){\n                wastage += 1LL * x[i] * (idxs[i] - back+1);\n                // cout << idxs[i] << \"  ; \" << back << \" : \" << wastage << endl;\n                back = idxs[i]+1;\n            }\n            wastage -= tsum;\n            // cout << back << \" \" << wastage << endl;\n            if(back == n){\n                ans = min(ans,wastage);\n            }\n        }\n        return ans == 1e18 ? -1 : ans%M;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-space-wasted-from-packaging"}