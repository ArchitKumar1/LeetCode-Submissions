{"id":217554559,"lang":"cpp","time":"2 years, 9 months","timestamp":1553542154,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/217554559/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"26 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n        while(1){\n            if(p->val  < root->val && q->val < root->val ){\n                root = root->left;\n                continue;\n            }\n            if(p->val  > root->val && q->val > root->val ){\n                root = root->right;\n                continue;\n            }\n            break;\n        }\n        return root;\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}