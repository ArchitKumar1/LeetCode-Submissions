{"id":461755164,"lang":"cpp","time":"9 months, 4 weeks","timestamp":1614531107,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/461755164/","is_pending":"Not Pending","title":"Closest Dessert Cost","memory":"N/A","code":"class Solution {\npublic:\n    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {\n        \n        int ans = 0;\n        int bestdiff = INT_MAX;\n        int m = toppingCosts.size();\n        \n        int MX = 3e5;\n        \n        auto upd = [&](int value){\n            cout << \"V\" << value << endl;\n            int diff = abs(value - target);\n            if(diff < bestdiff){\n                bestdiff = diff;\n                ans = value;\n            }\n        };\n        vector<int> nums(MX);\n        nums[0] = 1;\n        \n        for(int x : baseCosts){\n            vector<int> new_nums(MX);\n            set<int> present;\n            \n            for(int i = 0;i<m;i++){\n                for(int j = 0;j<=2;j++){\n                    for(int k = 0;k+toppingCosts[i]*j < MX;k++){\n                        if(nums[k] == 1){\n                            new_nums[k+toppingCosts[i]*j] = 1;\n                            present.insert(k+toppingCosts[i]*j);\n                        }\n                    }\n                }\n            }\n            swap(new_nums,nums);\n            auto lb = present.lower_bound(target);\n            auto ub = present.upper_bound(target);\n            \n            if(lb!=present.begin()){\n                auto lb2 = prev(lb);\n                cout << *lb2 << endl;\n                upd(*lb2);\n            }\n            \n            if(ub!=present.end()){\n                \n                cout << *ub << endl;\n                cout << *lb << endl;\n                upd(*lb);\n                upd(*ub);\n            }\n            \n        }\n        return ans;\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000000000","title_slug":"closest-dessert-cost"}