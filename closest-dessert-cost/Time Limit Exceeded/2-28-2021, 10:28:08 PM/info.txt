{"id":461757096,"lang":"cpp","time":"9 months, 4 weeks","timestamp":1614531488,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/461757096/","is_pending":"Not Pending","title":"Closest Dessert Cost","memory":"N/A","code":"class Solution {\npublic:\n    int closestCost(vector<int>& baseCosts, vector<int>& toppingCosts, int target) {\n        \n        int ans = 0;\n        int bestdiff = INT_MAX;\n        int m = toppingCosts.size();\n        \n        int MX = 1e5;\n        \n        auto upd = [&](int value){\n            int diff = abs(value - target);\n            if(diff < bestdiff){\n                bestdiff = diff;\n                ans = value;\n            }\n        };\n        \n        \n        for(int x : baseCosts){\n            \n            set<int> present;\n            \n            \n            vector<int> nums(MX);\n            nums[x] = 1;\n            for(int i = 0;i<m;i++){\n                vector<int> new_nums(MX);\n                for(int j = 0;j<=2;j++){\n                    for(int k = 0;k+toppingCosts[i]*j < MX;k++){\n                        if(nums[k] == 1){\n                            new_nums[k+toppingCosts[i]*j] = 1;\n                            present.insert(k+toppingCosts[i]*j);\n                            //cout << \"I \" << k+toppingCosts[i]*j << endl;\n                        }\n                    }\n                }\n                swap(new_nums,nums);\n            }\n            auto lb = present.lower_bound(target);\n            auto ub = present.upper_bound(target);\n            \n            if(lb!=present.begin()){\n                auto lb2 = prev(lb);\n                upd(*lb2);\n            }\n   \n            if(ub!=present.end()) upd(*ub);\n            if(lb!=present.end()) upd(*lb);\n            \n            \n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"closest-dessert-cost"}