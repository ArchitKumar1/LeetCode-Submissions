{"id":209316946,"lang":"cpp","time":"2 years, 10 months","timestamp":1550671275,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/209316946/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int mi = 1 << 30;\n    int ma = - 1 << 29;\n    void dfs(TreeNode* root ,int d){\n        if(root==NULL)\n            return ;\n        if(root->right == NULL  && root->left == NULL){\n            ma=max(ma,d);\n            mi=min(mi,d);\n        }\n        dfs(root->left,d - 1);\n        dfs(root->right,d + 1 );\n    }\n    int widthOfBinaryTree(TreeNode* root) {\n        dfs(root,0);\n        return ma -mi;\n    }\n};","compare_result":"110000000010000010000000100000010010000100001100110000000010000000100010000101000001000100010001000001000000","title_slug":"maximum-width-of-binary-tree"}