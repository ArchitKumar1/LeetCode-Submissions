{"id":251644747,"lang":"cpp","time":"2 years, 4 months","timestamp":1565802528,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/251644747/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        vector<ListNode*> all;\n        while(head){\n            all.push_back(head);\n            head =head->next;\n        }\n        int n = all.size();\n        int i =0 ;\n        int j = n-1;\n        while(i<=j){\n            if(all[i]!= all[j]){\n                return 0;\n            }\n            i++;\n            j--;\n        }\n        return 1;\n    }\n};","compare_result":"11100101001111110101101101","title_slug":"palindrome-linked-list"}