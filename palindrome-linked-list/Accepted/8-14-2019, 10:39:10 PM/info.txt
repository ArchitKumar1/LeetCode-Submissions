{"id":251644821,"lang":"cpp","time":"2 years, 4 months","timestamp":1565802550,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/251644821/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"13.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n        vector<ListNode*> all;\n        while(head){\n            all.push_back(head);\n            head =head->next;\n        }\n        int n = all.size();\n        int i =0 ;\n        int j = n-1;\n        while(i<=j){\n            if(all[i]->val!= all[j]->val){\n                return 0;\n            }\n            i++;\n            j--;\n        }\n        return 1;\n    }\n};","compare_result":"11111111111111111111111111","title_slug":"palindrome-linked-list"}