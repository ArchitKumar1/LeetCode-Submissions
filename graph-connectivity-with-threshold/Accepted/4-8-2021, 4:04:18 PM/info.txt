{"id":478073630,"lang":"cpp","time":"8 months, 2 weeks","timestamp":1617878058,"status_display":"Accepted","runtime":"160 ms","url":"/submissions/detail/478073630/","is_pending":"Not Pending","title":"Graph Connectivity With Threshold","memory":"65.5 MB","code":"class dsu {\n    public:\n    vector<int> par;\n    int n;\n    dsu(int _n) : n(_n) {\n        par.resize(n);\n        iota(par.begin(), par.end(), 0);\n    } \n    inline int get(int x) {\n        return (x == par[x] ? x : (par[x] = get(par[x])));\n    }\n    inline bool merge(int x, int y) {\n        x = get(x);\n        y = get(y);\n        if (x != y) {\n            par[x] = y;\n            return true;\n        }\n        return false;\n    }\n};\nclass Solution {\npublic:\n    \n    vector<bool> areConnected(int n, int threshold, vector<vector<int>>& queries) {\n        dsu d = dsu(n+1);\n        \n        for(int i = threshold+1;i<=n;i++){\n            for(int j = i;j<=n;j+=i){\n                d.merge(i,j);\n            }\n        }\n        int q = queries.size();\n        \n        vector<bool> res(q);\n        for(int i = 0;i<q;i++){\n            int a = queries[i][0];\n            int b = queries[i][1];\n            res[i]= d.get(a)==d.get(b);\n        }\n        return res;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"graph-connectivity-with-threshold"}