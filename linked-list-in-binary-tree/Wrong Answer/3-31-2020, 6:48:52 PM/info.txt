{"id":317817760,"lang":"cpp","time":"1 year, 8 months","timestamp":1585660732,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/317817760/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* H;\n    bool find(ListNode* head,TreeNode* root){\n        bool ok = 0;\n        if(head == NULL && root == NULL) {\n            return 1;\n        }\n        if(head == NULL || root == NULL){\n            return 0;\n        }\n        if(head->val != root->val){\n            ok =  0;\n        }else{\n            ok = 1;\n        }\n        return ok || find(head->next,root->left) || find(head->next,root->right) || find(H,root->left) || find(H,root->right);\n    \n    }\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        H = head;\n        return find(H,root);\n    }\n};","compare_result":"1101111010111010101101111111111000001011000010111111101011011","title_slug":"linked-list-in-binary-tree"}