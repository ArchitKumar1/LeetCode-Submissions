{"id":317822175,"lang":"cpp","time":"1Â year, 8Â months","timestamp":1585662122,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/317822175/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"22.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool dfs(ListNode* head,TreeNode* root){\n        if(!head) return 1;\n        if(!root) return 0;\n        return (head->val == root->val) && (dfs(head->next,root->right) || dfs(head->next,root->left));\n    \n    }\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        if(!head)return 1;\n        if(!root)return 0;\n        return dfs(head,root) || isSubPath(head,root->left) || isSubPath(head,root->right);\n    }\n    \n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree"}