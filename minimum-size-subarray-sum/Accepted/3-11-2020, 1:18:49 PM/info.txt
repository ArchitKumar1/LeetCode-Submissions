{"id":311459142,"lang":"cpp","time":"1 year, 9 months","timestamp":1583912929,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/311459142/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"9.5 MB","code":"class Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n        int l  =0 ;\n        int r = 0;\n        int n = nums.size();\n        int ans = INT_MAX;\n        long long int  sum = 0;\n        while(r < n){\n            sum += nums[r++];\n            while(sum>=s){\n                ans = min(ans,r-l);\n                sum -=nums[l++];\n            }\n        }\n        return (ans == INT_MAX ? 0 : ans);\n    }\n};","compare_result":"111111111111111","title_slug":"minimum-size-subarray-sum"}