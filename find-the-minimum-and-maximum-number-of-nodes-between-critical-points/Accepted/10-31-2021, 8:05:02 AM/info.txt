{"id":579735634,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1635647702,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/579735634/","is_pending":"Not Pending","title":"Find the Minimum and Maximum Number of Nodes Between Critical Points","memory":"126.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> nodesBetweenCriticalPoints(ListNode* head) {\n        vector<int> nodes;\n        \n        while(head){\n            nodes.push_back(head->val);\n            head = head->next;\n        }\n        vector<int> pos;\n        for(int i = 1;i+1 < nodes.size();i++){\n            if(nodes[i-1] < nodes[i] && nodes[i] >  nodes[i+1]) pos.push_back(i);\n            if(nodes[i-1] > nodes[i] && nodes[i] <  nodes[i+1]) pos.push_back(i);\n        }\n        vector<int> ans = {-1,-1};\n        if(pos.size() < 2) return ans;\n        \n        int maxi = pos.back() - pos[0];\n        int mini = INT_MAX;\n        for(int i = 0;i + 1 < pos.size();i++){\n            mini = min(mini,pos[i+1] - pos[i]);\n        }\n        ans[0] = mini;\n        ans[1] = maxi;\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-the-minimum-and-maximum-number-of-nodes-between-critical-points"}