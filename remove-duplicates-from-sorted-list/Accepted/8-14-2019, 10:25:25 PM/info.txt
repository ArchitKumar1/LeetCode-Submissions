{"id":251642299,"lang":"cpp","time":"2 years, 4 months","timestamp":1565801725,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/251642299/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"9.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        ListNode *next = head;\n        ListNode *ans = head;\n        if(head == NULL) return head;\n        next = head->next;       \n        while(head!= NULL || next != NULL){\n            if(next == NULL){\n                cout <<\"OK\";\n                head->next = next;\n                head = head->next;\n            }\n            else if(next->val == head->val){\n                next = next->next;\n            }else{\n                head->next = next;\n                head = head->next;\n                next = next->next;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list"}