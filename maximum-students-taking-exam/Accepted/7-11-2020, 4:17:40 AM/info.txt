{"id":364877801,"lang":"python3","time":"1Â year, 5Â months","timestamp":1594421260,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/364877801/","is_pending":"Not Pending","title":"Maximum Students Taking Exam","memory":"14.1 MB","code":"class Solution:\n    def maxStudents(self, seats: List[List[str]]) -> int:\n        bins = list(map(lambda a : reduce(lambda x,y : x<<1 | (y=='.'), a, 0), seats))   \n        @lru_cache(None)\n        def dp(i,mask):\n            if i == len(seats): return 0\n            return max(bin(curr).count('1') + dp(i+1,curr)   \n                        for curr in range(1 << len(seats[0])) \n                            if (  (curr | bins[i] == bins[i]) and \n                                (curr | mask) & ((curr | mask) >> 1) == 0  ) )\n        return dp(0,0)","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-students-taking-exam"}