{"id":364870295,"lang":"cpp","time":"1 year, 5 months","timestamp":1594419535,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/364870295/","is_pending":"Not Pending","title":"Maximum Students Taking Exam","memory":"N/A","code":"class Solution {\npublic:\n    \n    \n    vector<vector<char>>S;\n    int n,m;\n    int M ;\n    \n    \n    bool check_mask(int mask){\n        for(int i =0;i+1<m;i++){\n            int f =( mask&(1<<i)) >=1;\n            int s = (mask&(1<<(i+1))) >=1;    \n            if(f&s) return 0;\n        }\n        return 1;\n    }\n    vector<int> get_all_masks(int pos){\n        vector<int> masks;\n        \n        for(int i = 0;i<M;i++){\n            bool safe = 1;\n            for(int j=0;j<m;j++){\n                if(i&(1<<j) && S[pos][j] == '#'){\n                    safe = 0;\n                }\n            }\n            if(safe && check_mask(i)) masks.push_back(i);\n        }\n        return masks;\n    }\n    bool intersafe(int m1,int m2){\n        for(int i = 0;i+1<m;i++){\n            int upleft = (m1&(1<<(i+1))) >=1;\n            int curr = (m2&(1<<i)) >=1;\n            if(curr && upleft) return 0;\n        }\n        for(int i = m-1;i>0;i--){\n            int upright = (m1&(1<<(i-1))) >=1;\n            int curr = (m2&(1<<i)) >=1;\n            if(curr && upright) return 0;\n        }\n        return 1;\n    }\n    int comp(int m1,int m2){\n        return  __builtin_popcount(m1);\n    }\n    int solve(int pos = 0,int mask = 0){\n        cout << pos << \" \" << mask << endl;\n        int ans = 0;\n        if(pos == n){\n            return 0;\n        }\n        vector<int> masks = get_all_masks(pos);\n        \n        for(int m : masks){\n           cout <<  m <<\" \";\n            if(intersafe(m,mask)){\n                ans = max(ans,comp(m,mask) + solve(pos+1,m));\n            }\n        }\n        cout << endl;\n        return ans;\n    }\n    int maxStudents(vector<vector<char>>& seats) {\n        S = seats;\n        n = seats.size();\n        m = seats[0].size();\n        M = (1 << m);\n        int ans = 0;\n        vector<int> masks1 = get_all_masks(0);\n        for(int m :masks1){\n            cout << m << \" \" << endl;\n            ans = max(ans,solve(0,m));\n        }\n        return ans;\n        // [[\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\"]]\n\n    }\n};","compare_result":"1111111111111111111111111111111111111000000000000000000","title_slug":"maximum-students-taking-exam"}