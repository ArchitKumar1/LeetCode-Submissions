{"id":322736490,"lang":"cpp","time":"1 year, 8 months","timestamp":1586544001,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/322736490/","is_pending":"Not Pending","title":"Min Stack","memory":"14.6 MB","code":"class MinStack {\npublic:\n    /** initialize your data structure here. */\n    stack<int> n,m;\n    MinStack() {\n        \n    }\n    \n    void push(int x) {\n        if(n.size()){\n            if(m.top() >= x){\n                m.push(x);\n            }\n            n.push(x);\n        }else{\n            m.push(x);\n            n.push(x);\n        }\n    }\n    \n    void pop() {\n\n        if(m.top() == n.top()){\n            m.pop();\n        }\n        n.pop();\n    }\n    \n    int top() {\n        return n.top();\n    }\n    \n    int getMin() {\n        return m.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(x);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"111111111111111111","title_slug":"min-stack"}