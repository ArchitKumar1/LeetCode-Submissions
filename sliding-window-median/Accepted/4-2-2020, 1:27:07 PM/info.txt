{"id":318530807,"lang":"cpp","time":"1 year, 8 months","timestamp":1585814227,"status_display":"Accepted","runtime":"180 ms","url":"/submissions/detail/318530807/","is_pending":"Not Pending","title":"Sliding Window Median","memory":"9.9 MB","code":"class Solution {\npublic:\n    vector<double> medianSlidingWindow(vector<int>& nums, int k) {\n//         priority_queue<int,vector<int>,greater<int>> pq2;\n//         priority_queue<int> pq1;\n        vector<double> ans;\n        vector<int> curr;\n        for(int i = 0;i<nums.size();i++){\n            \n            int pos = lower_bound(curr.begin(),curr.end(),nums[i]) - curr.begin();\n            curr.insert(curr.begin()+pos,nums[i]);\n            if(i >= k){\n                int pos2 = lower_bound(curr.begin(),curr.end(),nums[i-k]) - curr.begin();\n                curr.erase(curr.begin()+pos2);\n            }\n            if(curr.size() == k){\n                double t = 0.0;\n                if(curr.size()%2 == 0){\n                    t += (long long int)curr[k/2] + curr[k/2 - 1];\n                    t/=2;\n                }else{\n                    t += curr[k/2];\n                }\n                ans.push_back(t);\n            }\n        }\n        return ans;\n                  \n    }\n};","compare_result":"111111111111111111111111111111111111111111","title_slug":"sliding-window-median"}