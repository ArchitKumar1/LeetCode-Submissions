{"id":214583741,"lang":"cpp","time":"2 years, 9 months","timestamp":1552509726,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/214583741/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSubtree(TreeNode* s, TreeNode* t) {\n        if(!s) return false;\n        if(sameTree(s,t)) return true;\n        return isSubtree(s->left,t) || isSubtree(s->right,t);\n    }\n    bool sameTree(TreeNode *s, TreeNode *t){\n        if(!s && !t) return true;\n        if(!s || !t) return false;\n        if(s->val  != t->val) false;\n        return sameTree(s->left,t->left) && sameTree(s->right,t->right);\n    }\n    \n    // bool sameTree(TreeNode* s, TreeNode* t) {\n    //     if (!s && !t) return true;\n    //     if (!s || !t) return false;\n    //     if (s->val != t->val) return false;\n    //     return sameTree(s->left, t->left) && sameTree(s->right, t->right);\n    // }\n};","compare_result":"11110111111110010010100001000001011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000010000000100000100","title_slug":"subtree-of-another-tree"}