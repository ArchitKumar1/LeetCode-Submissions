{"id":413810813,"lang":"cpp","time":"1 year, 1 month","timestamp":1603816361,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/413810813/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"48 MB","code":"class Solution {\npublic:\n    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {\n        \n        int n =nums.size();\n        int m = l.size();\n\n        vector<bool> ans(m,0);\n        \n        for(int i = 0;i<m;i++){\n            int L = l[i];\n            int R = r[i];\n            if(R-L<=1){\n                ans[i] = 1;\n            }else{\n                set<int> diff;\n                vector<int> v1(nums.begin()+L,nums.begin()+R+1);\n                sort(v1.begin(),v1.end());\n                for(int i = 1;i < (R-L+1);i++){\n                    diff.insert(v1[i]-v1[i-1]);\n                }\n                cout << endl;\n                ans[i] = (diff.size() == 1);\n            }\n            \n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays"}