{"id":217864840,"lang":"cpp","time":"2 years, 9 months","timestamp":1553645308,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/217864840/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"8.6 MB","code":"class Solution {\npublic:\n    int n = 9;\n    bool issafe(int r,int c,char val,vector<vector<char>>& board){\n        int r1 = r / 3;\n        int c1 = c / 3;\n        for (int i = 0; i < n;i++) if(board[i][c] ==  val) return 0;\n        for (int j = 0; j < n;j++) if(board[r][j] ==  val) return 0;\n        for (int i = 3 * r1; i < 3 * (r1 + 1); i++){\n            for (int j = 3 * c1; j < 3 * (c1 + 1); j++){\n                if(board[i][j] == val)\n                    return 0;\n            }\n        }\n        return 1;\n    }\n    bool next(int &i,int &j,vector<vector<char>>& board){\n        for (i = 0; i < n;i++) for (j = 0; j < n;j++) if(board[i][j] == '.') return 1;\n            return 0;\n    }\n    bool solve(vector<vector<char>>& board){\n        int r, c;\n        if(!next(r, c,board)) return 1;\n        for (int i = 1; i <= n;i++){\n            char val = '0' + i;\n            if(issafe(r,c,val,board)){\n                board[r][c] = val;\n                if(solve(board) == 1) return 1;\n                else board[r][c] = '.';\n            }\n        }\n        return 0;\n    }\n    void solveSudoku(vector<vector<char>>& board) {\n        bool d = solve(board);\n    }\n};","compare_result":"111111","title_slug":"sudoku-solver"}