{"id":317884086,"lang":"cpp","time":"1 year, 8 months","timestamp":1585678301,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/317884086/","is_pending":"Not Pending","title":"Two City Scheduling","memory":"8.5 MB","code":"class Solution {\npublic:\n    int n;\n    int dp[55][55][110];\n    vector<vector<int>> C;\n    int get(int a,int b,int i){\n        if(dp[a][b][i] !=0) return dp[a][b][i];\n        int cost =0;\n        if(i == n){\n            return 0;\n        }\n        if(a == n/2){\n            return dp[a][b][i] = C[i][1] + get(a,b+1,i+1);\n        }else if(b == n/2){\n            return dp[a][b][i] = C[i][0] + get(a+1,b,i+1);\n        }else{\n            return dp[a][b][i] = min(C[i][1] + get(a,b+1,i+1),C[i][0] + get(a+1,b,i+1));\n        }\n    }\n    int twoCitySchedCost(vector<vector<int>>& costs) {\n        n = costs.size();\n        C = costs;\n        return get(0,0,0);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"two-city-scheduling"}