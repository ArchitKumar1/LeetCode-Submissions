{"id":565308224,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1633302920,"status_display":"Accepted","runtime":"804 ms","url":"/submissions/detail/565308224/","is_pending":"Not Pending","title":"Get the Maximum Score","memory":"168.1 MB","code":"template<class T> ostream& operator<<(ostream &os, set<T> S){os << \"{ \";for(auto s:S) os<<s<<\" \";return os<<\"}\";}\ntemplate<class T> ostream& operator<<(ostream &os, unordered_set<T> S){os << \"{ \";for(auto s:S) os<<s<<\" \";return os<<\"}\";}\ntemplate<class T> ostream& operator << (ostream& os, multiset<T> S){os << \"{ \";for(auto s:S) os<<s<<\" \";return os<<\"}\";}\ntemplate<class L, class R> ostream& operator<<(ostream &os, pair<L,R> P) {return os << \"(\" << P.first << \",\" << P.second << \")\";}\ntemplate<class L, class R> ostream& operator<<(ostream &os, map<L,R> M) {os << \"{ \";for(auto m:M) os<<\"(\"<<m.first<<\":\"<<m.second<<\") \";return os<<\"}\";}\ntemplate<class T> ostream& operator<<(ostream &os,vector<T> V){os<<\"[ \";for(auto v:V)os<<v<<\" \";return os<<\"]\";}\n\n//read\ntemplate<class T> istream& operator>>(istream &is,vector<T> &V){for(auto &x : V) is >> x;return is;}\ntemplate<class T> istream& operator>>(istream &is,vector<vector<T>> &V){for(auto &x : V) is >> x;return is;}\n\n//output \nvoid print(){cout << endl;}template <typename T, typename... Types> void print(T var1, Types... var2){cout << var1 << \" \";  print(var2...);}\n//input \nvoid read(){}template <typename T, typename... Types> void read(T& var1, Types&... var2){cin >> var1; read(var2...);}\n\n\n#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)\ntemplate<typename Arg1>\nvoid __f(const char* name,Arg1&& arg1){cout<<name<<\" : \"<<arg1<<endl;}\ntemplate<typename Arg1,typename... Args>\nvoid __f(const char* names,Arg1&& arg1,Args&&... args){const char* comma=strchr(names+1,',');cout.write(names,comma-names)<<\" : \"<<arg1<<\" | \";__f(comma+1,args...);}\n\n\n\nclass Solution {\npublic:\n    int maxSum(vector<int>& nums1, vector<int>& nums2) {\n        set<int> s1,s2,s3;\n        map<int,int64_t> dp;\n        for(auto x : nums1) s1.insert(x),s3.insert(x);\n        for(auto x : nums2) s2.insert(x),s3.insert(x);\n        \n        const int MOD = 1e9+7;\n        auto in = [&](set<int> &s ,int v) -> bool{\n            return s.find(v) != s.end();\n        };\n        auto solve = [&](set<int> &s,int V,int64_t &ans){\n            if(!in(s,V)) return;\n            auto it1 = s.find(V);\n            if(it1 != s.begin()){\n                it1--;\n                int k = *it1;\n                // trace(V,k);\n                ans = max(ans,dp[k]);\n            }\n            \n        };\n        for(auto it = s3.begin();it != s3.end();it++){\n            int K =  *it;\n            int64_t ans = 0;\n            solve(s1,K,ans);\n            solve(s2,K,ans);\n            dp[K] = ans + K;\n            // trace(K,ans,dp);\n        }\n        auto X = s1.rbegin();\n        auto Y = s2.rbegin();\n        int64_t ans = max(dp[*X],dp[*Y]);\n        return (int)(ans % MOD);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"get-the-maximum-score"}