{"id":214579893,"lang":"cpp","time":"2 years, 9 months","timestamp":1552508349,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/214579893/","is_pending":"Not Pending","title":"Sum of Distances in Tree","memory":"N/A","code":"class Solution {\npublic:\n    int M = 11000;\n    int nodes;\n    \n    \n    void dfs(int s,int par,vector<vector<int>>& G,vector<int> &ans,vector<int> &children){\n        int x = 0,y = 0;\n        for(auto c : G[s]){\n            if(c == par) continue;\n            dfs(c,s,G,ans,children);\n            children[s] += children[c];\n            ans[s] +=  children[c] + ans[c];\n        }\n        children[s] += 1 ; \n        \n    }\n    void dfs2(int s,int par,vector<vector<int>>& G,vector<int> &ans,vector<int> &children){\n        \n        for(auto c : G[s]){\n            if(c == par) continue;\n            ans[c] = ans[s] - children[c] + nodes - children[c];\n            dfs2(c,s,G,ans,children);\n        }\n        \n    }\n    vector<int> sumOfDistancesInTree(int N, vector<vector<int>>& edges) {\n        nodes = N;\n        vector<vector<int> >  G = vector<vector<int> >  (N);\n        vector<int> ans = vector<int>(N);\n        vector<int> children = vector<int>(N);\n        for(auto c: edges){\n            G[c[0]].push_back(c[1]);\n        }\n        dfs(0,-1,G,ans,children);\n        dfs2(0,-1,G,ans,children);\n        vector<int> x;\n        for(int i=0;i<N;i++){\n            x.push_back(ans[i]);\n        }\n        return x;\n        \n    }\n};","compare_result":"110100110000000000000000000000000000000000000000000000000000000000000","title_slug":"sum-of-distances-in-tree"}