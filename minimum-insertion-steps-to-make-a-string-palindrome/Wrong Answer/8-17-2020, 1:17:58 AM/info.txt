{"id":381862607,"lang":"cpp","time":"1 year, 4 months","timestamp":1597607278,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/381862607/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"N/A","code":"class Solution {\npublic:\n    int minInsertions(string s) {\n        int n;\n        n = s.size();\n        int dp[n][n];\n        \n        for(int l = 0;l<n;l++){\n            for(int i =0;i+l<n;i++){\n                int j = i+l;\n                dp[i][j] = INT_MAX;\n                if(i == j) dp[i][j] = 0;\n                else{\n                    if(s[i] == s[j]){\n                        dp[i][j] = dp[i+1][j-1];\n                    }else{\n                        dp[i][j] =1 +  min(dp[i+1][j],dp[i][j-1]);\n                    }\n                }\n            }\n        }\n        return dp[0][n-1];\n    }\n};","compare_result":"111110101111111101101010110111110101110110011011111111101","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome"}