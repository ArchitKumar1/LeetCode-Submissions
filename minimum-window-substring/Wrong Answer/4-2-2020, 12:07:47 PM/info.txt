{"id":318499674,"lang":"cpp","time":"1 year, 8 months","timestamp":1585809467,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/318499674/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        string maxi(1e6,'0');\n        int n = s.length();\n        \n        map <int,int> m1,curr;\n        for(char c : t){\n            m1[c-'A']++;\n        }\n        \n        int i = 0 ;\n        \n        for(int j= 0 ;j<n;j++){\n            \n            curr[s[j]-'A']++;\n            cout << s.substr(i,j-i) << endl;\n            while(curr[s[i]-'A']>m1[s[i]-'A']){\n                curr[s[i]-'A']--;\n                i++;\n            }\n            bool ok = 1;\n            for(int k = 0;k<26;k++){\n                ok&= curr[k]>=m1[k];\n            }\n            if(ok){\n                string temp = s.substr(i,j-i+1) ;\n                if(temp.size() < maxi.size() ){\n                    maxi = temp;\n                }\n            }\n            \n        }\n        return maxi;\n    }\n};","compare_result":"1101010000100000000000000000000000000000000000000000010001000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-window-substring"}