{"id":318513259,"lang":"cpp","time":"1 year, 8 months","timestamp":1585811850,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/318513259/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"8.1 MB","code":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        pair<int,int> ans = {-1,-1};\n        int len = 1e7;\n        int n = s.length();\n        \n        unordered_map <int,int> m1,curr;\n        for(char c : t){\n            m1[c]++;\n        }\n        \n        int i = 0 ;\n        int cnt = t.size();\n        for(int j= 0 ;j<n;j++){\n            \n            \n            curr[s[j]]++;\n            if(m1.find(s[j])!=m1.end()){\n                if(curr[s[j]] <= m1[s[j]]){\n                    cnt--;\n                }\n            }\n            \n            // cout << s.substr(i,j-i) << endl;\n            while(curr[s[i]]>m1[s[i]]){\n                curr[s[i]]--;\n                i++;\n            }\n            if(cnt>0)continue;\n            if(j-i+1 < len ){\n                len = j-i+1;\n                ans = {i,j};\n            }\n            \n            \n        }\n        if(ans == make_pair(-1,-1)){\n            return \"\";\n        }else{\n            return s.substr(ans.first,ans.second-ans.first+1);\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}