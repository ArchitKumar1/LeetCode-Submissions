{"id":209266704,"lang":"cpp","time":"2 years, 10 months","timestamp":1550648248,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/209266704/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"23.3 MB","code":"class NumArray {\npublic:\n    \n    int t[100000] = {0};\n    int n;\n    NumArray(vector<int> nums) {\n        ios_base::sync_with_stdio(false);\n        cin.tie(NULL);\n        cout.tie(NULL);\n        n = nums.size();\n        memset(t,0,sizeof(t));\n        for (int i = 0; i < n; ++i)\n\t\t    t[n+i] = nums[i];\n        for (int i = n - 1; i > 0; --i)\n\t        t[i] = t[2*i] + t[2*i+1];\n    }\n    void update(int p, int value) {\n        p=p+n;\n        for (t[p] = value; p > 1; p >>= 1) \n            t[p>>1] = t[p] + t[p^1];\n    }\n    \n    int sumRange(int l, int r) {\n        r++;\n        int res = 0;\n          l=l+n,r=r+n;\n          for (l,r; l < r; l=l/2, r=r/2) {\n            if (l&1)\n                res += t[l++];\n            if (r&1)\n                res += t[--r];\n          }\n          return res;\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray obj = new NumArray(nums);\n * obj.update(i,val);\n * int param_2 = obj.sumRange(i,j);\n */","compare_result":"1111111111","title_slug":"range-sum-query-mutable"}