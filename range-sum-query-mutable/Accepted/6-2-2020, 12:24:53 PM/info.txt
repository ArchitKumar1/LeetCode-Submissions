{"id":347922739,"lang":"cpp","time":"1 year, 6 months","timestamp":1591080893,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/347922739/","is_pending":"Not Pending","title":"Range Sum Query - Mutable","memory":"24 MB","code":"class NumArray {\npublic:\n    \n    int BIT[100000] = {0};\n    vector<int> N;\n    NumArray(vector<int>& nums) {\n        N = nums;\n        for(int i = 0;i<nums.size();i++) add(i,nums[i]);\n    }\n    void add(int i, int val) {\n        i++;\n        while(i<=100000){\n            BIT[i] += val;\n            i+=(i&-i);\n        }\n    }\n    void update(int i, int val) {\n        add(i,-N[i]);\n        N[i]= val;\n        add(i,val);\n    }\n    int sum(int i){\n        int res =0 ;\n        if(i ==0) return 0;\n        while(i>0){\n            res += BIT[i];\n            i-=(i&-i);\n        }\n        return res;\n    }\n    int sumRange(int i, int j) {\n        \n        return sum(j+1) - sum(i);\n    }\n};\n\n/**\n * Your NumArray object will be instantiated and called as such:\n * NumArray* obj = new NumArray(nums);\n * obj->update(i,val);\n * int param_2 = obj->sumRange(i,j);\n */","compare_result":"1111111111","title_slug":"range-sum-query-mutable"}