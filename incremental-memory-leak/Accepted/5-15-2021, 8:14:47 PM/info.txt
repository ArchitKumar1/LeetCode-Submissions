{"id":493489315,"lang":"cpp","time":"7 months, 1 week","timestamp":1621089887,"status_display":"Accepted","runtime":"444 ms","url":"/submissions/detail/493489315/","is_pending":"Not Pending","title":"Incremental Memory Leak","memory":"6.2 MB","code":"class Solution {\npublic:\n    vector<int> memLeak(int m1, int m2) {\n        priority_queue<pair<int,int>> pq;\n        pq.push({m1,2});\n        pq.push({m2,1});\n        vector<int> ans;\n        for(int i = 1; i <= 400000;i++){\n            pair<int,int>p = pq.top();\n            pq.pop();\n            if(p.first >= i){\n                pq.push({p.first -i ,p.second});\n            }else{\n                pair<int,int>p2 = pq.top();\n                ans = vector<int>(3);\n                ans[0] = i;\n                if(p.second == 2){\n                    ans[1] = p.first;\n                    ans[2] = p2.first;\n                }else{\n                    ans[2] = p.first;\n                    ans[1] = p2.first;\n                }\n                break;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"incremental-memory-leak"}