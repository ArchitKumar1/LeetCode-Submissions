{"id":385084330,"lang":"cpp","time":"1 year, 4 months","timestamp":1598170360,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/385084330/","is_pending":"Not Pending","title":"Most Visited Sector in  a Circular Track","memory":"11.3 MB","code":"class Solution {\npublic:\n    vector<int> mostVisited(int n, vector<int>& rounds) {\n        \n        vector<pair<int,int>> cnt(n,{0,0});\n        for(int i= 0;i<n;i++){\n            cnt[i].second = i;\n        }\n        for(int i = 0;i+1<rounds.size();i++){\n            int x = rounds[i]-1;\n            int y = rounds[i+1]-1;\n            \n            int k = x;\n            \n            while(k!=y){\n                cout << k << endl;\n                cnt[k].first++; \n                k = (k+1)%n;\n            }\n            if(i == rounds.size()-2){\n                cnt[y].first++;\n            }\n        }\n        vector<int>ans;\n        \n        int mv = INT_MIN;\n        for(auto x : cnt ){\n            cout << x.first << \" \" << x.second << endl;\n            mv =max(mv,x.first);\n        }\n        \n        for(auto x : cnt ){\n            if(x.first == mv){\n                ans.push_back(x.second+1);\n            }\n        }\n        cout << endl;\n        return ans;\n            \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"most-visited-sector-in-a-circular-track"}