{"id":201846520,"lang":"cpp","time":"2 years, 11 months","timestamp":1547734816,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/201846520/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"1.1 MB","code":"class Solution {\npublic:\n    int minFallingPathSum(vector<vector<int>>& A) {\n        \n        int n=A[0].size();\n        int dp[n][n];\n        int M=1e6;\n        if(n==1) return A[0][0];\n        memset(dp,0,sizeof(dp));\n        int down,downleft,downright;\n        for(int j=0;j<n;j++){\n            dp[n-1][j]=A[n-1][j];\n        }\n        for(int i=n-2;i>=0;i--){\n            for(int j=0;j<n;j++){\n                if(i == n-1) down=M;\n                else down=dp[i+1][j];\n                if((j == n-1) || (i == n -1)) downright=M;\n                else downright=dp[i+1][j+1];\n                if((j == 0) || (i == n-1))  downleft=M;\n                else downleft=dp[i+1][j-1];\n                dp[i][j]=A[i][j]+min(down,min(downright,downleft));\n            }\n        }\n        int ans=1e7;\n        for(int j = 0; j < n; j++){\n            ans=min(dp[0][j],ans);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum"}