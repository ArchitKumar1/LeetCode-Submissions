{"id":487466999,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1619883136,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/487466999/","is_pending":"Not Pending","title":"Closest Room","memory":"N/A","code":"\nclass Solution {\npublic:\n    vector<int> closestRoom(vector<vector<int>>& rooms, vector<vector<int>>& q) {\n        ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);\n\n        sort(rooms.begin(),rooms.end(),[&](vector<int> a,vector<int>b){\n            return a[1] > b[1];\n        });\n        vector<array<int,3>> queries;\n        int i = 0;\n        for(auto x : q){\n            queries.push_back({x[0],x[1],i++});\n        }\n        sort(queries.begin(),queries.end(),[&](array<int,3> a,array<int,3>b){\n            return a[1] > b[1];\n        });\n        \n        int m = queries.size();\n        int n = rooms.size();\n        int j = 0;\n        set<int> s;\n        vector<int> res(m);\n        for(int i = 0; i <  m;i++){\n            while(j < n && rooms[j][1] >= queries[i][1]){\n                s.insert(rooms[j][0]);\n                j++;\n            }\n            int pref = queries[i][0];\n            int index = queries[i][2];\n            \n            if(s.size() == 0){ res[index] = -1; continue;}\n            // auto it = lower_bound(s.begin(),s.end(),pref);\n            auto it = s.lower_bound(pref);\n            if(it == s.end()){\n                res[index] = *s.rbegin(); continue;\n            }\n            if(it != s.begin()){\n                auto it2 = prev(it);\n                int d1 = abs(pref - *it2);\n                int d2 =  abs(*it - pref);\n                if(d1 <= d2){\n                    res[index] = *it2;\n                }else{\n                    res[index] = *it;\n                }\n            }else{\n                res[index] = *it;\n            }\n        }\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111100000","title_slug":"closest-room"}