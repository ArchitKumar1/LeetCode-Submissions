{"id":564865062,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1633233002,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/564865062/","is_pending":"Not Pending","title":"Smallest K-Length Subsequence With Occurrences of a Letter","memory":"N/A","code":"class Solution {\npublic:\n    string solve(string& S, int K){\n        int N = S.size();\n        stack<char> answer;\n        for (int i = 0; i < N; ++i) {\n            if (answer.empty()) {\n                answer.push(S[i]);\n            }\n            else {\n                while ((!answer.empty())\n                       && (S[i] < answer.top())\n                       && (answer.size() - 1 + N - i >= K)) {\n                    answer.pop();\n                }\n                if (answer.empty() || answer.size() < K) {\n                    answer.push(S[i]);\n                }\n            }\n        }\n        string ret;\n        while (!answer.empty()) {\n            ret.push_back(answer.top());\n            answer.pop();\n        }\n        reverse(ret.begin(), ret.end());\n        return ret;\n    }\n\n    \n    string smallestSubsequence(string s, int k, char letter, int repetition) {\n        // string S = \"aabdaabc\";\n        // int K = 3;\n        // // string ans  = smallestSubsequence(S, K);\n\n        int cnt = 0;\n        string fans = string(k,'z');\n        \n        int n = s.size();\n        int i =0;\n        \n        vector<int> sums(n+1);\n        for(int i = 0;i < n;i++){\n            sums[i+1] = sums[i] + (s[i] == letter);\n        }\n        for(int i = 0;i < n;i++){\n            for(int j = 0;j < n;j++){\n                if( (sums[j+1]- sums[i]) < repetition) continue;\n                string t = s.substr(i,j-i+1);\n                if(t.size() < k) continue;\n                 // cout << t << endl;\n                fans = min(fans,solve(t,k));\n            }\n        }\n//         for(int j = 0;j < n;j++){\n//             if(s[j] == letter){\n//                 cnt += 1;\n//             }\n//             while(i < n && cnt > repetition){\n//                 cnt -= (s[i] == letter);\n//                 i++;\n//             }\n//             if(cnt  == repetition){\n//                 string t = s.substr(i,j-i+1);\n//                 cout << t << endl;\n//                 fans = min(fans,solve(t,k));\n//             }\n            \n//         }\n        return fans;\n    }\n};","compare_result":"10110010111000101011110101000001100000010010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"smallest-k-length-subsequence-with-occurrences-of-a-letter"}