{"id":422577859,"lang":"cpp","time":"1 year, 1 month","timestamp":1605952468,"status_display":"Accepted","runtime":"144 ms","url":"/submissions/detail/422577859/","is_pending":"Not Pending","title":"Count Subtrees With Max Distance Between Cities","memory":"7.7 MB","code":"class Solution {\npublic:\n\n    \n    vector<int> countSubgraphsForEachDiameter(int n, vector<vector<int>>& edges) {        \n        vector<vector<int>> dp(n+1,vector<int>(n+1,1e9));\n        for(auto e : edges){\n            int u = e[0]-1,v = e[1]-1;\n            dp[u][v] = dp[v][u] = (u!=v ? 1 : 0);\n        }\n        for(int k = 0;k<n;k++){\n            for(int i = 0;i<n;i++){\n                for(int j = 0;j<n;j++){\n                    dp[i][j] = min(dp[i][j], dp[i][k]+ dp[k][j]);\n                }\n            }\n        }\n        vector<int> fans(n,0);\n        for(int k = 0;k<(1<<n);k++){\n            int e = 0,no = 0,mx = 0;\n            for(int i = 0;i<n;i++){\n                if(k&(1<<i)) no++;\n                for(int j = i+1;j<n;j++){\n                    if(k&(1<<i) && k&(1<<j)){\n                        if(dp[i][j] == 1){\n                            e += 1;\n                        }\n                        mx = max(mx,dp[i][j]);\n                    }\n                }\n            }\n            if(e == no-1 && mx > 0){\n                fans[mx]++;\n            }\n        }\n        fans.erase(fans.begin());\n        return fans;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"count-subtrees-with-max-distance-between-cities"}