{"id":317853368,"lang":"cpp","time":"1 year, 8 months","timestamp":1585670663,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/317853368/","is_pending":"Not Pending","title":"Minimum Number of Flips to Convert Binary Matrix to Zero Matrix","memory":"10.3 MB","code":"class Solution {\npublic:\n    \n    void p(vector<vector<int>> m,int c){\n        for(auto x : m){\n            for(auto y :x){\n                cout << y << \" \";\n            }\n            cout << endl;\n        }\n        cout << c << endl;\n    }\n    struct s{\n        vector<vector<int>> m;\n        int cost;\n    };\n    int minFlips(vector<vector<int>>& mat) {\n        map<vector<vector<int>>,int>m1;\n        int n = mat.size();\n        int m = mat[0].size();        \n        vector<vector<int>>target(n,vector<int>(m,0));\n        \n        queue<s> qq;\n        qq.push({mat,0});\n        \n        int fans = -1;\n        while(qq.size()){\n            s t = qq.front();qq.pop();\n            if(t.m == target){\n                fans = t.cost;\n                break;\n            }\n            for(int i = 0;i<n;i++){\n                for(int j = 0;j<m;j++){\n                    vector<vector<int>> newmat = t.m;\n                    newmat[i][j]^=1;\n                    for(int x =-1;x<=1;x++){\n                        for(int y=-1;y<=1;y++){\n                            if(x*x + y*y !=1)continue;\n                            int X = i+x;\n                            int Y = j+y;\n                            if(X < 0 || Y < 0 || X >=n || Y>=m  ) continue;\n                            newmat[X][Y]^=1;\n                        }\n                    }\n                    // p(newmat,t.cost);\n                    if(m1[newmat] == 0){\n                        m1[newmat] = 1;\n                        qq.push({newmat,t.cost+1}); \n                    }\n                }\n            }\n        }\n        return fans;\n    }\n};","compare_result":"111111111111111111111111","title_slug":"minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix"}