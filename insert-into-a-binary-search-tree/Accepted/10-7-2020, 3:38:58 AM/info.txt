{"id":405432347,"lang":"cpp","time":"1 year, 2 months","timestamp":1602022138,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/405432347/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"60.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* dfs(TreeNode* root,int val){\n        \n        if(!root) return new TreeNode(val);\n        if(root->val > val) root->left = dfs(root->left,val);\n        if(root->val < val) root->right = dfs(root->right,val);\n        \n        return root;\n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        return dfs(root,val);\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}