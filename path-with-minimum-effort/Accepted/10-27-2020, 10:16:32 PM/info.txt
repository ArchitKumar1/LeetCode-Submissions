{"id":413814926,"lang":"cpp","time":"1 year, 1 month","timestamp":1603817192,"status_display":"Accepted","runtime":"640 ms","url":"/submissions/detail/413814926/","is_pending":"Not Pending","title":"Path With Minimum Effort","memory":"52 MB","code":"class Solution {\npublic:\n    int minimumEffortPath(vector<vector<int>>& h) {\n        int n = h.size();\n        int m = h.front().size();\n        \n        auto safe = [&](int i,int j){\n            return i>=0 && j>=0 && i <n && j<m;\n        };\n        int dx[4] = {0,1,0,-1};\n        int dy[4] = {1,0,-1,0};\n        \n        vector<vector<pair<int,int>>> G(n*m);\n        for(int i = 0 ;i<n;i++){\n            for(int j = 0;j<m;j++){\n                for(int k = 0;k<4;k++){\n                    int x = i + dx[k];\n                    int y = j + dy[k];\n                    if(safe(x,y)){\n                        G[m*i + j].push_back({m*x + y,abs(h[i][j]-h[x][y])});\n                    }\n                }\n            }\n        }\n        vector<int> vis(n*m,0);\n        vector<int> dist(n*m,1e9);\n        dist[0] = 0;\n        priority_queue<pair<int,int> ,vector<pair<int,int>> ,greater<pair<int,int>>> pq;\n        pq.push({0,0});\n        \n        while(pq.size()){\n            auto[x,p] = pq.top();pq.pop();\n            if(vis[p] == 1) continue;\n            vis[p] = 1;\n            for(auto[q,d] : G[p]){\n                if(dist[q] > max(x,d)){\n                    dist[q] =  max(x,d);\n                    pq.push({dist[q],q});\n                }\n            }\n        }\n        // for(int i = 0 ;i<n;i++){\n        //     for(int j = 0;j<m;j++){\n        //         cout << dist[m*i+j] << \" \";\n        //     }\n        //     cout << endl;\n        // }\n        return dist[n*m-1];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-with-minimum-effort"}