{"id":305238790,"lang":"cpp","time":"1 year, 10 months","timestamp":1582230320,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/305238790/","is_pending":"Not Pending","title":"Maximum Product of Splitted Binary Tree","memory":"58.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int totalsum = 0;\n    int mod = 1e9+7;\n    long long int ans = 0;\n    int dfs(TreeNode* root){\n        if(!root) return 0;\n        int nodesum = (root->val + dfs(root->left) + dfs(root->right))%mod;\n        return nodesum;\n    }\n    int dfs2(TreeNode* root){\n        if(!root) return 0;\n        int nodesum = (root->val + dfs2(root->left) + dfs2(root->right))%mod;\n        ans = max(ans,(long long)(totalsum - nodesum)*nodesum);\n        return nodesum;\n    }\n    int maxProduct(TreeNode* root) {\n        totalsum = dfs(root);\n        dfs2(root);\n        return ans%mod;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-of-splitted-binary-tree"}