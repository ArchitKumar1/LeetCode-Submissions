{"id":472503515,"lang":"cpp","time":"9Â months","timestamp":1616725055,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/472503515/","is_pending":"Not Pending","title":"Smallest Sufficient Team","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> smallestSufficientTeam(vector<string>& req_skills, vector<vector<string>>& people) {\n        map<string,int> m1;\n        int pos = 0;\n        for(string s : req_skills) m1[s] = pos++;\n        \n        int n = people.size();\n        int m = req_skills.size();\n        \n        vector<long long> peop(n);\n        \n        for(int i =0;i<n;i++){\n            for(auto s :people[i] ){\n                peop[i] |= 1LL << (m1[s]);\n            }\n        }\n        vector<long long> dp(1 << m,1e9);\n        vector<long long> sol(1 << m,0);\n        dp[0] = 0;\n        for(int p = 0;p<n;p++){\n            vector<long long> ndp = dp;\n            for(int i = 0;i < 1LL << m ;i++){\n                int next = i | peop[p];\n                if(ndp[next] >  1 + dp[i] ){\n                    ndp[next] = 1 + dp[i];\n                    sol[next] = sol[i] | (1 << p);\n                }\n            }\n            swap(ndp,dp);\n        }\n        cout << dp[-1 + (1 << m)];\n        vector<int> ans;\n        int val = sol.back();\n        for(int i = 0; i < m;i++ ){\n            // cout << bitset<4>(sol[i]) << \" \";\n            if (val>>i&1){\n                ans.push_back(i);\n            }\n        }\n        return ans;\n    }\n};","compare_result":"11000010000000000000000000000000000000","title_slug":"smallest-sufficient-team"}