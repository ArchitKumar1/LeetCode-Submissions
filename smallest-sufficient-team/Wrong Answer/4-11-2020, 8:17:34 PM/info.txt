{"id":323119852,"lang":"cpp","time":"1 year, 8 months","timestamp":1586616454,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/323119852/","is_pending":"Not Pending","title":"Smallest Sufficient Team","memory":"N/A","code":"class Solution {\npublic:\n    map<string,long long int> m1;\n    vector<long long int> p;\n    long long int REQ = 0;\n    long long int MS;\n    long long int N;\n    long long int FANS = 0;\n    long long int bits = 1e9;\n    long long int solve(long long int cnt,long long int mask,long long int group){\n        // cout << cnt << \" \" << mask << endl;\n        if(cnt == N){\n            if(mask!=REQ) return 1e9;\n            \n        }\n        if(mask == REQ) {\n            long long int currbits = __builtin_popcount(group);\n            if(currbits < bits){\n                bits = currbits;\n                FANS = group;\n            }\n            return 0;\n        }\n        \n        long long int found =(( (1LL<<MS) - 1) ^ mask) & p[cnt];\n        // cout << mask << \" \" << p[cnt] << \" \"<< found << endl;\n        long long int newm = 0;\n        if(found){\n            newm = mask | p[cnt];\n            return min(solve(cnt + 1,mask,group),1 + solve(cnt + 1,newm,group|=(1LL<<cnt)));\n        }else{\n            return solve(cnt+1,mask,group);\n        }    \n    }\n    vector<int> smallestSufficientTeam(vector<string>& rs, vector<vector<string>>& people) {\n        \n        N = people.size();\n        for(auto v : people){\n            for(string s : v){\n                if(m1[s] == 0){\n                    m1[s] = ++MS;\n                }\n            }\n        }\n        \n        for(auto v : people){\n            long long int temp = 0LL;\n            for(auto s : v){\n                temp |= (1LL << (m1[s]-1));\n            }\n            p.push_back(temp);\n            temp = 0LL;\n        }\n        \n        for(string s :rs){\n            REQ |= (1LL << (m1[s]-1));\n        }\n\n        cout << \"SOLVE : \" << solve(0LL,0LL,0LL) << endl;\n        cout << \"FANS : \" << FANS << endl;\n        \n        vector<int> uans;\n        for(int i = 0;i<N;i++){\n            if((FANS & (1LL << i)) >=1) {\n                uans.push_back(i);\n            }\n        }\n        return uans;\n    }\n};","compare_result":"1111111100111100011110011110011100000","title_slug":"smallest-sufficient-team"}