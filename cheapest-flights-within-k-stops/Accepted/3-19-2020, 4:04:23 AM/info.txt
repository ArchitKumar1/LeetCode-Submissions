{"id":313710784,"lang":"cpp","time":"1 year, 9 months","timestamp":1584570863,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/313710784/","is_pending":"Not Pending","title":"Cheapest Flights Within K Stops","memory":"11.9 MB","code":"class Solution {\npublic:\n    struct node{\n        int f,t,cnt,tcost;\n    };\n    int findCheapestPrice(int n, vector<vector<int>>& fl, int src, int dst, int K) {\n        vector<vector<pair<int,int>>> all(n);\n        for(vector v : fl){\n            all[v[0]].emplace_back(v[1],v[2]);\n        }\n        vector<int> least(n,INT_MAX);\n        vector<int> vis(n,0);\n        queue<node>qq;\n        int cost = INT_MAX;\n        qq.push({0,src,0,0});\n        \n        while(qq.size()){\n            node temp = qq.front();qq.pop();\n            // if(vis[temp.t]  == 1)continue;\n            // vis[temp.t] = 1;\n            if(temp.cnt > K+1) continue;\n            if(least[temp.t] < temp.tcost){\n                continue;\n            }\n            least[temp.t] = temp.tcost;\n            if(temp.t == dst){\n                cost = min(cost,temp.tcost);\n            }\n            for(pair<int,int> p :all[temp.t] ){\n                qq.push({temp.t,p.first,temp.cnt + 1,temp.tcost+p.second});\n            }\n        }\n        return (cost !=INT_MAX ? cost : -1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"cheapest-flights-within-k-stops"}