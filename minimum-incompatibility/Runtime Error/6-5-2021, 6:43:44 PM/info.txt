{"id":503359037,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1622898824,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/503359037/","is_pending":"Not Pending","title":"Minimum Incompatibility","memory":"N/A","code":"class Solution {\npublic:\n    int minimumIncompatibility(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        int m = n/k;\n        \n        vector<int> is(1 << n);\n        for(int i = 0;i < 1 << n;i++){\n            int mx = -1e9,mn = 1e9;\n            for(int j = 0;j < n;j++){\n                if( i >>j & 1){\n                    mx = max(mx,nums[j]);\n                    mn = min(mn,nums[j]);\n                }      \n            }\n            is[i] = mx - mn;\n        }\n        vector<bool> safe(1 << n);\n        for(int i = 0;i < 1 << n;i++){\n            unordered_set<int> st;\n            for(int j = 0;j < n;j++){\n                if( i >> j & 1){\n                     st.insert(nums[j]);\n                }\n            }\n            safe[i] = (st.size() == __builtin_popcount(i));\n        }\n        vector<vector<int>> submasks(1 << n);\n        for(int i = 0;i < 1 << n;i++){\n            int bits = __builtin_popcount(i);\n            submasks[bits].push_back(i);\n        }\n        \n        vector<int> dp(1<<n,1e9);\n        dp[0] = 0;\n        \n        for(int i = 1;i < (1 << n) ;i++){\n            int bits = __builtin_popcount(i);\n            if(bits % m) continue;\n            \n            int turn = bits/m;\n            // if(turn == 1){\n            //     if(safe[i]) {\n            //         dp[i] = min(dp[i] , dp[0] + is[i]);\n            //     }\n            // }\n            if(bits < m) continue;\n            for(auto s : submasks[bits-m]){\n                if(safe[i - s]) dp[i] = min(dp[i] , dp[s] + is[i-s]);\n            }\n            // for(int s = i ; s; s = (s-1)&i){                \n            //     int bitss = __builtin_popcount(s);\n            //     if(bitss % m) continue;\n            //     if((bits-bitss) != m) continue;\n            //     if(safe[i-s]) dp[i] = min(dp[i] , dp[s] + is[i-s]);\n            // }\n        }\n        return dp.back() >= 1e9 ? -1 : dp.back();\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000","title_slug":"minimum-incompatibility"}