{"id":503367436,"lang":"cpp","time":"6 months, 3 weeks","timestamp":1622900283,"status_display":"Accepted","runtime":"508 ms","url":"/submissions/detail/503367436/","is_pending":"Not Pending","title":"Minimum Incompatibility","memory":"35.8 MB","code":"class Solution {\npublic:\n    int minimumIncompatibility(vector<int>& nums, int k) {\n        \n        int n = nums.size();\n        int m = n/k;\n        \n        vector<int> is(1 << n);\n        for(int i = 0;i < 1 << n;i++){\n            int mx = -1e9,mn = 1e9;\n            for(int j = 0;j < n;j++){\n                if( i >>j & 1){\n                    mx = max(mx,nums[j]);\n                    mn = min(mn,nums[j]);\n                }      \n            }\n            is[i] = mx - mn;\n        }\n        vector<bool> safe(1 << n);\n        for(int i = 0;i < 1 << n;i++){\n            int ma = 0;\n            bool sa = 1;\n            for(int j = 0;j < n;j++){\n                if( i >> j & 1){\n                     if( ma >> nums[j] & 1){\n                         sa = 0;\n                         break;\n                     }else{\n                         ma |= (1 << nums[j]);\n                     }\n                }\n            }\n            safe[i] = sa;\n        }\n        vector<vector<int>> submasks(1 << n);\n        // for(int i = 0;i < 1 << n;i++){\n        //     int bits = __builtin_popcount(i);\n        //     submasks[bits].push_back(i);\n        // }\n        \n        vector<int> dp(1<<n,1e9);\n        dp[0] = 0;\n        \n        for(int i = 1;i < (1 << n) ;i++){\n            int bits = __builtin_popcount(i);\n            if(bits % m) continue;\n            // for(auto s : submasks[bits-m]){\n            //     if((i == (i|s)) && safe[i - s]) dp[i] = min(dp[i] , dp[s] + is[i-s]);\n            // }\n            if(bits == m){\n                if(safe[i]) dp[i] = min(dp[i] ,is[i]);\n            }\n            for(int s = i;s;s=(s-1)&i){\n                int bits2 = __builtin_popcount(s);\n                if((bits - bits2) == m && safe[i - s]) dp[i] = min(dp[i] , dp[s] + is[i-s]);\n            }\n        }\n        return dp.back() >= 1e9 ? -1 : dp.back();\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"minimum-incompatibility"}