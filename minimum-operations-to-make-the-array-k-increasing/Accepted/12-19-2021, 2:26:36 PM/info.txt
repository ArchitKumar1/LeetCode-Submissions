{"id":603947116,"lang":"cpp","time":"4 days, 22 hours","timestamp":1639904196,"status_display":"Accepted","runtime":"360 ms","url":"/submissions/detail/603947116/","is_pending":"Not Pending","title":"Minimum Operations to Make the Array K-Increasing","memory":"144 MB","code":"class Solution {\npublic:\n    int kIncreasing(vector<int>& arr, int k) {\n        int ans = 0;\n        vector<vector<int>> arrs(k);\n        \n        auto lcs = [&](vector<int>& nums){\n            int n = nums.size();\n            vector<int> vec;\n            for(int c : nums){\n                auto it = upper_bound(vec.begin(),vec.end(),c);\n                if(it == vec.end()) vec.push_back(c);\n                else{\n                    int pos = it-vec.begin();\n                    vec[pos] = c;\n                }\n            }\n            return vec.size();\n            \n        };\n        \n        for(int i = 0;i < arr.size();i++){\n            arrs[i%k].push_back(arr[i]);\n        }\n        for(auto v : arrs){\n            ans += v.size() - lcs(v);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-make-the-array-k-increasing"}