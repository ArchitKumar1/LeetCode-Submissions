{"id":490718769,"lang":"cpp","time":"7 months, 2 weeks","timestamp":1620537245,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/490718769/","is_pending":"Not Pending","title":"Maximum Subarray Min-Product","memory":"N/A","code":"class Solution {\npublic:\n    int maxSumMinProduct(vector<int>& nums) {\n        int N = nums.size();\n        int MOD = 1e9+7;\n        vector<long long> sums(N+1);\n        for(int i = 0; i < N;i++){\n            sums[i+1] = sums[i] + nums[i];\n        }\n        \n        vector<int> l(N),r(N);\n        {stack<int> st;\n            st.push(-1);\n\n             for(int i = 0;i < N;i++){\n                while(st.top()!= -1 && nums[st.top()] >= nums[i]){\n                    st.pop();\n                }\n                l[i] = st.top()+1;\n                st.push(i);\n            }\n        }\n        {stack<int> st;\n            st.push(N);\n            \n            for(int i = N-1;~i;i--){\n                while(st.top()!= N && nums[st.top()] >= nums[i]){\n                    st.pop();\n                }\n                r[i] = st.top()-1;\n                st.push(i);\n            }\n        }\n        long long ans = 0;\n        for(int i = 0;i <N;i++){\n            int sumr = sums[r[i]+1];\n            int suml = sums[l[i]];\n            ans = max(ans,nums[i]*1LL*(sumr -suml));\n        }\n        return ans % MOD;\n    }\n};","compare_result":"11111111111111111111110000000000000000000","title_slug":"maximum-subarray-min-product"}