{"id":368046247,"lang":"python3","time":"1 year, 5 months","timestamp":1595030970,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/368046247/","is_pending":"Not Pending","title":"Longest Increasing Path in a Matrix","memory":"N/A","code":"class Solution:\n    def longestIncreasingPath(self, matrix):\n        matrix = {i + j*1j: val\n                  for i, row in enumerate(matrix)\n                  for j, val in enumerate(row)}\n        length = {}\n        for z in sorted(matrix, key=matrix.get):\n            length[z] = 1 + max([length[Z]\n                                 for Z in z+1, z-1, z+1j, z-1j\n                                 if Z in matrix and matrix[z] > matrix[Z]]\n                                or [0])\n        return max(length.values() or [0])","compare_result":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-increasing-path-in-a-matrix"}