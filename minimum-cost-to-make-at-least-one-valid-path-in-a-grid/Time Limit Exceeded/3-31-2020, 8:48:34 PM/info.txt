{"id":317842816,"lang":"cpp","time":"1 year, 8 months","timestamp":1585667914,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/317842816/","is_pending":"Not Pending","title":"Minimum Cost to Make at Least One Valid Path in a Grid","memory":"N/A","code":"class Solution {\npublic:\n    struct s{\n        int c,x,y;\n        bool operator>(const s &o) const{\n            return c > o.c;\n        }\n        bool operator<(const s &o) const{\n            return c < o.c;\n        }\n    };\n    \n    int minCost(vector<vector<int>>& g) {\n        int n = g.size();\n        int m = g[0].size();\n        priority_queue<s,vector<s>,greater<s>> pq;\n        vector<vector<int>> vis(n,vector<int>(m,0));\n        int dir[4][2]= {{0,1},{0,-1},{1,0},{-1,0}};\n        pq.push({0,0,0});\n        while(pq.size()){\n            s t = pq.top();\n            pq.pop();\n            vis[t.x][t.y] = 1;\n            if(t.x == n-1 && t.y == m-1){\n                return t.c;\n            }\n            for(int i = 0;i<4;i++){\n                int X = t.x + dir[i][0];\n                int Y = t.y + dir[i][1];\n                if(X < 0 || Y<0 ||X>=n||Y>=m) continue;\n                if(i == g[t.x][t.y]-1){\n                    pq.push({t.c,X,Y});\n                }else{\n                    pq.push({t.c+1,X,Y});\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-cost-to-make-at-least-one-valid-path-in-a-grid"}