{"id":385115357,"lang":"cpp","time":"1 year, 4 months","timestamp":1598177055,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/385115357/","is_pending":"Not Pending","title":"Find Latest Group of Size M","memory":"N/A","code":"class Solution {\npublic:\n    \n    vector<int> par,sz,val;\n    vector<set<int>> pos;\n    int ans = -1;\n    int m;\n    int n;\n    \n    int f(int v){\n        return (par[v] == v ? v : par[v] = f(par[v]));\n    }\n    void merge(int a,int b,int i,int type){\n        \n        cout << a << \" \" << b << endl;\n        a = f(a);\n        b = f(b);\n        \n        cout << a << \" \" << b << endl;\n        int sa = sz[a];\n        int sb = sz[b];\n        \n        cout << sz[a] << \" \" << sz[b] << endl;\n        \n         \n        \n        if(a > b){\n            swap(a,b);\n        }\n        sz[a] += sz[b] + type;\n        par[b] =a;\n        \n        pos[sz[a]].insert(a); \n        cout << sz[a]  << \" \" << a << endl;\n        cout << \"done\" << endl;\n        \n    }\n    bool valid(int i){\n        return i>=0 && i<n && val[i] == 1;\n    }\n    int findLatestStep(vector<int>& arr, int m) {\n        \n        this->m = m;\n        n = arr.size();\n        par.assign(n,0);\n        sz.assign(n,0);\n        pos.resize(m+n);\n        val.assign(n+1,0);\n        \n        for(int i = 0;i<n;i++){\n            par[i] = i;\n        }\n        \n        for(int i =0;i<n;i++){\n            \n            int p = arr[i]-1;\n            val[p] = 1;\n            sz[p] = 1;\n            pos[1].insert(p);\n            \n            if(valid(p-1) && valid(p+1)){\n                merge(p-1,p+1,i,1);\n            }\n            else if(valid(p-1)){\n                merge(p,p-1,i,0);\n                \n            }else if(valid(p+1)){\n                merge(p,p+1,i,0);\n                    \n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"010001000001100011101101000110110000000110111101110111001111111111111011101111111011111011111111001111111111100000","title_slug":"find-latest-group-of-size-m"}